var N = null;var searchIndex = {};
searchIndex["abomonation"]={"doc":"Abomonation (spelling intentional) is a fast serialization…","items":[[5,"encode","abomonation","Encodes a typed reference into a binary buffer.",N,[[["t"],["w"]],["ioresult"]]],[5,"decode","","Decodes a mutable binary slice into an immutable typed…",N,N],[5,"measure","","Reports the number of bytes required to encode `self`.",N,[[["t"]],["usize"]]],[0,"abomonated","","",N,N],[3,"Abomonated","abomonation::abomonated","A type wrapping owned decoded abomonated data.",N,N],[11,"new","","Attempts to create decoded data from owned mutable bytes.",0,[[["s"]],["option"]]],[11,"as_bytes","","",0,N],[8,"Abomonation","abomonation","Abomonation provides methods to serialize any heap data…",N,N],[11,"entomb","","Write any additional information about `&self` beyond its…",1,[[["self"],["w"]],["ioresult"]]],[11,"exhume","","Recover any information for `&mut self` not evident from…",1,N],[11,"extent","","Reports the number of further bytes required to entomb…",1,[[["self"]],["usize"]]],[14,"unsafe_abomonate","","The `unsafe_abomonate!` macro takes a type name with an…",N,N],[11,"from","abomonation::abomonated","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["t"]]]],"paths":[[3,"Abomonated"],[8,"Abomonation"]]};
searchIndex["abomonation_derive"]={"doc":"","items":[[24,"Abomonation","abomonation_derive","",N,N]],"paths":[]};
searchIndex["alg3_dynamic"]={"doc":"An incremental implementation of worst-case optimal joins.","items":[[3,"Index","alg3_dynamic","A multiversion multimap from `Key` to `Val`.",N,N],[3,"IndexStream","","An index materialized from streamed updates.",N,N],[12,"handle","","Times completely absorded into the index.",0,N],[12,"index","","The index itself.",0,N],[12,"hash","","A map from keys to u64 values, for distribution.",0,N],[5,"advance","","Reports the number of elements satisfing the predicate.",N,N],[11,"new","","Allocates a new empty index.",1,[[],["self"]]],[11,"count","","Updates entries of `data` to reflect counts in the index.",1,[[["self"],["vec"],["k"],["valid"],["u64"]]]],[11,"propose","","Proposes extensions for prefixes based on the index.",1,[[["self"],["vec"],["k"],["valid"]]]],[11,"intersect","","Restricts extensions for prefixes to those found in the…",1,[[["self"],["vec"],["f"],["valid"]]]],[11,"merge_to","","Commits updates up to and including `time`.",1,[[["self"],["t"]]]],[11,"update","","Introduces a collection of updates at various times.",1,[[["self"],["t"],["vec"]]]],[11,"initialize","","Sets an initial collection of positive counts, which we…",1,[[["self"],["vec"]]]],[11,"extend_using","","Extends an `IndexStream` using the supplied functions.",0,[[["self"],["l"],["f"]],["rc",["indexextender"]]]],[11,"from","","Constructs an `IndexStream` from initial data and update…",0,[[["h"],["stream"],["stream"]],["self"]]],[0,"motif","","Construction of dataflow for general graph motifs.",N,N],[3,"GraphStreamIndexHandle","alg3_dynamic::motif","Handles to the forward and reverse graph indices.",N,N],[3,"GraphStreamIndex","","Indices and updates for a graph stream.",N,N],[12,"forward","","",2,N],[12,"reverse","","",2,N],[6,"Node","","",N,N],[6,"Edge","","",N,N],[11,"merge_to","","Merges both handles up to the specified time, compacting…",3,[[["self"],["t"]]]],[11,"from","","Constructs a new graph stream index from initial edges and…",2,N],[11,"from_separately","","Constructs a new graph stream index from initial edges and…",2,N],[11,"from_separately_static","","Constructs a new graph stream index from initial edges and…",2,N],[11,"track_motif","","Constructs a dataflow subgraph to track a described motif.",2,N],[11,"build_motif","","Constructs a dataflow subgraph to track a described motif.",2,N],[8,"StreamPrefixExtender","alg3_dynamic","Functionality used by GenericJoin to extend prefixes with…",N,N],[16,"Prefix","","The type of data to extend.",4,N],[16,"Extension","","The type of the extentions.",4,N],[10,"count","","Updates each prefix with an upper bound on the number of…",4,[[["self"],["stream"],["u64"]],["stream"]]],[10,"propose","","Proposes each extension from this relation.",4,[[["self"],["stream"]],["stream"]]],[10,"intersect","","Restricts proposals by those this relation would propose.",4,[[["self"],["stream"]],["stream"]]],[8,"GenericJoin","","Extension method for generic join functionality.",N,N],[10,"extend","","Extends a stream of prefixes using the supplied prefix…",5,[[["self"],["vec",["box"]]],["stream"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","alg3_dynamic::motif","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]]],"paths":[[3,"IndexStream"],[3,"Index"],[3,"GraphStreamIndex"],[3,"GraphStreamIndexHandle"],[8,"StreamPrefixExtender"],[8,"GenericJoin"]]};
searchIndex["getopts"]={"doc":"Simple getopt alternative.","items":[[3,"Options","getopts","A description of the options that a program can handle.",N,N],[3,"Matches","","The result of checking command line arguments. Contains a…",N,N],[12,"free","","Free string fragments",0,N],[4,"ParsingStyle","","What parsing style to use when parsing arguments.",N,N],[13,"FloatingFrees","","Flags and \"free\" arguments can be freely inter-mixed.",1,N],[13,"StopAtFirstFree","","As soon as a \"free\" argument (i.e. non-flag) is…",1,N],[4,"HasArg","","Describes whether an option has an argument.",N,N],[13,"Yes","","The option requires an argument.",2,N],[13,"No","","The option takes no argument.",2,N],[13,"Maybe","","The option argument is optional.",2,N],[4,"Occur","","Describes how often an option may occur.",N,N],[13,"Req","","The option occurs once.",3,N],[13,"Optional","","The option occurs at most once.",3,N],[13,"Multi","","The option occurs zero or more times.",3,N],[4,"Fail","","The type returned when the command line does not conform…",N,N],[13,"ArgumentMissing","","The option requires an argument but none was passed.",4,N],[13,"UnrecognizedOption","","The passed option is not declared among the possible…",4,N],[13,"OptionMissing","","A required option is not present.",4,N],[13,"OptionDuplicated","","A single occurrence option is being used multiple times.",4,N],[13,"UnexpectedArgument","","There's an argument being passed to a non-argument option.",4,N],[6,"Result","","The result of parsing a command line with a set of options.",N,N],[11,"new","","Create a blank set of options.",5,[[],["options"]]],[11,"parsing_style","","Set the parsing style.",5,[[["self"],["parsingstyle"]],["options"]]],[11,"long_only","","Set or clear \"long options only\" mode.",5,[[["self"],["bool"]],["options"]]],[11,"opt","","Create a generic option group, stating all parameters…",5,[[["self"],["str"],["str"],["str"],["str"],["hasarg"],["occur"]],["options"]]],[11,"optflag","","Create a long option that is optional and does not take an…",5,[[["self"],["str"],["str"],["str"]],["options"]]],[11,"optflagmulti","","Create a long option that can occur more than once and…",5,[[["self"],["str"],["str"],["str"]],["options"]]],[11,"optflagopt","","Create a long option that is optional and takes an…",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"optmulti","","Create a long option that is optional, takes an argument,…",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"optopt","","Create a long option that is optional and takes an argument.",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"reqopt","","Create a long option that is required and takes an argument.",5,[[["self"],["str"],["str"],["str"],["str"]],["options"]]],[11,"parse","","Parse command line arguments according to the provided…",5,[[["self"],["c"]],["result"]]],[11,"short_usage","","Derive a short one-line usage summary from a set of long…",5,[[["self"],["str"]],["string"]]],[11,"usage","","Derive a formatted message from a set of options.",5,[[["self"],["str"]],["string"]]],[11,"usage_with_format","","Derive a custom formatted message from a set of options.…",5,[[["self"],["f"]],["string"]]],[11,"opt_defined","","Returns true if an option was defined",0,[[["self"],["str"]],["bool"]]],[11,"opt_present","","Returns true if an option was matched.",0,[[["self"],["str"]],["bool"]]],[11,"opt_count","","Returns the number of times an option was matched.",0,[[["self"],["str"]],["usize"]]],[11,"opts_present","","Returns true if any of several options were matched.",0,N],[11,"opts_str","","Returns the string argument supplied to one of several…",0,N],[11,"opt_strs","","Returns a vector of the arguments provided to all matches…",0,[[["self"],["str"]],["vec",["string"]]]],[11,"opt_str","","Returns the string argument supplied to a matching option…",0,[[["self"],["str"]],["option",["string"]]]],[11,"opt_default","","Returns the matching string, a default, or `None`.",0,[[["self"],["str"],["str"]],["option",["string"]]]],[11,"opt_get","","Returns some matching value or `None`.",0,[[["self"],["str"]],["result",["option"]]]],[11,"opt_get_default","","Returns a matching value or default.",0,[[["self"],["str"],["t"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["parsingstyle"]],["bool"]]],[11,"eq","","",2,[[["self"],["hasarg"]],["bool"]]],[11,"eq","","",3,[[["self"],["occur"]],["bool"]]],[11,"eq","","",0,[[["self"],["matches"]],["bool"]]],[11,"ne","","",0,[[["self"],["matches"]],["bool"]]],[11,"eq","","",4,[[["self"],["fail"]],["bool"]]],[11,"ne","","",4,[[["self"],["fail"]],["bool"]]],[11,"clone","","",1,[[["self"]],["parsingstyle"]]],[11,"clone","","",2,[[["self"]],["hasarg"]]],[11,"clone","","",3,[[["self"]],["occur"]]],[11,"clone","","",0,[[["self"]],["matches"]]],[11,"clone","","",4,[[["self"]],["fail"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"description","","",4,[[["self"]],["str"]]]],"paths":[[3,"Matches"],[4,"ParsingStyle"],[4,"HasArg"],[4,"Occur"],[4,"Fail"],[3,"Options"]]};
searchIndex["graph_map"]={"doc":"","items":[[0,"graph_map","graph_map","",N,N],[3,"GraphMMap","graph_map::graph_map","",N,N],[11,"nodes","","",0,[[["self"]],["usize"]]],[11,"edges","","",0,N],[11,"new","","",0,[[["str"]],["graphmmap"]]],[0,"typed_map","graph_map","",N,N],[3,"TypedMemoryMap","graph_map::typed_map","",N,N],[11,"new","","",1,[[["string"]],["typedmemorymap"]]],[11,"from","graph_map::graph_map","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","graph_map::typed_map","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"index","","",1,N]],"paths":[[3,"GraphMMap"],[3,"TypedMemoryMap"]]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",6,N],[12,"ipv6mr_interface","","",6,N],[3,"hostent","","",N,N],[12,"h_name","","",7,N],[12,"h_aliases","","",7,N],[12,"h_addrtype","","",7,N],[12,"h_length","","",7,N],[12,"h_addr_list","","",7,N],[3,"iovec","","",N,N],[12,"iov_base","","",8,N],[12,"iov_len","","",8,N],[3,"pollfd","","",N,N],[12,"fd","","",9,N],[12,"events","","",9,N],[12,"revents","","",9,N],[3,"winsize","","",N,N],[12,"ws_row","","",10,N],[12,"ws_col","","",10,N],[12,"ws_xpixel","","",10,N],[12,"ws_ypixel","","",10,N],[3,"linger","","",N,N],[12,"l_onoff","","",11,N],[12,"l_linger","","",11,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",12,N],[3,"itimerval","","",N,N],[12,"it_interval","","",13,N],[12,"it_value","","",13,N],[3,"tms","","",N,N],[12,"tms_utime","","",14,N],[12,"tms_stime","","",14,N],[12,"tms_cutime","","",14,N],[12,"tms_cstime","","",14,N],[3,"servent","","",N,N],[12,"s_name","","",15,N],[12,"s_aliases","","",15,N],[12,"s_port","","",15,N],[12,"s_proto","","",15,N],[3,"protoent","","",N,N],[12,"p_name","","",16,N],[12,"p_aliases","","",16,N],[12,"p_proto","","",16,N],[3,"in_addr","","",N,N],[12,"s_addr","","",17,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",18,N],[12,"imr_interface","","",18,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",19,N],[12,"sa_data","","",19,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",20,N],[12,"sin_port","","",20,N],[12,"sin_addr","","",20,N],[12,"sin_zero","","",20,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",21,N],[12,"sin6_port","","",21,N],[12,"sin6_flowinfo","","",21,N],[12,"sin6_addr","","",21,N],[12,"sin6_scope_id","","",21,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",22,N],[12,"ai_family","","",22,N],[12,"ai_socktype","","",22,N],[12,"ai_protocol","","",22,N],[12,"ai_addrlen","","",22,N],[12,"ai_addr","","",22,N],[12,"ai_canonname","","",22,N],[12,"ai_next","","",22,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",23,N],[12,"nl_pid","","",23,N],[12,"nl_groups","","",23,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",24,N],[12,"sll_protocol","","",24,N],[12,"sll_ifindex","","",24,N],[12,"sll_hatype","","",24,N],[12,"sll_pkttype","","",24,N],[12,"sll_halen","","",24,N],[12,"sll_addr","","",24,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",25,N],[12,"tm_min","","",25,N],[12,"tm_hour","","",25,N],[12,"tm_mday","","",25,N],[12,"tm_mon","","",25,N],[12,"tm_year","","",25,N],[12,"tm_wday","","",25,N],[12,"tm_yday","","",25,N],[12,"tm_isdst","","",25,N],[12,"tm_gmtoff","","",25,N],[12,"tm_zone","","",25,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",26,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",27,N],[12,"dli_fbase","","",27,N],[12,"dli_sname","","",27,N],[12,"dli_saddr","","",27,N],[3,"lconv","","",N,N],[12,"decimal_point","","",28,N],[12,"thousands_sep","","",28,N],[12,"grouping","","",28,N],[12,"int_curr_symbol","","",28,N],[12,"currency_symbol","","",28,N],[12,"mon_decimal_point","","",28,N],[12,"mon_thousands_sep","","",28,N],[12,"mon_grouping","","",28,N],[12,"positive_sign","","",28,N],[12,"negative_sign","","",28,N],[12,"int_frac_digits","","",28,N],[12,"frac_digits","","",28,N],[12,"p_cs_precedes","","",28,N],[12,"p_sep_by_space","","",28,N],[12,"n_cs_precedes","","",28,N],[12,"n_sep_by_space","","",28,N],[12,"p_sign_posn","","",28,N],[12,"n_sign_posn","","",28,N],[12,"int_p_cs_precedes","","",28,N],[12,"int_p_sep_by_space","","",28,N],[12,"int_n_cs_precedes","","",28,N],[12,"int_n_sep_by_space","","",28,N],[12,"int_p_sign_posn","","",28,N],[12,"int_n_sign_posn","","",28,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",29,N],[12,"sigev_signo","","",29,N],[12,"sigev_notify","","",29,N],[12,"sigev_notify_thread_id","","",29,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",30,N],[12,"ipi_spec_dst","","",30,N],[12,"ipi_addr","","",30,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",31,N],[12,"ifa_name","","",31,N],[12,"ifa_flags","","",31,N],[12,"ifa_addr","","",31,N],[12,"ifa_netmask","","",31,N],[12,"ifa_ifu","","",31,N],[12,"ifa_data","","",31,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",32,N],[12,"arp_ha","","",32,N],[12,"arp_flags","","",32,N],[12,"arp_netmask","","",32,N],[12,"arp_dev","","",32,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",33,N],[12,"arp_ha","","",33,N],[12,"arp_flags","","",33,N],[12,"arp_netmask","","",33,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",34,N],[12,"ar_pro","","",34,N],[12,"ar_hln","","",34,N],[12,"ar_pln","","",34,N],[12,"ar_op","","",34,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",35,N],[12,"msg_len","","",35,N],[3,"epoll_event","","",N,N],[12,"events","","",36,N],[12,"u64","","",36,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",37,N],[12,"sun_path","","",37,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",38,N],[3,"utsname","","",N,N],[12,"sysname","","",39,N],[12,"nodename","","",39,N],[12,"release","","",39,N],[12,"version","","",39,N],[12,"machine","","",39,N],[12,"domainname","","",39,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",40,N],[12,"rlim_max","","",40,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",41,N],[12,"gl_pathv","","",41,N],[12,"gl_offs","","",41,N],[12,"gl_flags","","",41,N],[3,"passwd","","",N,N],[12,"pw_name","","",42,N],[12,"pw_passwd","","",42,N],[12,"pw_uid","","",42,N],[12,"pw_gid","","",42,N],[12,"pw_gecos","","",42,N],[12,"pw_dir","","",42,N],[12,"pw_shell","","",42,N],[3,"spwd","","",N,N],[12,"sp_namp","","",43,N],[12,"sp_pwdp","","",43,N],[12,"sp_lstchg","","",43,N],[12,"sp_min","","",43,N],[12,"sp_max","","",43,N],[12,"sp_warn","","",43,N],[12,"sp_inact","","",43,N],[12,"sp_expire","","",43,N],[12,"sp_flag","","",43,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",44,N],[12,"dqb_bsoftlimit","","",44,N],[12,"dqb_curspace","","",44,N],[12,"dqb_ihardlimit","","",44,N],[12,"dqb_isoftlimit","","",44,N],[12,"dqb_curinodes","","",44,N],[12,"dqb_btime","","",44,N],[12,"dqb_itime","","",44,N],[12,"dqb_valid","","",44,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",45,N],[12,"ssi_errno","","",45,N],[12,"ssi_code","","",45,N],[12,"ssi_pid","","",45,N],[12,"ssi_uid","","",45,N],[12,"ssi_fd","","",45,N],[12,"ssi_tid","","",45,N],[12,"ssi_band","","",45,N],[12,"ssi_overrun","","",45,N],[12,"ssi_trapno","","",45,N],[12,"ssi_status","","",45,N],[12,"ssi_int","","",45,N],[12,"ssi_ptr","","",45,N],[12,"ssi_utime","","",45,N],[12,"ssi_stime","","",45,N],[12,"ssi_addr","","",45,N],[12,"ssi_addr_lsb","","",45,N],[12,"ssi_syscall","","",45,N],[12,"ssi_call_addr","","",45,N],[12,"ssi_arch","","",45,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",46,N],[12,"it_value","","",46,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",47,N],[12,"mq_maxmsg","","",47,N],[12,"mq_msgsize","","",47,N],[12,"mq_curmsgs","","",47,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",48,N],[12,"mr_type","","",48,N],[12,"mr_alen","","",48,N],[12,"mr_address","","",48,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",49,N],[12,"if_name","","",49,N],[3,"msginfo","","",N,N],[12,"msgpool","","",50,N],[12,"msgmap","","",50,N],[12,"msgmax","","",50,N],[12,"msgmnb","","",50,N],[12,"msgmni","","",50,N],[12,"msgssz","","",50,N],[12,"msgtql","","",50,N],[12,"msgseg","","",50,N],[3,"sembuf","","",N,N],[12,"sem_num","","",51,N],[12,"sem_op","","",51,N],[12,"sem_flg","","",51,N],[3,"input_event","","",N,N],[12,"time","","",52,N],[12,"type_","","",52,N],[12,"code","","",52,N],[12,"value","","",52,N],[3,"input_id","","",N,N],[12,"bustype","","",53,N],[12,"vendor","","",53,N],[12,"product","","",53,N],[12,"version","","",53,N],[3,"input_absinfo","","",N,N],[12,"value","","",54,N],[12,"minimum","","",54,N],[12,"maximum","","",54,N],[12,"fuzz","","",54,N],[12,"flat","","",54,N],[12,"resolution","","",54,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",55,N],[12,"len","","",55,N],[12,"index","","",55,N],[12,"keycode","","",55,N],[12,"scancode","","",55,N],[3,"input_mask","","",N,N],[12,"type_","","",56,N],[12,"codes_size","","",56,N],[12,"codes_ptr","","",56,N],[3,"ff_replay","","",N,N],[12,"length","","",57,N],[12,"delay","","",57,N],[3,"ff_trigger","","",N,N],[12,"button","","",58,N],[12,"interval","","",58,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",59,N],[12,"attack_level","","",59,N],[12,"fade_length","","",59,N],[12,"fade_level","","",59,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",60,N],[12,"envelope","","",60,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",61,N],[12,"end_level","","",61,N],[12,"envelope","","",61,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",62,N],[12,"left_saturation","","",62,N],[12,"right_coeff","","",62,N],[12,"left_coeff","","",62,N],[12,"deadband","","",62,N],[12,"center","","",62,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",63,N],[12,"period","","",63,N],[12,"magnitude","","",63,N],[12,"offset","","",63,N],[12,"phase","","",63,N],[12,"envelope","","",63,N],[12,"custom_len","","",63,N],[12,"custom_data","","",63,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",64,N],[12,"weak_magnitude","","",64,N],[3,"ff_effect","","",N,N],[12,"type_","","",65,N],[12,"id","","",65,N],[12,"direction","","",65,N],[12,"trigger","","",65,N],[12,"replay","","",65,N],[12,"u","","",65,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",66,N],[12,"dlpi_name","","",66,N],[12,"dlpi_phdr","","",66,N],[12,"dlpi_phnum","","",66,N],[12,"dlpi_adds","","",66,N],[12,"dlpi_subs","","",66,N],[12,"dlpi_tls_modid","","",66,N],[12,"dlpi_tls_data","","",66,N],[3,"Elf32_Ehdr","","",N,N],[12,"e_ident","","",67,N],[12,"e_type","","",67,N],[12,"e_machine","","",67,N],[12,"e_version","","",67,N],[12,"e_entry","","",67,N],[12,"e_phoff","","",67,N],[12,"e_shoff","","",67,N],[12,"e_flags","","",67,N],[12,"e_ehsize","","",67,N],[12,"e_phentsize","","",67,N],[12,"e_phnum","","",67,N],[12,"e_shentsize","","",67,N],[12,"e_shnum","","",67,N],[12,"e_shstrndx","","",67,N],[3,"Elf64_Ehdr","","",N,N],[12,"e_ident","","",68,N],[12,"e_type","","",68,N],[12,"e_machine","","",68,N],[12,"e_version","","",68,N],[12,"e_entry","","",68,N],[12,"e_phoff","","",68,N],[12,"e_shoff","","",68,N],[12,"e_flags","","",68,N],[12,"e_ehsize","","",68,N],[12,"e_phentsize","","",68,N],[12,"e_phnum","","",68,N],[12,"e_shentsize","","",68,N],[12,"e_shnum","","",68,N],[12,"e_shstrndx","","",68,N],[3,"Elf32_Sym","","",N,N],[12,"st_name","","",69,N],[12,"st_value","","",69,N],[12,"st_size","","",69,N],[12,"st_info","","",69,N],[12,"st_other","","",69,N],[12,"st_shndx","","",69,N],[3,"Elf64_Sym","","",N,N],[12,"st_name","","",70,N],[12,"st_info","","",70,N],[12,"st_other","","",70,N],[12,"st_shndx","","",70,N],[12,"st_value","","",70,N],[12,"st_size","","",70,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",71,N],[12,"p_offset","","",71,N],[12,"p_vaddr","","",71,N],[12,"p_paddr","","",71,N],[12,"p_filesz","","",71,N],[12,"p_memsz","","",71,N],[12,"p_flags","","",71,N],[12,"p_align","","",71,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",72,N],[12,"p_flags","","",72,N],[12,"p_offset","","",72,N],[12,"p_vaddr","","",72,N],[12,"p_paddr","","",72,N],[12,"p_filesz","","",72,N],[12,"p_memsz","","",72,N],[12,"p_align","","",72,N],[3,"Elf32_Shdr","","",N,N],[12,"sh_name","","",73,N],[12,"sh_type","","",73,N],[12,"sh_flags","","",73,N],[12,"sh_addr","","",73,N],[12,"sh_offset","","",73,N],[12,"sh_size","","",73,N],[12,"sh_link","","",73,N],[12,"sh_info","","",73,N],[12,"sh_addralign","","",73,N],[12,"sh_entsize","","",73,N],[3,"Elf64_Shdr","","",N,N],[12,"sh_name","","",74,N],[12,"sh_type","","",74,N],[12,"sh_flags","","",74,N],[12,"sh_addr","","",74,N],[12,"sh_offset","","",74,N],[12,"sh_size","","",74,N],[12,"sh_link","","",74,N],[12,"sh_info","","",74,N],[12,"sh_addralign","","",74,N],[12,"sh_entsize","","",74,N],[3,"Elf32_Chdr","","",N,N],[12,"ch_type","","",75,N],[12,"ch_size","","",75,N],[12,"ch_addralign","","",75,N],[3,"Elf64_Chdr","","",N,N],[12,"ch_type","","",76,N],[12,"ch_reserved","","",76,N],[12,"ch_size","","",76,N],[12,"ch_addralign","","",76,N],[3,"ucred","","",N,N],[12,"pid","","",77,N],[12,"uid","","",77,N],[12,"gid","","",77,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",78,N],[12,"mnt_dir","","",78,N],[12,"mnt_type","","",78,N],[12,"mnt_opts","","",78,N],[12,"mnt_freq","","",78,N],[12,"mnt_passno","","",78,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",79,N],[12,"version","","",79,N],[12,"reserved","","",79,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",80,N],[12,"ipi6_ifindex","","",80,N],[3,"arpd_request","","",N,N],[12,"req","","",81,N],[12,"ip","","",81,N],[12,"dev","","",81,N],[12,"stamp","","",81,N],[12,"updated","","",81,N],[12,"ha","","",81,N],[3,"inotify_event","","",N,N],[12,"wd","","",82,N],[12,"mask","","",82,N],[12,"cookie","","",82,N],[12,"len","","",82,N],[3,"dirent","","",N,N],[12,"d_ino","","",83,N],[12,"d_off","","",83,N],[12,"d_reclen","","",83,N],[12,"d_type","","",83,N],[12,"d_name","","",83,N],[3,"dirent64","","",N,N],[12,"d_ino","","",84,N],[12,"d_off","","",84,N],[12,"d_reclen","","",84,N],[12,"d_type","","",84,N],[12,"d_name","","",84,N],[3,"sockaddr_alg","","",N,N],[12,"salg_family","","",85,N],[12,"salg_type","","",85,N],[12,"salg_feat","","",85,N],[12,"salg_mask","","",85,N],[12,"salg_name","","",85,N],[3,"af_alg_iv","","",N,N],[12,"ivlen","","",86,N],[12,"iv","","",86,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",87,N],[12,"aio_lio_opcode","","",87,N],[12,"aio_reqprio","","",87,N],[12,"aio_buf","","",87,N],[12,"aio_nbytes","","",87,N],[12,"aio_sigevent","","",87,N],[12,"aio_offset","","",87,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",88,N],[12,"e_exit","","",88,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",89,N],[12,"tv_usec","","",89,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",90,N],[12,"sa_mask","","",90,N],[12,"sa_flags","","",90,N],[12,"sa_restorer","","",90,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",91,N],[12,"ss_flags","","",91,N],[12,"ss_size","","",91,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",92,N],[12,"si_errno","","",92,N],[12,"si_code","","",92,N],[12,"_pad","","",92,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",93,N],[12,"gl_pathv","","",93,N],[12,"gl_offs","","",93,N],[12,"gl_flags","","",93,N],[3,"statfs","","",N,N],[12,"f_type","","",94,N],[12,"f_bsize","","",94,N],[12,"f_blocks","","",94,N],[12,"f_bfree","","",94,N],[12,"f_bavail","","",94,N],[12,"f_files","","",94,N],[12,"f_ffree","","",94,N],[12,"f_fsid","","",94,N],[12,"f_namelen","","",94,N],[12,"f_frsize","","",94,N],[3,"msghdr","","",N,N],[12,"msg_name","","",95,N],[12,"msg_namelen","","",95,N],[12,"msg_iov","","",95,N],[12,"msg_iovlen","","",95,N],[12,"msg_control","","",95,N],[12,"msg_controllen","","",95,N],[12,"msg_flags","","",95,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",96,N],[12,"cmsg_level","","",96,N],[12,"cmsg_type","","",96,N],[3,"termios","","",N,N],[12,"c_iflag","","",97,N],[12,"c_oflag","","",97,N],[12,"c_cflag","","",97,N],[12,"c_lflag","","",97,N],[12,"c_line","","",97,N],[12,"c_cc","","",97,N],[12,"c_ispeed","","",97,N],[12,"c_ospeed","","",97,N],[3,"flock","","",N,N],[12,"l_type","","",98,N],[12,"l_whence","","",98,N],[12,"l_start","","",98,N],[12,"l_len","","",98,N],[12,"l_pid","","",98,N],[3,"mallinfo","","",N,N],[12,"arena","","",99,N],[12,"ordblks","","",99,N],[12,"smblks","","",99,N],[12,"hblks","","",99,N],[12,"hblkhd","","",99,N],[12,"usmblks","","",99,N],[12,"fsmblks","","",99,N],[12,"uordblks","","",99,N],[12,"fordblks","","",99,N],[12,"keepcost","","",99,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",100,N],[12,"nlmsg_type","","",100,N],[12,"nlmsg_flags","","",100,N],[12,"nlmsg_seq","","",100,N],[12,"nlmsg_pid","","",100,N],[3,"nlmsgerr","","",N,N],[12,"error","","",101,N],[12,"msg","","",101,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",102,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",103,N],[12,"nm_block_nr","","",103,N],[12,"nm_frame_size","","",103,N],[12,"nm_frame_nr","","",103,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",104,N],[12,"nm_len","","",104,N],[12,"nm_group","","",104,N],[12,"nm_pid","","",104,N],[12,"nm_uid","","",104,N],[12,"nm_gid","","",104,N],[3,"nlattr","","",N,N],[12,"nla_len","","",105,N],[12,"nla_type","","",105,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",106,N],[12,"rt_dst","","",106,N],[12,"rt_gateway","","",106,N],[12,"rt_genmask","","",106,N],[12,"rt_flags","","",106,N],[12,"rt_pad2","","",106,N],[12,"rt_pad3","","",106,N],[12,"rt_tos","","",106,N],[12,"rt_class","","",106,N],[12,"rt_pad4","","",106,N],[12,"rt_metric","","",106,N],[12,"rt_dev","","",106,N],[12,"rt_mtu","","",106,N],[12,"rt_window","","",106,N],[12,"rt_irtt","","",106,N],[3,"utmpx","","",N,N],[12,"ut_type","","",107,N],[12,"ut_pid","","",107,N],[12,"ut_line","","",107,N],[12,"ut_id","","",107,N],[12,"ut_user","","",107,N],[12,"ut_host","","",107,N],[12,"ut_exit","","",107,N],[12,"ut_session","","",107,N],[12,"ut_tv","","",107,N],[12,"ut_addr_v6","","",107,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",108,N],[12,"loads","","",108,N],[12,"totalram","","",108,N],[12,"freeram","","",108,N],[12,"sharedram","","",108,N],[12,"bufferram","","",108,N],[12,"totalswap","","",108,N],[12,"freeswap","","",108,N],[12,"procs","","",108,N],[12,"pad","","",108,N],[12,"totalhigh","","",108,N],[12,"freehigh","","",108,N],[12,"mem_unit","","",108,N],[12,"_f","","",108,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",109,N],[12,"msg_stime","","",109,N],[12,"msg_rtime","","",109,N],[12,"msg_ctime","","",109,N],[12,"msg_qnum","","",109,N],[12,"msg_qbytes","","",109,N],[12,"msg_lspid","","",109,N],[12,"msg_lrpid","","",109,N],[3,"stat","","",N,N],[12,"st_dev","","",110,N],[12,"st_ino","","",110,N],[12,"st_nlink","","",110,N],[12,"st_mode","","",110,N],[12,"st_uid","","",110,N],[12,"st_gid","","",110,N],[12,"st_rdev","","",110,N],[12,"st_size","","",110,N],[12,"st_blksize","","",110,N],[12,"st_blocks","","",110,N],[12,"st_atime","","",110,N],[12,"st_atime_nsec","","",110,N],[12,"st_mtime","","",110,N],[12,"st_mtime_nsec","","",110,N],[12,"st_ctime","","",110,N],[12,"st_ctime_nsec","","",110,N],[3,"stat64","","",N,N],[12,"st_dev","","",111,N],[12,"st_ino","","",111,N],[12,"st_nlink","","",111,N],[12,"st_mode","","",111,N],[12,"st_uid","","",111,N],[12,"st_gid","","",111,N],[12,"st_rdev","","",111,N],[12,"st_size","","",111,N],[12,"st_blksize","","",111,N],[12,"st_blocks","","",111,N],[12,"st_atime","","",111,N],[12,"st_atime_nsec","","",111,N],[12,"st_mtime","","",111,N],[12,"st_mtime_nsec","","",111,N],[12,"st_ctime","","",111,N],[12,"st_ctime_nsec","","",111,N],[3,"statfs64","","",N,N],[12,"f_type","","",112,N],[12,"f_bsize","","",112,N],[12,"f_blocks","","",112,N],[12,"f_bfree","","",112,N],[12,"f_bavail","","",112,N],[12,"f_files","","",112,N],[12,"f_ffree","","",112,N],[12,"f_fsid","","",112,N],[12,"f_namelen","","",112,N],[12,"f_frsize","","",112,N],[12,"f_flags","","",112,N],[12,"f_spare","","",112,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",113,N],[12,"f_frsize","","",113,N],[12,"f_blocks","","",113,N],[12,"f_bfree","","",113,N],[12,"f_bavail","","",113,N],[12,"f_files","","",113,N],[12,"f_ffree","","",113,N],[12,"f_favail","","",113,N],[12,"f_fsid","","",113,N],[12,"f_flag","","",113,N],[12,"f_namemax","","",113,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",114,N],[12,"exponent","","",114,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",115,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",116,N],[12,"swd","","",116,N],[12,"ftw","","",116,N],[12,"fop","","",116,N],[12,"rip","","",116,N],[12,"rdp","","",116,N],[12,"mxcsr","","",116,N],[12,"mxcr_mask","","",116,N],[12,"_st","","",116,N],[12,"_xmm","","",116,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",117,N],[12,"r14","","",117,N],[12,"r13","","",117,N],[12,"r12","","",117,N],[12,"rbp","","",117,N],[12,"rbx","","",117,N],[12,"r11","","",117,N],[12,"r10","","",117,N],[12,"r9","","",117,N],[12,"r8","","",117,N],[12,"rax","","",117,N],[12,"rcx","","",117,N],[12,"rdx","","",117,N],[12,"rsi","","",117,N],[12,"rdi","","",117,N],[12,"orig_rax","","",117,N],[12,"rip","","",117,N],[12,"cs","","",117,N],[12,"eflags","","",117,N],[12,"rsp","","",117,N],[12,"ss","","",117,N],[12,"fs_base","","",117,N],[12,"gs_base","","",117,N],[12,"ds","","",117,N],[12,"es","","",117,N],[12,"fs","","",117,N],[12,"gs","","",117,N],[3,"user","","",N,N],[12,"regs","","",118,N],[12,"u_fpvalid","","",118,N],[12,"i387","","",118,N],[12,"u_tsize","","",118,N],[12,"u_dsize","","",118,N],[12,"u_ssize","","",118,N],[12,"start_code","","",118,N],[12,"start_stack","","",118,N],[12,"signal","","",118,N],[12,"u_ar0","","",118,N],[12,"u_fpstate","","",118,N],[12,"magic","","",118,N],[12,"u_comm","","",118,N],[12,"u_debugreg","","",118,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",119,N],[12,"fpregs","","",119,N],[3,"ipc_perm","","",N,N],[12,"__key","","",120,N],[12,"uid","","",120,N],[12,"gid","","",120,N],[12,"cuid","","",120,N],[12,"cgid","","",120,N],[12,"mode","","",120,N],[12,"__seq","","",120,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",121,N],[12,"shm_segsz","","",121,N],[12,"shm_atime","","",121,N],[12,"shm_dtime","","",121,N],[12,"shm_ctime","","",121,N],[12,"shm_cpid","","",121,N],[12,"shm_lpid","","",121,N],[12,"shm_nattch","","",121,N],[3,"termios2","","",N,N],[12,"c_iflag","","",122,N],[12,"c_oflag","","",122,N],[12,"c_cflag","","",122,N],[12,"c_lflag","","",122,N],[12,"c_line","","",122,N],[12,"c_cc","","",122,N],[12,"c_ispeed","","",122,N],[12,"c_ospeed","","",122,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",123,N],[12,"swd","","",123,N],[12,"ftw","","",123,N],[12,"fop","","",123,N],[12,"rip","","",123,N],[12,"rdp","","",123,N],[12,"mxcsr","","",123,N],[12,"mxcr_mask","","",123,N],[12,"st_space","","",123,N],[12,"xmm_space","","",123,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",124,N],[12,"uc_link","","",124,N],[12,"uc_stack","","",124,N],[12,"uc_mcontext","","",124,N],[12,"uc_sigmask","","",124,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",125,N],[12,"f_frsize","","",125,N],[12,"f_blocks","","",125,N],[12,"f_bfree","","",125,N],[12,"f_bavail","","",125,N],[12,"f_files","","",125,N],[12,"f_ffree","","",125,N],[12,"f_favail","","",125,N],[12,"f_fsid","","",125,N],[12,"f_flag","","",125,N],[12,"f_namemax","","",125,N],[3,"sem_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",126,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",N,[[["u8"]],["u8"]]],[5,"CMSG_NXTHDR","","",N,N],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetspeed","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_init","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"uname","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"fallocate64","","",N,N],[5,"posix_fallocate","","",N,N],[5,"posix_fallocate64","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"inotify_rm_watch","","",N,N],[5,"inotify_init","","",N,N],[5,"inotify_init1","","",N,N],[5,"inotify_add_watch","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"mallopt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"Elf64_Sxword","","",N,N],[6,"Elf32_Section","","",N,N],[6,"Elf64_Section","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_ALG","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TOS","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_RECVTOS","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"IPV6_RECVTCLASS","","",N,N],[17,"IPV6_TCLASS","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPTOS_ECN_MASK","","",N,N],[17,"IPTOS_ECN_ECT1","","",N,N],[17,"IPTOS_ECN_ECT0","","",N,N],[17,"IPTOS_ECN_CE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"AF_XDP","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"PF_XDP","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IP_ORIGDSTADDR","","",N,N],[17,"IP_RECVORIGDSTADDR","","",N,N],[17,"IPV6_ORIGDSTADDR","","",N,N],[17,"IPV6_RECVORIGDSTADDR","","",N,N],[17,"IPV6_FLOWINFO","","",N,N],[17,"IPV6_FLOWLABEL_MGR","","",N,N],[17,"IPV6_FLOWINFO_SEND","","",N,N],[17,"IPV6_FLOWINFO_FLOWLABEL","","",N,N],[17,"IPV6_FLOWINFO_PRIORITY","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"MFD_HUGETLB","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"IPTOS_ECN_NOT_ECT","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SOFTWARE","","",N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",N,N],[17,"ALG_SET_KEY","","",N,N],[17,"ALG_SET_IV","","",N,N],[17,"ALG_SET_OP","","",N,N],[17,"ALG_SET_AEAD_ASSOCLEN","","",N,N],[17,"ALG_SET_AEAD_AUTHSIZE","","",N,N],[17,"ALG_OP_DECRYPT","","",N,N],[17,"ALG_OP_ENCRYPT","","",N,N],[17,"IN_ACCESS","","",N,N],[17,"IN_MODIFY","","",N,N],[17,"IN_ATTRIB","","",N,N],[17,"IN_CLOSE_WRITE","","",N,N],[17,"IN_CLOSE_NOWRITE","","",N,N],[17,"IN_CLOSE","","",N,N],[17,"IN_OPEN","","",N,N],[17,"IN_MOVED_FROM","","",N,N],[17,"IN_MOVED_TO","","",N,N],[17,"IN_MOVE","","",N,N],[17,"IN_CREATE","","",N,N],[17,"IN_DELETE","","",N,N],[17,"IN_DELETE_SELF","","",N,N],[17,"IN_MOVE_SELF","","",N,N],[17,"IN_UNMOUNT","","",N,N],[17,"IN_Q_OVERFLOW","","",N,N],[17,"IN_IGNORED","","",N,N],[17,"IN_ONLYDIR","","",N,N],[17,"IN_DONT_FOLLOW","","",N,N],[17,"IN_ISDIR","","",N,N],[17,"IN_ONESHOT","","",N,N],[17,"IN_ALL_EVENTS","","",N,N],[17,"IN_CLOEXEC","","",N,N],[17,"IN_NONBLOCK","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_NFC","","",N,N],[17,"SOL_XDP","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"M_MXFAST","","",N,N],[17,"M_NLBLKS","","",N,N],[17,"M_GRAIN","","",N,N],[17,"M_KEEP","","",N,N],[17,"M_TRIM_THRESHOLD","","",N,N],[17,"M_TOP_PAD","","",N,N],[17,"M_MMAP_THRESHOLD","","",N,N],[17,"M_MMAP_MAX","","",N,N],[17,"M_CHECK_ACTION","","",N,N],[17,"M_PERTURB","","",N,N],[17,"M_ARENA_TEST","","",N,N],[17,"M_ARENA_MAX","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"REG_R8","","",N,N],[17,"REG_R9","","",N,N],[17,"REG_R10","","",N,N],[17,"REG_R11","","",N,N],[17,"REG_R12","","",N,N],[17,"REG_R13","","",N,N],[17,"REG_R14","","",N,N],[17,"REG_R15","","",N,N],[17,"REG_RDI","","",N,N],[17,"REG_RSI","","",N,N],[17,"REG_RBP","","",N,N],[17,"REG_RBX","","",N,N],[17,"REG_RDX","","",N,N],[17,"REG_RAX","","",N,N],[17,"REG_RCX","","",N,N],[17,"REG_RSP","","",N,N],[17,"REG_RIP","","",N,N],[17,"REG_EFL","","",N,N],[17,"REG_CSGSFS","","",N,N],[17,"REG_ERR","","",N,N],[17,"REG_TRAPNO","","",N,N],[17,"REG_OLDMASK","","",N,N],[17,"REG_CR2","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",143,[[["self"]],["dir"]]],[11,"clone","","",144,[[["self"]],["locale_t"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",145,[[["self"]],["file"]]],[11,"clone","","",146,[[["self"]],["fpos_t"]]],[11,"clone","","",147,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["sockaddr"]]],[11,"clone","","",20,[[["self"]],["sockaddr_in"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",22,[[["self"]],["addrinfo"]]],[11,"clone","","",23,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",128,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["sigevent"]]],[11,"clone","","",30,[[["self"]],["in_pktinfo"]]],[11,"clone","","",31,[[["self"]],["ifaddrs"]]],[11,"clone","","",129,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",32,[[["self"]],["arpreq"]]],[11,"clone","","",33,[[["self"]],["arpreq_old"]]],[11,"clone","","",34,[[["self"]],["arphdr"]]],[11,"clone","","",35,[[["self"]],["mmsghdr"]]],[11,"clone","","",36,[[["self"]],["epoll_event"]]],[11,"clone","","",37,[[["self"]],["sockaddr_un"]]],[11,"clone","","",38,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",39,[[["self"]],["utsname"]]],[11,"clone","","",148,[[["self"]],["fpos64_t"]]],[11,"clone","","",40,[[["self"]],["rlimit64"]]],[11,"clone","","",41,[[["self"]],["glob_t"]]],[11,"clone","","",42,[[["self"]],["passwd"]]],[11,"clone","","",43,[[["self"]],["spwd"]]],[11,"clone","","",44,[[["self"]],["dqblk"]]],[11,"clone","","",45,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",46,[[["self"]],["itimerspec"]]],[11,"clone","","",130,[[["self"]],["fsid_t"]]],[11,"clone","","",47,[[["self"]],["mq_attr"]]],[11,"clone","","",48,[[["self"]],["packet_mreq"]]],[11,"clone","","",131,[[["self"]],["cpu_set_t"]]],[11,"clone","","",49,[[["self"]],["if_nameindex"]]],[11,"clone","","",50,[[["self"]],["msginfo"]]],[11,"clone","","",51,[[["self"]],["sembuf"]]],[11,"clone","","",52,[[["self"]],["input_event"]]],[11,"clone","","",53,[[["self"]],["input_id"]]],[11,"clone","","",54,[[["self"]],["input_absinfo"]]],[11,"clone","","",55,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",56,[[["self"]],["input_mask"]]],[11,"clone","","",57,[[["self"]],["ff_replay"]]],[11,"clone","","",58,[[["self"]],["ff_trigger"]]],[11,"clone","","",59,[[["self"]],["ff_envelope"]]],[11,"clone","","",60,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",61,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",62,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",63,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",64,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",65,[[["self"]],["ff_effect"]]],[11,"clone","","",66,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",67,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",69,[[["self"]],["elf32_sym"]]],[11,"clone","","",70,[[["self"]],["elf64_sym"]]],[11,"clone","","",71,[[["self"]],["elf32_phdr"]]],[11,"clone","","",72,[[["self"]],["elf64_phdr"]]],[11,"clone","","",73,[[["self"]],["elf32_shdr"]]],[11,"clone","","",74,[[["self"]],["elf64_shdr"]]],[11,"clone","","",75,[[["self"]],["elf32_chdr"]]],[11,"clone","","",76,[[["self"]],["elf64_chdr"]]],[11,"clone","","",77,[[["self"]],["ucred"]]],[11,"clone","","",78,[[["self"]],["mntent"]]],[11,"clone","","",132,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",133,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",79,[[["self"]],["genlmsghdr"]]],[11,"clone","","",80,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",81,[[["self"]],["arpd_request"]]],[11,"clone","","",82,[[["self"]],["inotify_event"]]],[11,"clone","","",83,[[["self"]],["dirent"]]],[11,"clone","","",84,[[["self"]],["dirent64"]]],[11,"clone","","",85,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",86,[[["self"]],["af_alg_iv"]]],[11,"clone","","",87,[[["self"]],["aiocb"]]],[11,"clone","","",88,[[["self"]],["__exit_status"]]],[11,"clone","","",89,[[["self"]],["__timeval"]]],[11,"clone","","",90,[[["self"]],["sigaction"]]],[11,"clone","","",91,[[["self"]],["stack_t"]]],[11,"clone","","",92,[[["self"]],["siginfo_t"]]],[11,"clone","","",93,[[["self"]],["glob64_t"]]],[11,"clone","","",94,[[["self"]],["statfs"]]],[11,"clone","","",95,[[["self"]],["msghdr"]]],[11,"clone","","",96,[[["self"]],["cmsghdr"]]],[11,"clone","","",97,[[["self"]],["termios"]]],[11,"clone","","",98,[[["self"]],["flock"]]],[11,"clone","","",99,[[["self"]],["mallinfo"]]],[11,"clone","","",100,[[["self"]],["nlmsghdr"]]],[11,"clone","","",101,[[["self"]],["nlmsgerr"]]],[11,"clone","","",102,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",104,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",105,[[["self"]],["nlattr"]]],[11,"clone","","",106,[[["self"]],["rtentry"]]],[11,"clone","","",107,[[["self"]],["utmpx"]]],[11,"clone","","",134,[[["self"]],["sigset_t"]]],[11,"clone","","",108,[[["self"]],["sysinfo"]]],[11,"clone","","",109,[[["self"]],["msqid_ds"]]],[11,"clone","","",110,[[["self"]],["stat"]]],[11,"clone","","",111,[[["self"]],["stat64"]]],[11,"clone","","",112,[[["self"]],["statfs64"]]],[11,"clone","","",113,[[["self"]],["statvfs64"]]],[11,"clone","","",135,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",114,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",115,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",116,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",117,[[["self"]],["user_regs_struct"]]],[11,"clone","","",118,[[["self"]],["user"]]],[11,"clone","","",119,[[["self"]],["mcontext_t"]]],[11,"clone","","",120,[[["self"]],["ipc_perm"]]],[11,"clone","","",121,[[["self"]],["shmid_ds"]]],[11,"clone","","",122,[[["self"]],["termios2"]]],[11,"clone","","",123,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",124,[[["self"]],["ucontext_t"]]],[11,"clone","","",125,[[["self"]],["statvfs"]]],[11,"clone","","",136,[[["self"]],["sem_t"]]],[11,"clone","","",137,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",138,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",139,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",140,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",141,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",142,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",126,[[["self"]],["in6_addr"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"locale_t"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["memmap"]={"doc":"A cross-platform Rust API for memory maps.","items":[[3,"MmapOptions","memmap","",N,N],[12,"stack","","Indicates that the memory map should be suitable for a…",0,N],[3,"Mmap","","A memory-mapped buffer.",N,N],[3,"MmapView","","A view of a memory map.",N,N],[3,"MmapViewSync","","A thread-safe view of a memory map.",N,N],[4,"Protection","","Memory map protection.",N,N],[13,"Read","","A read-only memory map. Writes to the memory map will…",1,N],[13,"ReadWrite","","A read-write memory map. Writes to the memory map will be…",1,N],[13,"ReadCopy","","A read, copy-on-write memory map. Writes to the memory map…",1,N],[13,"ReadExecute","","A readable and executable mapping.",1,N],[11,"write","","Returns `true` if the `Protection` is writable.",1,[[["self"]],["bool"]]],[11,"open","","Opens a file-backed memory map.",2,[[["file"],["protection"]],["result",["mmap"]]]],[11,"open_path","","Opens a file-backed memory map.",2,[[["p"],["protection"]],["result",["mmap"]]]],[11,"open_with_offset","","Opens a file-backed memory map with the specified offset…",2,[[["file"],["protection"],["usize"],["usize"]],["result",["mmap"]]]],[11,"anonymous","","Opens an anonymous memory map.",2,[[["usize"],["protection"]],["result",["mmap"]]]],[11,"anonymous_with_options","","Opens an anonymous memory map with the provided options.",2,[[["usize"],["protection"],["mmapoptions"]],["result",["mmap"]]]],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,[[["self"]],["result"]]],[11,"flush_async","","Asynchronously flushes outstanding memory map…",2,[[["self"]],["result"]]],[11,"flush_range","","Flushes outstanding memory map modifications in the range…",2,[[["self"],["usize"],["usize"]],["result"]]],[11,"flush_async_range","","Asynchronously flushes outstanding memory map…",2,[[["self"],["usize"],["usize"]],["result"]]],[11,"set_protection","","Change the `Protection` this mapping was created with.",2,[[["self"],["protection"]],["result"]]],[11,"len","","Returns the length of the memory map.",2,[[["self"]],["usize"]]],[11,"ptr","","Returns a pointer to the mapped memory.",2,N],[11,"mut_ptr","","Returns a pointer to the mapped memory.",2,N],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",2,N],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",2,N],[11,"into_view","","Creates a splittable mmap view from the mmap.",2,[[["self"]],["mmapview"]]],[11,"into_view_sync","","Creates a thread-safe splittable mmap view from the mmap.",2,[[["self"]],["mmapviewsync"]]],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",3,[[["self"],["usize"]],["result"]]],[11,"restrict","","Restricts the range of the view to the provided offset and…",3,[[["self"],["usize"],["usize"]],["result"]]],[11,"flush","","Flushes outstanding view modifications to disk.",3,[[["self"]],["result"]]],[11,"flush_async","","Asynchronously flushes outstanding memory map view…",3,[[["self"]],["result"]]],[11,"len","","Returns the length of the memory map view.",3,[[["self"]],["usize"]]],[11,"ptr","","Returns a shared pointer to the mapped memory.",3,N],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",3,N],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",3,N],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",3,N],[11,"clone","","Clones the view of the memory map.",3,[[["self"]],["mmapview"]]],[11,"split_at","","Split the view into disjoint pieces at the specified offset.",4,[[["self"],["usize"]],["result"]]],[11,"restrict","","Restricts the range of this view to the provided offset…",4,[[["self"],["usize"],["usize"]],["result"]]],[11,"flush","","Flushes outstanding view modifications to disk.",4,[[["self"]],["result"]]],[11,"flush_async","","Asynchronously flushes outstanding memory map view…",4,[[["self"]],["result"]]],[11,"len","","Returns the length of the memory map view.",4,[[["self"]],["usize"]]],[11,"ptr","","Returns a shared pointer to the mapped memory.",4,N],[11,"mut_ptr","","Returns a mutable pointer to the mapped memory.",4,N],[11,"as_slice","","Returns the memory mapped file as an immutable slice.",4,N],[11,"as_mut_slice","","Returns the memory mapped file as a mutable slice.",4,N],[11,"clone","","Clones the view of the memory map.",4,[[["self"]],["mmapviewsync"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"eq","","",1,[[["self"],["protection"]],["bool"]]],[11,"eq","","",0,[[["self"],["mmapoptions"]],["bool"]]],[11,"ne","","",0,[[["self"],["mmapoptions"]],["bool"]]],[11,"default","","",0,[[],["mmapoptions"]]],[11,"clone","","",1,[[["self"]],["protection"]]],[11,"clone","","",0,[[["self"]],["mmapoptions"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"MmapOptions"],[4,"Protection"],[3,"Mmap"],[3,"MmapView"],[3,"MmapViewSync"]]};
searchIndex["quote"]={"doc":"Quasi-quoting without a Syntex dependency, intended for…","items":[[3,"Tokens","quote","Tokens produced by a `quote!(...)` invocation.",N,N],[3,"ByteStr","","Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.",N,N],[12,"0","","",0,N],[3,"Hex","","Wrap an integer so it interpolates as a hexadecimal.",N,N],[12,"0","","",1,N],[3,"Ident","","An identifier that should be interpolated without quotes.",N,N],[11,"new","","Empty tokens.",2,[[],["self"]]],[11,"append","","For use by `ToTokens` implementations.",2,[[["self"],["t"]]]],[11,"append_all","","For use by `ToTokens` implementations.",2,[[["self"],["i"]]]],[11,"append_separated","","For use by `ToTokens` implementations.",2,[[["self"],["i"],["s"]]]],[11,"append_terminated","","For use by `ToTokens` implementations.",2,[[["self"],["i"],["s"]]]],[11,"as_str","","",2,[[["self"]],["str"]]],[11,"into_string","","",2,[[["self"]],["string"]]],[11,"parse","","",2,[[["self"]],["result"]]],[11,"new","","",3,[[["t"]],["self"]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!(...)`…",N,N],[10,"to_tokens","","Write `self` to the given `Tokens`.",4,[[["self"],["tokens"]]]],[14,"quote","","The whole point.",N,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_tokens","","",0,[[["self"],["tokens"]]]],[11,"to_tokens","","",2,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",3,[[["self"],["tokens"]]]],[11,"eq","","",2,[[["self"],["tokens"]],["bool"]]],[11,"ne","","",2,[[["self"],["tokens"]],["bool"]]],[11,"eq","","",3,[[["self"],["t"]],["bool"]]],[11,"as_ref","","",2,[[["self"]],["str"]]],[11,"as_ref","","",3,[[["self"]],["str"]]],[11,"default","","",2,[[],["self"]]],[11,"clone","","",2,[[["self"]],["tokens"]]],[11,"clone","","",3,[[["self"]],["ident"]]],[11,"from","","",3,[[["str"]],["self"]]],[11,"from","","",3,[[["cow",["str"]]],["self"]]],[11,"from","","",3,[[["string"]],["self"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",3,N]],"paths":[[3,"ByteStr"],[3,"Hex"],[3,"Tokens"],[3,"Ident"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",N,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters…",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly…",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"WeightedIndex","","A distribution using weighted sampling to pick a…",N,N],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",N,N],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the…",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",N,N],[3,"Triangular","","The triangular distribution.",N,N],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",N,N],[3,"DistIter","","An iterator that generates random values of `T` with…",N,N],[3,"Standard","","A generic random value distribution, implemented for many…",N,N],[3,"Weighted","","A value with a particular weight for use with…",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",N,N],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",N,N],[13,"NoItem","","The provided iterator contained no items.",5,N],[13,"NegativeWeight","","A weight lower than zero was used.",5,N],[13,"AllWeightsZero","","All items in the provided iterator had a weight of zero.",5,N],[0,"uniform","","A distribution uniformly sampling numbers within a given…",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct…",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",6,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",7,N],[10,"new","","Construct self, with inclusive lower bound and exclusive…",7,[[["b1"],["b2"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",7,[[["b1"],["b2"]],["self"]]],[10,"sample","","Sample a value.",7,N],[11,"sample_single","","Sample a single value uniformly from a range with…",7,N],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",N,N],[10,"borrow","","Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",9,[[["b1"],["b2"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",10,[[["u32"],["u32"]],["bernoulli"]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],["result",["weightedindex","weightederror"]]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",12,[[],["unitspheresurface"]]],[11,"new","","Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",16,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"],["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",19,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",20,[[["f64"],["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",22,[[["f64"],["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",24,[[["u64"],["f64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"],["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",26,[[["v"]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"],["f64"],["f64"]],["triangular"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"],["f64"]],["weibull"]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",30,N],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[0,"rngs","","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",31,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",31,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",31,N],[13,"TinyVariantions","","Variations of deltas of time too small.",31,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",31,N],[3,"OsRng","","A random number generator that retrieves randomness…",N,N],[3,"EntropyRng","","An interface returning random data from external…",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization…",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",N,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type…",N,N],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",33,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",33,[[["self"]],["result",["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"],["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[3,"SliceChooseIter","rand::seq","Iterator over multiple choices, as returned by…",N,N],[5,"sample_iter","","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[0,"index","","Index sampling",N,N],[4,"IndexVec","rand::seq::index","A vector of indices.",N,N],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",N,N],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",N,N],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",N,[[["r"],["usize"],["usize"]],["indexvec"]]],[11,"len","","Returns the number of indices",36,[[["self"]],["usize"]]],[11,"index","","Return the value at the given `index`.",36,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",36,[[["self"]],["vec",["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",36,[[["self"]],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",N,N],[16,"Item","","The element type.",37,N],[10,"choose","","Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Produces an iterator that chooses `amount` elements from…",37,[[["self"],["r"],["usize"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["r"],["f"]],["result",["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",37,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",37,N],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",N,N],[11,"choose","","Choose one element at random from the iterator. If you…",38,[[["self"],["r"]],["option"]]],[11,"choose_multiple_fill","","Collects `amount` values at random from the iterator into…",38,N],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",38,[[["self"],["r"],["usize"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",N,N],[11,"gen","","Return a random value supporting the [`Standard`]…",39,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",39,[[["self"],["b1"],["b2"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",39,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",39,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",39,[[["self"],["u32"],["u32"]],["bool"]]],[11,"choose","","Return a random element from `values`.",39,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",39,N],[11,"shuffle","","Shuffle a mutable slice in place.",39,N],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",40,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing…",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","rand::rngs","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","rand::rngs::adapter","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","rand::rngs::mock","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into_iter","rand::seq","",57,[[["self"]],["i"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","rand::seq::index","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into_iter","","",58,[[["self"]],["i"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_iter","","",59,[[["self"]],["i"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"next_u32","rand::rngs","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,N],[11,"try_fill_bytes","","",52,N],[11,"clone","","",31,[[["self"]],["timererror"]]],[11,"clone","","",52,[[["self"]],["jitterrng"]]],[11,"eq","","",31,[[["self"],["timererror"]],["bool"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"fmt","rand::rngs","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"read","rand","",0,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","rand::rngs","",53,[[["self"]],["osrng"]]],[11,"next_u32","","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,N],[11,"try_fill_bytes","","",53,N],[11,"fmt","","",53,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","rand::distributions::uniform","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",49,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",49,[[["b1"],["b2"]],["self"]]],[11,"sample","","",49,N],[11,"sample_single","","",49,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",50,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",50,[[["b1"],["b2"]],["self"]]],[11,"sample","","",50,N],[11,"sample_single","","",50,N],[11,"new","","",51,[[["b1"],["b2"]],["self"]]],[11,"new_inclusive","","",51,[[["b1"],["b2"]],["self"]]],[11,"sample","","",51,[[["self"],["r"]],["duration"]]],[11,"sample","","",9,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",10,[[["self"],["r"]],["bool"]]],[11,"sample","","",11,[[["self"],["r"]],["usize"]]],[11,"sample","","",12,N],[11,"sample","","",13,N],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",21,[[["self"],["r"]],["f64"]]],[11,"sample","","",22,[[["self"],["r"]],["f64"]]],[11,"sample","","",23,[[["self"],["r"]],["u64"]]],[11,"sample","","",24,[[["self"],["r"]],["u64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["vec",["f64"]]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",28,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f32"]]],[11,"sample","","",43,[[["self"],["r"]],["f32"]]],[11,"sample","","",44,[[["self"],["r"]],["f32"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["u8"]]],[11,"sample","","",48,[[["self"],["r"]],["u16"]]],[11,"sample","","",48,[[["self"],["r"]],["u32"]]],[11,"sample","","",48,[[["self"],["r"]],["u64"]]],[11,"sample","","",48,[[["self"],["r"]],["u128"]]],[11,"sample","","",48,[[["self"],["r"]],["usize"]]],[11,"sample","","",48,[[["self"],["r"]],["i8"]]],[11,"sample","","",48,[[["self"],["r"]],["i16"]]],[11,"sample","","",48,[[["self"],["r"]],["i32"]]],[11,"sample","","",48,[[["self"],["r"]],["i64"]]],[11,"sample","","",48,[[["self"],["r"]],["i128"]]],[11,"sample","","",48,[[["self"],["r"]],["isize"]]],[11,"sample","","",48,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",48,[[["self"],["r"]],["bool"]]],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,N],[11,"sample","","",48,[[["self"],["r"]],["option"]]],[11,"sample","","",48,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",30,[[["self"],["r"]],["t"]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,N],[11,"next","rand::seq::index","",58,[[["self"]],["option",["usize"]]]],[11,"size_hint","","",58,N],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,N],[11,"next","rand::seq","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"eq","rand::distributions","",5,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",36,[[["self"],["indexvec"]],["bool"]]],[11,"default","rand::rngs","",34,[[],["self"]]],[11,"default","","",56,[[],["threadrng"]]],[11,"clone","rand::distributions::uniform","",9,[[["self"]],["uniform"]]],[11,"clone","","",49,[[["self"]],["uniformint"]]],[11,"clone","","",50,[[["self"]],["uniformfloat"]]],[11,"clone","","",51,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",10,[[["self"]],["bernoulli"]]],[11,"clone","","",11,[[["self"]],["weightedindex"]]],[11,"clone","","",5,[[["self"]],["weightederror"]]],[11,"clone","","",12,[[["self"]],["unitspheresurface"]]],[11,"clone","","",13,[[["self"]],["unitcircle"]]],[11,"clone","","",14,[[["self"]],["gamma"]]],[11,"clone","","",15,[[["self"]],["chisquared"]]],[11,"clone","","",16,[[["self"]],["fisherf"]]],[11,"clone","","",17,[[["self"]],["studentt"]]],[11,"clone","","",18,[[["self"]],["beta"]]],[11,"clone","","",45,[[["self"]],["standardnormal"]]],[11,"clone","","",19,[[["self"]],["normal"]]],[11,"clone","","",20,[[["self"]],["lognormal"]]],[11,"clone","","",46,[[["self"]],["exp1"]]],[11,"clone","","",21,[[["self"]],["exp"]]],[11,"clone","","",22,[[["self"]],["pareto"]]],[11,"clone","","",23,[[["self"]],["poisson"]]],[11,"clone","","",24,[[["self"]],["binomial"]]],[11,"clone","","",25,[[["self"]],["cauchy"]]],[11,"clone","","",26,[[["self"]],["dirichlet"]]],[11,"clone","","",27,[[["self"]],["triangular"]]],[11,"clone","","",28,[[["self"]],["weibull"]]],[11,"clone","","",43,[[["self"]],["openclosed01"]]],[11,"clone","","",44,[[["self"]],["open01"]]],[11,"clone","","",48,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::rngs::adapter","",33,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",35,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",54,[[["self"]],["smallrng"]]],[11,"clone","","",55,[[["self"]],["stdrng"]]],[11,"clone","","",56,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",36,[[["self"]],["indexvec"]]],[11,"clone","","",59,[[["self"]],["indexvecintoiter"]]],[11,"from","rand::distributions::uniform","",9,[[["range"]],["uniform"]]],[11,"from","","",9,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",36,[[["vec",["u32"]]],["self"]]],[11,"from","","",36,[[["vec",["usize"]]],["self"]]],[11,"fmt","rand::distributions::uniform","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::adapter","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs::mock","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::rngs","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq::index","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::seq","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand::distributions","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"next_u32","rand::rngs::adapter","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"try_fill_bytes","","",32,N],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,N],[11,"try_fill_bytes","","",33,N],[11,"next_u32","rand::rngs","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"next_u32","rand::rngs::mock","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,N],[11,"try_fill_bytes","","",35,N],[11,"next_u32","rand::rngs","",54,[[["self"]],["u32"]]],[11,"next_u64","","",54,[[["self"]],["u64"]]],[11,"fill_bytes","","",54,N],[11,"try_fill_bytes","","",54,N],[11,"next_u32","","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,N],[11,"try_fill_bytes","","",55,N],[11,"next_u32","","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,N],[11,"try_fill_bytes","","",56,N],[11,"from_seed","","",54,N],[11,"from_rng","","",54,[[["r"]],["result",["error"]]]],[11,"from_seed","","",55,N],[11,"from_rng","","",55,[[["r"]],["result",["error"]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",3,[[["self"]],["option",["box"]]]],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a…",52,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",52,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",52,N],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",52,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",52,[[["self"],["bool"]],["i64"]]],[11,"new","","Create a new `OsRng`.",53,[[],["result",["osrng","error"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[4,"WeightedError"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"Bernoulli"],[3,"WeightedIndex"],[3,"UnitSphereSurface"],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Distribution"],[3,"WeightedChoice"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"JitterRng"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"]={"doc":"The ChaCha random number generator.","items":[[3,"ChaChaRng","rand_chacha","A cryptographically secure random number generator that…",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from","","",0,[[["chachacore"]],["self"]]],[11,"clone","","",0,[[["self"]],["chacharng"]]],[11,"clone","","",1,[[["self"]],["chachacore"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","",1,N]],"paths":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked…",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing…",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",N,N],[12,"core","","The core part of the RNG, implementing the `generate`…",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types…",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","rand_core::block","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from_seed","","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"from_seed","","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"read","rand_core","",5,N],[11,"next_u32","rand_core::block","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"clone","rand_core::block","",3,[[["self"]],["blockrng"]]],[11,"clone","rand_core","",0,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",4,[[["self"]],["blockrng64"]]],[11,"description","rand_core","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"should_retry","rand_core","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing…",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rand_hc"]={"doc":"The HC128 random number generator.","items":[[3,"Hc128Rng","rand_hc","A cryptographically secure random number generator that…",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["hc128rng"]]],[11,"clone","","",1,[[["self"]],["hc128core"]]],[11,"generate","","",1,N],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The…",1,N]],"paths":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"]={"doc":"The ISAAC and ISAAC-64 random number generators.","items":[[0,"isaac","rand_isaac","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand_isaac::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand_isaac::isaac64","A random number generator that uses ISAAC-64, the 64-bit…",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",1,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",2,[[["u64"]],["self"]]],[11,"try_from","rand_isaac::isaac","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","rand_isaac::isaac64","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"fmt","rand_isaac::isaac","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_isaac::isaac64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","rand_isaac::isaac","",0,[[["self"]],["isaacrng"]]],[11,"clone","","",3,[[["self"]],["isaaccore"]]],[11,"clone","rand_isaac::isaac64","",1,[[["self"]],["isaac64rng"]]],[11,"clone","","",2,[[["self"]],["isaac64core"]]],[11,"generate","rand_isaac::isaac","Refills the output buffer, `results`. See also the…",3,[[["self"],["isaacarray"]]]],[11,"generate","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…",2,[[["self"],["isaacarray"]]]],[11,"next_u32","rand_isaac::isaac","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","rand_isaac::isaac64","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","rand_isaac::isaac","",0,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[11,"from_rng","","",0,[[["s"]],["result",["error"]]]],[11,"from_seed","","",3,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["r"]],["result",["error"]]]],[11,"from_seed","rand_isaac::isaac64","",1,N],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["s"]],["result",["error"]]]],[11,"from_seed","","",2,N],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["r"]],["result",["error"]]]]],"paths":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"IsaacCore"]]};
searchIndex["rand_jitter"]={"doc":"Non-physical true random number generator based on timing…","items":[[3,"JitterRng","rand_jitter","A true random number generator based on jitter in the CPU…",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",N,N],[13,"NoTimer","","No timer available.",0,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",0,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",0,N],[13,"TinyVariantions","","Variations of deltas of time too small.",0,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",0,N],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a…",1,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",1,N],[11,"set_rounds","","Configures how many rounds are used to generate each…",1,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",1,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",1,[[["self"],["bool"]],["i64"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["timererror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["timererror"]]],[11,"clone","","",1,[[["self"]],["jitterrng"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N]],"paths":[[4,"TimerError"],[3,"JitterRng"]]};
searchIndex["rand_os"]={"doc":"Interface to the random number generator of the operating…","items":[[3,"OsRng","rand_os","A random number generator that retrieves randomness…",N,N],[11,"new","","Create a new `OsRng`.",0,[[],["result",["osrng","error"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["osrng"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N]],"paths":[[3,"OsRng"]]};
searchIndex["rand_pcg"]={"doc":"The PCG random number generators.","items":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",N,N],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",N,N],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"],["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",N,N],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64`.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["mcg128xsl64"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,N],[11,"try_fill_bytes","","",1,N],[11,"from_seed","","",0,N],[11,"from_seed","","",1,N]],"paths":[[3,"Lcg64Xsh32"],[3,"Mcg128Xsl64"]]};
searchIndex["rand_xorshift"]={"doc":"The xorshift random number generator.","items":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,N],[11,"try_fill_bytes","","",0,N],[11,"from_seed","","",0,N],[11,"from_rng","","",0,[[["r"]],["result",["error"]]]]],"paths":[[3,"XorShiftRng"]]};
searchIndex["syn"]={"doc":"","items":[[3,"Attribute","syn","Doc-comments are promoted to attributes that have…",N,N],[12,"style","","",0,N],[12,"value","","",0,N],[12,"is_sugared_doc","","",0,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"ident","","Name of the field, if any.",1,N],[12,"vis","","Visibility of the field.",1,N],[12,"attrs","","Attributes tagged on the field.",1,N],[12,"ty","","Type of the field.",1,N],[3,"Variant","","An enum variant.",N,N],[12,"ident","","Name of the variant.",2,N],[12,"attrs","","Attributes tagged on the variant.",2,N],[12,"data","","Type of variant.",2,N],[12,"discriminant","","Explicit discriminant, e.g. `Foo = 1`",2,N],[3,"Generics","","Represents lifetimes and type parameters attached to a…",N,N],[12,"lifetimes","","",3,N],[12,"ty_params","","",3,N],[12,"where_clause","","",3,N],[3,"Lifetime","","",N,N],[12,"ident","","",4,N],[3,"LifetimeDef","","A lifetime definition, e.g. `'a: 'b+'c+'d`",N,N],[12,"attrs","","",5,N],[12,"lifetime","","",5,N],[12,"bounds","","",5,N],[3,"TyParam","","A generic type parameter, e.g. `T: Into<String>`.",N,N],[12,"attrs","","",6,N],[12,"ident","","",6,N],[12,"bounds","","",6,N],[12,"default","","",6,N],[3,"WhereBoundPredicate","","A type bound.",N,N],[12,"bound_lifetimes","","Any lifetimes from a `for` binding",7,N],[12,"bounded_ty","","The type being bounded",7,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",7,N],[3,"WhereClause","","A `where` clause in a definition",N,N],[12,"predicates","","",8,N],[3,"WhereEqPredicate","","An equality predicate (unsupported).",N,N],[12,"lhs_ty","","",9,N],[12,"rhs_ty","","",9,N],[3,"WhereRegionPredicate","","A lifetime predicate.",N,N],[12,"lifetime","","",10,N],[12,"bounds","","",10,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TyGenerics::as_turbofish`.",N,N],[3,"TyGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Ident","","",N,N],[3,"ByteStrLit","","",N,N],[12,"value","","",11,N],[12,"style","","",11,N],[3,"FloatLit","","",N,N],[12,"value","","",12,N],[12,"suffix","","",12,N],[3,"IntLit","","",N,N],[12,"value","","",13,N],[12,"suffix","","",13,N],[3,"StrLit","","",N,N],[12,"value","","",14,N],[12,"style","","",14,N],[3,"Delimited","","",N,N],[12,"delim","","The type of delimiter",15,N],[12,"tts","","The delimited sequence of token trees",15,N],[3,"Mac","","Represents a macro invocation. The Path indicates which…",N,N],[12,"path","","",16,N],[12,"tts","","",16,N],[3,"DeriveInput","","Struct or enum sent to a `proc_macro_derive` macro.",N,N],[12,"ident","","Name of the struct or enum.",17,N],[12,"vis","","Visibility of the struct or enum.",17,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",17,N],[12,"generics","","Generics required to complete the definition.",17,N],[12,"body","","Data within the struct or enum.",17,N],[3,"AngleBracketedParameterData","","A path like `Foo<'a, T>`",N,N],[12,"lifetimes","","The lifetime parameters for this path segment.",18,N],[12,"types","","The type parameters for this path segment, if present.",18,N],[12,"bindings","","Bindings (equality constraints) on associated types, if…",18,N],[3,"BareFnArg","","An argument in a function type.",N,N],[12,"name","","",19,N],[12,"ty","","",19,N],[3,"BareFnTy","","",N,N],[12,"unsafety","","",20,N],[12,"abi","","",20,N],[12,"lifetimes","","",20,N],[12,"inputs","","",20,N],[12,"output","","",20,N],[12,"variadic","","",20,N],[3,"MutTy","","",N,N],[12,"ty","","",21,N],[12,"mutability","","",21,N],[3,"ParenthesizedParameterData","","A path like `Foo(A,B) -> C`",N,N],[12,"inputs","","`(A, B)`",22,N],[12,"output","","`C`",22,N],[3,"Path","","A \"Path\" is essentially Rust's notion of a name.",N,N],[12,"global","","A `::foo` path, is relative to the crate root rather than…",23,N],[12,"segments","","The segments in the path: the things separated by `::`.",23,N],[3,"PathSegment","","A segment of a path: an identifier, an optional lifetime,…",N,N],[12,"ident","","The identifier portion of this path segment.",24,N],[12,"parameters","","Type/lifetime parameters attached to this path. They come…",24,N],[3,"PolyTraitRef","","",N,N],[12,"bound_lifetimes","","The `'a` in `<'a> Foo<&'a T>`",25,N],[12,"trait_ref","","The `Foo<&'a T>` in `<'a> Foo<&'a T>`",25,N],[3,"QSelf","","The explicit Self type in a \"qualified path\". The actual…",N,N],[12,"ty","","",26,N],[12,"position","","",26,N],[3,"TypeBinding","","Bind a type to an associated type: `A=Foo`.",N,N],[12,"ident","","",27,N],[12,"ty","","",27,N],[4,"AttrStyle","","Distinguishes between Attributes that decorate items and…",N,N],[13,"Outer","","Attribute of the form `#![...]`.",28,N],[13,"Inner","","Attribute of the form `#[...]`.",28,N],[4,"MetaItem","","A compile-time attribute item.",N,N],[13,"Word","","Word meta item.",29,N],[13,"List","","List meta item.",29,N],[13,"NameValue","","Name-value meta item.",29,N],[4,"NestedMetaItem","","Possible values inside of compile-time attribute lists.",N,N],[13,"MetaItem","","A full `MetaItem`.",30,N],[13,"Literal","","A Rust literal.",30,N],[4,"ConstExpr","","",N,N],[13,"Call","","A function call",31,N],[13,"Binary","","A binary operation (For example: `a + b`, `a * b`)",31,N],[13,"Unary","","A unary operation (For example: `!x`, `*x`)",31,N],[13,"Lit","","A literal (For example: `1`, `\"foo\"`)",31,N],[13,"Cast","","A cast (`foo as f64`)",31,N],[13,"Path","","Variable reference, possibly containing `::` and/or type…",31,N],[13,"Index","","An indexing operation (`foo[2]`)",31,N],[13,"Paren","","No-op: used solely so we can pretty-print faithfully",31,N],[13,"Other","","If compiling with full support for expression syntax, any…",31,N],[4,"VariantData","","Data stored within an enum variant or struct.",N,N],[13,"Struct","","Struct variant, e.g. `Point { x: f64, y: f64 }`.",32,N],[13,"Tuple","","Tuple variant, e.g. `Some(T)`.",32,N],[13,"Unit","","Unit variant, e.g. `None`.",32,N],[4,"Visibility","","Visibility level of an item.",N,N],[13,"Public","","Public, i.e. `pub`.",33,N],[13,"Crate","","Crate-visible, i.e. `pub(crate)`.",33,N],[13,"Restricted","","Restricted, e.g. `pub(some::module)`.",33,N],[13,"Inherited","","Inherited, i.e. private.",33,N],[4,"TraitBoundModifier","","A modifier on a bound, currently this is only used for…",N,N],[13,"None","","",34,N],[13,"Maybe","","",34,N],[4,"TyParamBound","","The AST represents all type param bounds as types.…",N,N],[13,"Trait","","",35,N],[13,"Region","","",35,N],[4,"WherePredicate","","A single predicate in a `where` clause",N,N],[13,"BoundPredicate","","A type binding, e.g. `for<'c> Foo: Send+Clone+'c`",36,N],[13,"RegionPredicate","","A lifetime predicate, e.g. `'a: 'b+'c`",36,N],[13,"EqPredicate","","An equality predicate (unsupported)",36,N],[4,"FloatTy","","",N,N],[13,"F32","","",37,N],[13,"F64","","",37,N],[13,"Unsuffixed","","",37,N],[4,"IntTy","","",N,N],[13,"Isize","","",38,N],[13,"I8","","",38,N],[13,"I16","","",38,N],[13,"I32","","",38,N],[13,"I64","","",38,N],[13,"Usize","","",38,N],[13,"U8","","",38,N],[13,"U16","","",38,N],[13,"U32","","",38,N],[13,"U64","","",38,N],[13,"Unsuffixed","","",38,N],[4,"Lit","","Literal kind.",N,N],[13,"Str","","A string literal (`\"foo\"`)",39,N],[13,"ByteStr","","A byte string (`b\"foo\"`)",39,N],[13,"Byte","","A byte char (`b'f'`)",39,N],[13,"Char","","A character literal (`'a'`)",39,N],[13,"Int","","An integer literal (`1`)",39,N],[13,"Float","","A float literal (`1f64` or `1E10f64` or `1.0E10`)",39,N],[13,"Bool","","A boolean literal",39,N],[4,"StrStyle","","",N,N],[13,"Cooked","","A regular string, like `\"foo\"`",40,N],[13,"Raw","","A raw string, like `r##\"foo\"##`",40,N],[4,"BinOpToken","","",N,N],[13,"Plus","","",41,N],[13,"Minus","","",41,N],[13,"Star","","",41,N],[13,"Slash","","",41,N],[13,"Percent","","",41,N],[13,"Caret","","",41,N],[13,"And","","",41,N],[13,"Or","","",41,N],[13,"Shl","","",41,N],[13,"Shr","","",41,N],[4,"DelimToken","","A delimiter token",N,N],[13,"Paren","","A round parenthesis: `(` or `)`",42,N],[13,"Bracket","","A square bracket: `[` or `]`",42,N],[13,"Brace","","A curly brace: `{` or `}`",42,N],[4,"Token","","",N,N],[13,"Eq","","",43,N],[13,"Lt","","",43,N],[13,"Le","","",43,N],[13,"EqEq","","",43,N],[13,"Ne","","",43,N],[13,"Ge","","",43,N],[13,"Gt","","",43,N],[13,"AndAnd","","",43,N],[13,"OrOr","","",43,N],[13,"Not","","",43,N],[13,"Tilde","","",43,N],[13,"BinOp","","",43,N],[13,"BinOpEq","","",43,N],[13,"At","","",43,N],[13,"Dot","","",43,N],[13,"DotDot","","",43,N],[13,"DotDotDot","","",43,N],[13,"Comma","","",43,N],[13,"Semi","","",43,N],[13,"Colon","","",43,N],[13,"ModSep","","",43,N],[13,"RArrow","","",43,N],[13,"LArrow","","",43,N],[13,"FatArrow","","",43,N],[13,"Pound","","",43,N],[13,"Dollar","","",43,N],[13,"Question","","",43,N],[13,"Literal","","",43,N],[13,"Ident","","",43,N],[13,"Underscore","","",43,N],[13,"Lifetime","","",43,N],[13,"DocComment","","",43,N],[4,"TokenTree","","When the main rust parser encounters a syntax-extension…",N,N],[13,"Token","","A single token",44,N],[13,"Delimited","","A delimited sequence of token trees",44,N],[4,"Body","","Body of a derived struct or enum.",N,N],[13,"Enum","","It's an enum.",45,N],[13,"Struct","","It's a struct.",45,N],[4,"BinOp","","",N,N],[13,"Add","","The `+` operator (addition)",46,N],[13,"Sub","","The `-` operator (subtraction)",46,N],[13,"Mul","","The `*` operator (multiplication)",46,N],[13,"Div","","The `/` operator (division)",46,N],[13,"Rem","","The `%` operator (modulus)",46,N],[13,"And","","The `&&` operator (logical and)",46,N],[13,"Or","","The `||` operator (logical or)",46,N],[13,"BitXor","","The `^` operator (bitwise xor)",46,N],[13,"BitAnd","","The `&` operator (bitwise and)",46,N],[13,"BitOr","","The `|` operator (bitwise or)",46,N],[13,"Shl","","The `<<` operator (shift left)",46,N],[13,"Shr","","The `>>` operator (shift right)",46,N],[13,"Eq","","The `==` operator (equality)",46,N],[13,"Lt","","The `<` operator (less than)",46,N],[13,"Le","","The `<=` operator (less than or equal to)",46,N],[13,"Ne","","The `!=` operator (not equal to)",46,N],[13,"Ge","","The `>=` operator (greater than or equal to)",46,N],[13,"Gt","","The `>` operator (greater than)",46,N],[4,"UnOp","","",N,N],[13,"Deref","","The `*` operator for dereferencing",47,N],[13,"Not","","The `!` operator for logical inversion",47,N],[13,"Neg","","The `-` operator for negation",47,N],[4,"Abi","","",N,N],[13,"Named","","",48,N],[13,"Rust","","",48,N],[4,"FunctionRetTy","","",N,N],[13,"Default","","Return type is not specified.",49,N],[13,"Ty","","Everything else",49,N],[4,"Mutability","","",N,N],[13,"Mutable","","",50,N],[13,"Immutable","","",50,N],[4,"PathParameters","","Parameters of a path segment.",N,N],[13,"AngleBracketed","","The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`",51,N],[13,"Parenthesized","","The `(A, B)` and `C` in `Foo(A, B) -> C`",51,N],[4,"Ty","","The different kinds of types recognized by the compiler",N,N],[13,"Slice","","A variable-length array (`[T]`)",52,N],[13,"Array","","A fixed length array (`[T; n]`)",52,N],[13,"Ptr","","A raw pointer (`*const T` or `*mut T`)",52,N],[13,"Rptr","","A reference (`&'a T` or `&'a mut T`)",52,N],[13,"BareFn","","A bare function (e.g. `fn(usize) -> bool`)",52,N],[13,"Never","","The never type (`!`)",52,N],[13,"Tup","","A tuple (`(A, B, C, D, ...)`)",52,N],[13,"Path","","A path (`module::module::...::Type`), optionally…",52,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",52,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",52,N],[13,"Paren","","No-op; kept solely so that we can pretty-print faithfully",52,N],[13,"Infer","","TyKind::Infer means the type should be inferred instead of…",52,N],[13,"Mac","","A macro in the type position.",52,N],[4,"Unsafety","","",N,N],[13,"Unsafe","","",53,N],[13,"Normal","","",53,N],[5,"parse_derive_input","","",N,[[["str"]],["result",["deriveinput","string"]]]],[5,"parse_type","","",N,[[["str"]],["result",["ty","string"]]]],[5,"parse_path","","",N,[[["str"]],["result",["path","string"]]]],[5,"parse_where_clause","","",N,[[["str"]],["result",["whereclause","string"]]]],[5,"parse_token_trees","","",N,[[["str"]],["result",["vec","string"]]]],[5,"parse_ident","","",N,[[["str"]],["result",["ident","string"]]]],[5,"parse_ty_param_bound","","",N,[[["str"]],["result",["typarambound","string"]]]],[5,"parse_outer_attr","","",N,[[["str"]],["result",["attribute","string"]]]],[11,"name","","",0,[[["self"]],["str"]]],[11,"name","","Name of the item.",29,[[["self"]],["str"]]],[11,"fields","","Slice containing the fields stored in the variant.",32,N],[11,"fields_mut","","Mutable slice containing the fields stored in the variant.",32,N],[11,"split_for_impl","","Split a type's generics into the pieces required for…",3,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",54,[[["self"]],["turbofish"]]],[11,"new","","",4,[[["t"]],["self"]]],[11,"new","","",5,[[["t"]],["self"]]],[11,"none","","",8,[[],["self"]]],[11,"new","","",55,[[["t"]],["self"]]],[11,"op","","",46,[[["self"]],["str"]]],[11,"assign_op","","",46,[[["self"]],["option",["str"]]]],[11,"op","","",47,[[["self"]],["str"]]],[11,"none","","",51,[[],["self"]]],[11,"is_empty","","",51,[[["self"]],["bool"]]],[0,"visit","","AST walker. Each overridden visit method has full control…",N,N],[5,"walk_opt_ident","syn::visit","",N,[[["v"],["option"]]]],[5,"walk_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"walk_poly_trait_ref","","",N,[[["v"],["polytraitref"],["traitboundmodifier"]]]],[5,"walk_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"walk_variant","","",N,[[["v"],["variant"],["generics"]]]],[5,"walk_ty","","",N,[[["v"],["ty"]]]],[5,"walk_path","","",N,[[["v"],["path"]]]],[5,"walk_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"walk_path_parameters","","",N,[[["v"],["pathparameters"]]]],[5,"walk_assoc_type_binding","","",N,[[["v"],["typebinding"]]]],[5,"walk_ty_param_bound","","",N,[[["v"],["typarambound"]]]],[5,"walk_generics","","",N,[[["v"],["generics"]]]],[5,"walk_fn_ret_ty","","",N,[[["v"],["functionretty"]]]],[5,"walk_variant_data","","",N,[[["v"],["variantdata"]]]],[5,"walk_field","","",N,[[["v"],["field"]]]],[5,"walk_const_expr","","",N,[[["v"],["constexpr"]]]],[5,"walk_mac","","",N,[[["v"],["mac"]]]],[8,"Visitor","","Each method of the Visitor trait is a hook to be…",N,N],[11,"visit_ident","","",56,[[["self"],["ident"]]]],[11,"visit_derive_input","","",56,[[["self"],["deriveinput"]]]],[11,"visit_ty","","",56,[[["self"],["ty"]]]],[11,"visit_generics","","",56,[[["self"],["generics"]]]],[11,"visit_ty_param_bound","","",56,[[["self"],["typarambound"]]]],[11,"visit_poly_trait_ref","","",56,[[["self"],["polytraitref"],["traitboundmodifier"]]]],[11,"visit_variant_data","","",56,[[["self"],["variantdata"],["ident"],["generics"]]]],[11,"visit_field","","",56,[[["self"],["field"]]]],[11,"visit_variant","","",56,[[["self"],["variant"],["generics"]]]],[11,"visit_lifetime","","",56,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",56,[[["self"],["lifetimedef"]]]],[11,"visit_path","","",56,[[["self"],["path"]]]],[11,"visit_path_segment","","",56,[[["self"],["pathsegment"]]]],[11,"visit_path_parameters","","",56,[[["self"],["pathparameters"]]]],[11,"visit_assoc_type_binding","","",56,[[["self"],["typebinding"]]]],[11,"visit_attribute","","",56,[[["self"],["attribute"]]]],[11,"visit_fn_ret_ty","","",56,[[["self"],["functionretty"]]]],[11,"visit_const_expr","","",56,[[["self"],["constexpr"]]]],[11,"visit_lit","","",56,[[["self"],["lit"]]]],[11,"visit_mac","","",56,[[["self"],["mac"]]]],[0,"parse","syn","This module contains a set of exported nom parsers which…",N,N],[4,"IResult","syn::parse","The result of a parser.",N,N],[13,"Done","","Parsing succeeded. The first field contains the rest of…",57,N],[13,"Error","","Parsing failed.",57,N],[5,"lit","","",N,[[["str"]],["iresult",["str","lit"]]]],[5,"string","","",N,[[["str"]],["iresult",["str","strlit"]]]],[5,"byte_string","","",N,[[["str"]],["iresult",["str","bytestrlit"]]]],[5,"byte","","",N,[[["str"]],["iresult",["str","u8"]]]],[5,"character","","",N,[[["str"]],["iresult",["str","char"]]]],[5,"float","","",N,[[["str"]],["iresult",["str","floatlit"]]]],[5,"int","","",N,[[["str"]],["iresult",["str","intlit"]]]],[5,"boolean","","",N,[[["str"]],["iresult",["str","bool"]]]],[5,"ty","","",N,[[["str"]],["iresult",["str","ty"]]]],[5,"path","","",N,[[["str"]],["iresult",["str","path"]]]],[5,"tt","","",N,[[["str"]],["iresult",["str","tokentree"]]]],[5,"ident","","",N,[[["str"]],["iresult",["str","ident"]]]],[5,"lifetime","","",N,[[["str"]],["iresult",["str","lifetime"]]]],[11,"from","syn","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","syn::parse","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"eq","","",57,[[["self"],["iresult"]],["bool"]]],[11,"ne","","",57,[[["self"],["iresult"]],["bool"]]],[11,"clone","","",57,[[["self"]],["iresult"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","syn","",0,[[["self"],["attribute"]],["bool"]]],[11,"ne","","",0,[[["self"],["attribute"]],["bool"]]],[11,"eq","","",28,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",29,[[["self"],["metaitem"]],["bool"]]],[11,"ne","","",29,[[["self"],["metaitem"]],["bool"]]],[11,"eq","","",30,[[["self"],["nestedmetaitem"]],["bool"]]],[11,"ne","","",30,[[["self"],["nestedmetaitem"]],["bool"]]],[11,"eq","","",31,[[["self"],["constexpr"]],["bool"]]],[11,"ne","","",31,[[["self"],["constexpr"]],["bool"]]],[11,"eq","","",2,[[["self"],["variant"]],["bool"]]],[11,"ne","","",2,[[["self"],["variant"]],["bool"]]],[11,"eq","","",32,[[["self"],["variantdata"]],["bool"]]],[11,"ne","","",32,[[["self"],["variantdata"]],["bool"]]],[11,"eq","","",1,[[["self"],["field"]],["bool"]]],[11,"ne","","",1,[[["self"],["field"]],["bool"]]],[11,"eq","","",33,[[["self"],["visibility"]],["bool"]]],[11,"ne","","",33,[[["self"],["visibility"]],["bool"]]],[11,"eq","","",3,[[["self"],["generics"]],["bool"]]],[11,"ne","","",3,[[["self"],["generics"]],["bool"]]],[11,"eq","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"ne","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",5,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",5,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",6,[[["self"],["typaram"]],["bool"]]],[11,"ne","","",6,[[["self"],["typaram"]],["bool"]]],[11,"eq","","",35,[[["self"],["typarambound"]],["bool"]]],[11,"ne","","",35,[[["self"],["typarambound"]],["bool"]]],[11,"eq","","",34,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",8,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",8,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",36,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",36,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",7,[[["self"],["whereboundpredicate"]],["bool"]]],[11,"ne","","",7,[[["self"],["whereboundpredicate"]],["bool"]]],[11,"eq","","",10,[[["self"],["whereregionpredicate"]],["bool"]]],[11,"ne","","",10,[[["self"],["whereregionpredicate"]],["bool"]]],[11,"eq","","",9,[[["self"],["whereeqpredicate"]],["bool"]]],[11,"ne","","",9,[[["self"],["whereeqpredicate"]],["bool"]]],[11,"eq","","",55,[[["self"],["t"]],["bool"]]],[11,"eq","","",39,[[["self"],["lit"]],["bool"]]],[11,"ne","","",39,[[["self"],["lit"]],["bool"]]],[11,"eq","","",40,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",40,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",38,[[["self"],["intty"]],["bool"]]],[11,"eq","","",37,[[["self"],["floatty"]],["bool"]]],[11,"eq","","",16,[[["self"],["mac"]],["bool"]]],[11,"ne","","",16,[[["self"],["mac"]],["bool"]]],[11,"eq","","",44,[[["self"],["tokentree"]],["bool"]]],[11,"ne","","",44,[[["self"],["tokentree"]],["bool"]]],[11,"eq","","",15,[[["self"],["delimited"]],["bool"]]],[11,"ne","","",15,[[["self"],["delimited"]],["bool"]]],[11,"eq","","",43,[[["self"],["token"]],["bool"]]],[11,"ne","","",43,[[["self"],["token"]],["bool"]]],[11,"eq","","",41,[[["self"],["binoptoken"]],["bool"]]],[11,"eq","","",42,[[["self"],["delimtoken"]],["bool"]]],[11,"eq","","",17,[[["self"],["deriveinput"]],["bool"]]],[11,"ne","","",17,[[["self"],["deriveinput"]],["bool"]]],[11,"eq","","",45,[[["self"],["body"]],["bool"]]],[11,"ne","","",45,[[["self"],["body"]],["bool"]]],[11,"eq","","",46,[[["self"],["binop"]],["bool"]]],[11,"eq","","",47,[[["self"],["unop"]],["bool"]]],[11,"eq","","",52,[[["self"],["ty"]],["bool"]]],[11,"ne","","",52,[[["self"],["ty"]],["bool"]]],[11,"eq","","",21,[[["self"],["mutty"]],["bool"]]],[11,"ne","","",21,[[["self"],["mutty"]],["bool"]]],[11,"eq","","",50,[[["self"],["mutability"]],["bool"]]],[11,"eq","","",23,[[["self"],["path"]],["bool"]]],[11,"ne","","",23,[[["self"],["path"]],["bool"]]],[11,"eq","","",24,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",24,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",51,[[["self"],["pathparameters"]],["bool"]]],[11,"ne","","",51,[[["self"],["pathparameters"]],["bool"]]],[11,"eq","","",18,[[["self"],["anglebracketedparameterdata"]],["bool"]]],[11,"ne","","",18,[[["self"],["anglebracketedparameterdata"]],["bool"]]],[11,"eq","","",27,[[["self"],["typebinding"]],["bool"]]],[11,"ne","","",27,[[["self"],["typebinding"]],["bool"]]],[11,"eq","","",22,[[["self"],["parenthesizedparameterdata"]],["bool"]]],[11,"ne","","",22,[[["self"],["parenthesizedparameterdata"]],["bool"]]],[11,"eq","","",25,[[["self"],["polytraitref"]],["bool"]]],[11,"ne","","",25,[[["self"],["polytraitref"]],["bool"]]],[11,"eq","","",26,[[["self"],["qself"]],["bool"]]],[11,"ne","","",26,[[["self"],["qself"]],["bool"]]],[11,"eq","","",20,[[["self"],["barefnty"]],["bool"]]],[11,"ne","","",20,[[["self"],["barefnty"]],["bool"]]],[11,"eq","","",53,[[["self"],["unsafety"]],["bool"]]],[11,"eq","","",48,[[["self"],["abi"]],["bool"]]],[11,"ne","","",48,[[["self"],["abi"]],["bool"]]],[11,"eq","","",19,[[["self"],["barefnarg"]],["bool"]]],[11,"ne","","",19,[[["self"],["barefnarg"]],["bool"]]],[11,"eq","","",49,[[["self"],["functionretty"]],["bool"]]],[11,"ne","","",49,[[["self"],["functionretty"]],["bool"]]],[11,"as_ref","","",55,[[["self"]],["str"]]],[11,"default","","",3,[[],["generics"]]],[11,"default","","",8,[[],["whereclause"]]],[11,"default","","",18,[[],["anglebracketedparameterdata"]]],[11,"cmp","","",4,[[["self"],["lifetime"]],["ordering"]]],[11,"cmp","","",55,[[["self"],["ident"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["attribute"]]],[11,"clone","","",28,[[["self"]],["attrstyle"]]],[11,"clone","","",29,[[["self"]],["metaitem"]]],[11,"clone","","",30,[[["self"]],["nestedmetaitem"]]],[11,"clone","","",31,[[["self"]],["constexpr"]]],[11,"clone","","",2,[[["self"]],["variant"]]],[11,"clone","","",32,[[["self"]],["variantdata"]]],[11,"clone","","",1,[[["self"]],["field"]]],[11,"clone","","",33,[[["self"]],["visibility"]]],[11,"clone","","",3,[[["self"]],["generics"]]],[11,"clone","","",4,[[["self"]],["lifetime"]]],[11,"clone","","",5,[[["self"]],["lifetimedef"]]],[11,"clone","","",6,[[["self"]],["typaram"]]],[11,"clone","","",35,[[["self"]],["typarambound"]]],[11,"clone","","",34,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",8,[[["self"]],["whereclause"]]],[11,"clone","","",36,[[["self"]],["wherepredicate"]]],[11,"clone","","",7,[[["self"]],["whereboundpredicate"]]],[11,"clone","","",10,[[["self"]],["whereregionpredicate"]]],[11,"clone","","",9,[[["self"]],["whereeqpredicate"]]],[11,"clone","","",55,[[["self"]],["ident"]]],[11,"clone","","",39,[[["self"]],["lit"]]],[11,"clone","","",40,[[["self"]],["strstyle"]]],[11,"clone","","",38,[[["self"]],["intty"]]],[11,"clone","","",37,[[["self"]],["floatty"]]],[11,"clone","","",14,[[["self"]],["strlit"]]],[11,"clone","","",11,[[["self"]],["bytestrlit"]]],[11,"clone","","",13,[[["self"]],["intlit"]]],[11,"clone","","",12,[[["self"]],["floatlit"]]],[11,"clone","","",16,[[["self"]],["mac"]]],[11,"clone","","",44,[[["self"]],["tokentree"]]],[11,"clone","","",15,[[["self"]],["delimited"]]],[11,"clone","","",43,[[["self"]],["token"]]],[11,"clone","","",41,[[["self"]],["binoptoken"]]],[11,"clone","","",42,[[["self"]],["delimtoken"]]],[11,"clone","","",17,[[["self"]],["deriveinput"]]],[11,"clone","","",45,[[["self"]],["body"]]],[11,"clone","","",46,[[["self"]],["binop"]]],[11,"clone","","",47,[[["self"]],["unop"]]],[11,"clone","","",52,[[["self"]],["ty"]]],[11,"clone","","",21,[[["self"]],["mutty"]]],[11,"clone","","",50,[[["self"]],["mutability"]]],[11,"clone","","",23,[[["self"]],["path"]]],[11,"clone","","",24,[[["self"]],["pathsegment"]]],[11,"clone","","",51,[[["self"]],["pathparameters"]]],[11,"clone","","",18,[[["self"]],["anglebracketedparameterdata"]]],[11,"clone","","",27,[[["self"]],["typebinding"]]],[11,"clone","","",22,[[["self"]],["parenthesizedparameterdata"]]],[11,"clone","","",25,[[["self"]],["polytraitref"]]],[11,"clone","","",26,[[["self"]],["qself"]]],[11,"clone","","",20,[[["self"]],["barefnty"]]],[11,"clone","","",53,[[["self"]],["unsafety"]]],[11,"clone","","",48,[[["self"]],["abi"]]],[11,"clone","","",19,[[["self"]],["barefnarg"]]],[11,"clone","","",49,[[["self"]],["functionretty"]]],[11,"from","","",6,[[["ident"]],["self"]]],[11,"from","","",55,[[["str"]],["self"]]],[11,"from","","",55,[[["cow",["str"]]],["self"]]],[11,"from","","",55,[[["string"]],["self"]]],[11,"from","","",55,[[["usize"]],["self"]]],[11,"from","","",39,[[["string"]],["lit"]]],[11,"from","","",39,[[["str"]],["lit"]]],[11,"from","","",39,[[["vec",["u8"]]],["lit"]]],[11,"from","","",39,N],[11,"from","","",39,[[["char"]],["lit"]]],[11,"from","","",39,[[["bool"]],["lit"]]],[11,"from","","",39,[[["isize"]],["lit"]]],[11,"from","","",39,[[["i8"]],["lit"]]],[11,"from","","",39,[[["i16"]],["lit"]]],[11,"from","","",39,[[["i32"]],["lit"]]],[11,"from","","",39,[[["i64"]],["lit"]]],[11,"from","","",39,[[["usize"]],["lit"]]],[11,"from","","",39,[[["u8"]],["lit"]]],[11,"from","","",39,[[["u16"]],["lit"]]],[11,"from","","",39,[[["u32"]],["lit"]]],[11,"from","","",39,[[["u64"]],["lit"]]],[11,"from","","",39,[[["f32"]],["lit"]]],[11,"from","","",39,[[["f64"]],["lit"]]],[11,"from","","",23,[[["t"]],["self"]]],[11,"from","","",24,[[["t"]],["self"]]],[11,"partial_cmp","","",4,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"le","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"gt","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"ge","","",4,[[["self"],["lifetime"]],["bool"]]],[11,"partial_cmp","","",55,[[["self"],["ident"]],["option",["ordering"]]]],[11,"lt","","",55,[[["self"],["ident"]],["bool"]]],[11,"le","","",55,[[["self"],["ident"]],["bool"]]],[11,"gt","","",55,[[["self"],["ident"]],["bool"]]],[11,"ge","","",55,[[["self"],["ident"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",0,N],[11,"hash","","",28,N],[11,"hash","","",29,N],[11,"hash","","",30,N],[11,"hash","","",31,N],[11,"hash","","",2,N],[11,"hash","","",32,N],[11,"hash","","",1,N],[11,"hash","","",33,N],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"hash","","",5,N],[11,"hash","","",6,N],[11,"hash","","",35,N],[11,"hash","","",34,N],[11,"hash","","",8,N],[11,"hash","","",36,N],[11,"hash","","",7,N],[11,"hash","","",10,N],[11,"hash","","",9,N],[11,"hash","","",55,N],[11,"hash","","",39,N],[11,"hash","","",40,N],[11,"hash","","",38,N],[11,"hash","","",37,N],[11,"hash","","",16,N],[11,"hash","","",44,N],[11,"hash","","",15,N],[11,"hash","","",43,N],[11,"hash","","",41,N],[11,"hash","","",42,N],[11,"hash","","",17,N],[11,"hash","","",45,N],[11,"hash","","",46,N],[11,"hash","","",47,N],[11,"hash","","",52,N],[11,"hash","","",21,N],[11,"hash","","",50,N],[11,"hash","","",23,N],[11,"hash","","",24,N],[11,"hash","","",51,N],[11,"hash","","",18,N],[11,"hash","","",27,N],[11,"hash","","",22,N],[11,"hash","","",25,N],[11,"hash","","",26,N],[11,"hash","","",20,N],[11,"hash","","",53,N],[11,"hash","","",48,N],[11,"hash","","",19,N],[11,"hash","","",49,N],[11,"to_tokens","","",0,[[["self"],["tokens"]]]],[11,"to_tokens","","",29,[[["self"],["tokens"]]]],[11,"to_tokens","","",30,[[["self"],["tokens"]]]],[11,"to_tokens","","",31,[[["self"],["tokens"]]]],[11,"to_tokens","","",2,[[["self"],["tokens"]]]],[11,"to_tokens","","",32,[[["self"],["tokens"]]]],[11,"to_tokens","","",1,[[["self"],["tokens"]]]],[11,"to_tokens","","",33,[[["self"],["tokens"]]]],[11,"to_tokens","","",3,[[["self"],["tokens"]]]],[11,"to_tokens","","",58,[[["self"],["tokens"]]]],[11,"to_tokens","","",54,[[["self"],["tokens"]]]],[11,"to_tokens","","",59,[[["self"],["tokens"]]]],[11,"to_tokens","","",4,[[["self"],["tokens"]]]],[11,"to_tokens","","",5,[[["self"],["tokens"]]]],[11,"to_tokens","","",6,[[["self"],["tokens"]]]],[11,"to_tokens","","",35,[[["self"],["tokens"]]]],[11,"to_tokens","","",8,[[["self"],["tokens"]]]],[11,"to_tokens","","",36,[[["self"],["tokens"]]]],[11,"to_tokens","","",7,[[["self"],["tokens"]]]],[11,"to_tokens","","",10,[[["self"],["tokens"]]]],[11,"to_tokens","","",9,[[["self"],["tokens"]]]],[11,"to_tokens","","",55,[[["self"],["tokens"]]]],[11,"to_tokens","","",39,[[["self"],["tokens"]]]],[11,"to_tokens","","",16,[[["self"],["tokens"]]]],[11,"to_tokens","","",44,[[["self"],["tokens"]]]],[11,"to_tokens","","",15,[[["self"],["tokens"]]]],[11,"to_tokens","","",43,[[["self"],["tokens"]]]],[11,"to_tokens","","",41,[[["self"],["tokens"]]]],[11,"to_tokens","","",17,[[["self"],["tokens"]]]],[11,"to_tokens","","",46,[[["self"],["tokens"]]]],[11,"to_tokens","","",47,[[["self"],["tokens"]]]],[11,"to_tokens","","",52,[[["self"],["tokens"]]]],[11,"to_tokens","","",50,[[["self"],["tokens"]]]],[11,"to_tokens","","",23,[[["self"],["tokens"]]]],[11,"to_tokens","","",24,[[["self"],["tokens"]]]],[11,"to_tokens","","",51,[[["self"],["tokens"]]]],[11,"to_tokens","","",18,[[["self"],["tokens"]]]],[11,"to_tokens","","",27,[[["self"],["tokens"]]]],[11,"to_tokens","","",22,[[["self"],["tokens"]]]],[11,"to_tokens","","",25,[[["self"],["tokens"]]]],[11,"to_tokens","","",20,[[["self"],["tokens"]]]],[11,"to_tokens","","",19,[[["self"],["tokens"]]]],[11,"to_tokens","","",53,[[["self"],["tokens"]]]],[11,"to_tokens","","",48,[[["self"],["tokens"]]]],[11,"expect","syn::parse","Unwraps the result, asserting the the parse is complete.…",57,[[["self"],["str"]],["o"]]]],"paths":[[3,"Attribute"],[3,"Field"],[3,"Variant"],[3,"Generics"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"TyParam"],[3,"WhereBoundPredicate"],[3,"WhereClause"],[3,"WhereEqPredicate"],[3,"WhereRegionPredicate"],[3,"ByteStrLit"],[3,"FloatLit"],[3,"IntLit"],[3,"StrLit"],[3,"Delimited"],[3,"Mac"],[3,"DeriveInput"],[3,"AngleBracketedParameterData"],[3,"BareFnArg"],[3,"BareFnTy"],[3,"MutTy"],[3,"ParenthesizedParameterData"],[3,"Path"],[3,"PathSegment"],[3,"PolyTraitRef"],[3,"QSelf"],[3,"TypeBinding"],[4,"AttrStyle"],[4,"MetaItem"],[4,"NestedMetaItem"],[4,"ConstExpr"],[4,"VariantData"],[4,"Visibility"],[4,"TraitBoundModifier"],[4,"TyParamBound"],[4,"WherePredicate"],[4,"FloatTy"],[4,"IntTy"],[4,"Lit"],[4,"StrStyle"],[4,"BinOpToken"],[4,"DelimToken"],[4,"Token"],[4,"TokenTree"],[4,"Body"],[4,"BinOp"],[4,"UnOp"],[4,"Abi"],[4,"FunctionRetTy"],[4,"Mutability"],[4,"PathParameters"],[4,"Ty"],[4,"Unsafety"],[3,"TyGenerics"],[3,"Ident"],[8,"Visitor"],[4,"IResult"],[3,"ImplGenerics"],[3,"Turbofish"]]};
searchIndex["synom"]={"doc":"Adapted from `nom` by removing the `IResult::Incomplete`…","items":[[4,"IResult","synom","The result of a parser.",N,N],[13,"Done","","Parsing succeeded. The first field contains the rest of…",0,N],[13,"Error","","Parsing failed.",0,N],[11,"expect","","Unwraps the result, asserting the the parse is complete.…",0,[[["self"],["str"]],["o"]]],[14,"punct","","Parse a piece of punctuation like \"+\" or \"+=\".",N,N],[14,"keyword","","Parse a keyword like \"fn\" or \"struct\".",N,N],[14,"option","","Turn a failed parse into `None` and a successful parse…",N,N],[14,"opt_vec","","Turn a failed parse into an empty vector. The argument…",N,N],[14,"epsilon","","Parses nothing and always succeeds.",N,N],[14,"separated_list","","Zero or more values separated by some separator. Does not…",N,N],[14,"terminated_list","","Zero or more values separated by some separator. A…",N,N],[14,"named","","Define a function from a parser combination.",N,N],[14,"call","","Invoke the given parser function with the passed in…",N,N],[14,"map","","Transform the result of a parser by applying a function or…",N,N],[14,"not","","Parses successfully if the given parser fails to parse.…",N,N],[14,"cond","","Conditionally execute the given parser.",N,N],[14,"cond_reduce","","Fail to parse if condition is false, otherwise parse the…",N,N],[14,"preceded","","Parse two things, returning the value of the second.",N,N],[14,"terminated","","Parse two things, returning the value of the first.",N,N],[14,"many0","","Parse zero or more values using the given parser.",N,N],[14,"peek","","Parse a value without consuming it from the input data.",N,N],[14,"take_until","","Parse the part of the input up to but not including the…",N,N],[14,"tag","","Parse the given string from exactly the current position…",N,N],[14,"switch","","Pattern-match the result of a parser to select which other…",N,N],[14,"value","","Produce the given value without parsing anything. Useful…",N,N],[14,"delimited","","Value surrounded by a pair of delimiters.",N,N],[14,"separated_nonempty_list","","One or more values separated by some separator. Does not…",N,N],[14,"tuple","","Run a series of parsers and produce all of the results in…",N,N],[14,"alt","","Run a series of parsers, returning the result of the first…",N,N],[14,"do_parse","","Run a series of parsers, one after another, optionally…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["iresult"]],["bool"]]],[11,"ne","","",0,[[["self"],["iresult"]],["bool"]]],[11,"clone","","",0,[[["self"]],["iresult"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"IResult"]]};
searchIndex["synstructure"]={"doc":"This crate provides helper types for matching against enum…","items":[[3,"BindingInfo","synstructure","Information about a specific binding. This contains both…",N,N],[12,"binding","","The name which this BindingInfo will bind to.",0,N],[12,"style","","The type of binding which this BindingInfo will create.",0,N],[3,"VariantAst","","This type is similar to `syn`'s `Variant` type, however…",N,N],[12,"ident","","",1,N],[12,"attrs","","",1,N],[12,"data","","",1,N],[12,"discriminant","","",1,N],[3,"VariantInfo","","A wrapper around a `syn` `DeriveInput`'s variant which…",N,N],[12,"prefix","","",2,N],[3,"Structure","","A wrapper around a `syn` `DeriveInput` which provides…",N,N],[4,"BindStyle","","The type of binding to use when generating a pattern.",N,N],[13,"Move","","`x`",3,N],[13,"MoveMut","","`mut x`",3,N],[13,"Ref","","`ref x`",3,N],[13,"RefMut","","`ref mut x`",3,N],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",0,[[["self"]],["field"]]],[11,"pat","","Generates the pattern fragment for this field binding.",0,[[["self"]],["tokens"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",0,[[["self"]],["vec",["ident"]]]],[11,"bindings","","Returns a slice of the bindings in this Variant.",2,N],[11,"bindings_mut","","Returns a mut slice of the bindings in this Variant.",2,N],[11,"ast","","Returns a `VariantAst` object which contains references to…",2,[[["self"]],["variantast"]]],[11,"omitted_bindings","","True if any bindings were omitted due to a `filter` call.",2,[[["self"]],["bool"]]],[11,"pat","","Generates the match-arm pattern which could be used to…",2,[[["self"]],["tokens"]]],[11,"construct","","Generates the token stream required to construct the…",2,[[["self"],["f"]],["tokens"]]],[11,"each","","Runs the passed-in function once for each bound field,…",2,[[["self"],["f"]],["tokens"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",2,[[["self"],["i"],["f"]],["tokens"]]],[11,"filter","","Filter the bindings created by this `Variant` object. This…",2,[[["self"],["f"]],["self"]]],[11,"remove_binding","","Remove the binding at the given index.",2,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",2,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are referenced…",2,[[["self"]],["vec",["ident"]]]],[11,"new","","Create a new `Structure` with the variants and fields from…",4,[[["deriveinput"]],["self"]]],[11,"variants","","Returns a slice of the variants in this Structure.",4,N],[11,"variants_mut","","Returns a mut slice of the variants in this Structure.",4,N],[11,"ast","","Returns a reference to the underlying `syn` AST node which…",4,[[["self"]],["deriveinput"]]],[11,"omitted_variants","","True if any variants were omitted due to a…",4,[[["self"]],["bool"]]],[11,"each","","Runs the passed-in function once for each bound field,…",4,[[["self"],["f"]],["tokens"]]],[11,"fold","","Runs the passed-in function once for each bound field,…",4,[[["self"],["i"],["f"]],["tokens"]]],[11,"each_variant","","Runs the passed-in function once for each variant, passing…",4,[[["self"],["f"]],["tokens"]]],[11,"filter","","Filter the bindings created by this `Structure` object.…",4,[[["self"],["f"]],["self"]]],[11,"filter_variants","","Filter the variants matched by this `Structure` object.…",4,[[["self"],["f"]],["self"]]],[11,"remove_variant","","Remove the variant at the given index.",4,[[["self"],["usize"]],["self"]]],[11,"bind_with","","Updates the `BindStyle` for each of the passed-in fields…",4,[[["self"],["f"]],["self"]]],[11,"binding_name","","Updates the binding name for each fo the passed-in fields…",4,[[["self"],["f"]],["self"]]],[11,"referenced_ty_params","","Returns a list of the type parameters which are refrenced…",4,[[["self"]],["vec",["ident"]]]],[11,"add_trait_bounds","","Add trait bounds for a trait with the given path for each…",4,[[["self"],["typarambound"],["vec"]]]],[11,"bound_impl","","Creates an `impl` block with the required generic type…",4,[[["self"],["p"],["b"]],["tokens"]]],[11,"unsafe_bound_impl","","This method is the same as `bound_impl`, except also…",4,[[["self"],["p"],["b"]],["tokens"]]],[11,"unbound_impl","","This method is like `bound_impl` but doesn't add the…",4,[[["self"],["p"],["b"]],["tokens"]]],[11,"unsafe_unbound_impl","","This method is the same as `unbound_impl`, except also…",4,[[["self"],["p"],["b"]],["tokens"]]],[14,"decl_derive","","The `decl_derive!` macro declares a custom derive wrapper.…",N,N],[14,"test_derive","","Run a test on a custom derive. This macro expands both the…",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"eq","","",3,[[["self"],["bindstyle"]],["bool"]]],[11,"eq","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["bindinginfo"]],["bool"]]],[11,"eq","","",1,[[["self"],["variantast"]],["bool"]]],[11,"ne","","",1,[[["self"],["variantast"]],["bool"]]],[11,"eq","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["variantinfo"]],["bool"]]],[11,"eq","","",4,[[["self"],["structure"]],["bool"]]],[11,"ne","","",4,[[["self"],["structure"]],["bool"]]],[11,"clone","","",3,[[["self"]],["bindstyle"]]],[11,"clone","","",0,[[["self"]],["bindinginfo"]]],[11,"clone","","",1,[[["self"]],["variantast"]]],[11,"clone","","",2,[[["self"]],["variantinfo"]]],[11,"clone","","",4,[[["self"]],["structure"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"hash","","",2,N],[11,"hash","","",4,N],[11,"to_tokens","","",3,[[["self"],["tokens"]]]],[11,"to_tokens","","",0,[[["self"],["tokens"]]]]],"paths":[[3,"BindingInfo"],[3,"VariantAst"],[3,"VariantInfo"],[4,"BindStyle"],[3,"Structure"]]};
searchIndex["timely"]={"doc":"Timely dataflow is framework for managing and executing…","items":[[4,"Configuration","timely","Possible configurations for the communication…",N,N],[13,"Thread","","Use one thread.",0,N],[13,"Process","","Use one process with an indicated number of threads.",0,N],[13,"Cluster","","Expect multiple processes indicated by `(threads, process,…",0,N],[0,"communication","","Re-export of the `timely_communication` crate.",N,N],[0,"allocator","timely::communication","Types and traits for the allocation of channels.",N,N],[0,"thread","timely::communication::allocator","Intra-thread communication.",N,N],[3,"Thread","timely::communication::allocator::thread","An allocator for intra-thread communication.",N,N],[3,"Pusher","","The push half of an intra-thread channel.",N,N],[3,"Puller","","The pull half of an intra-thread channel.",N,N],[0,"process","timely::communication::allocator","Typed inter-thread, intra-process channels.",N,N],[3,"Process","timely::communication::allocator::process","An allocater for inter-thread, intra-process communication",N,N],[0,"generic","timely::communication::allocator","A generic allocator, wrapping known implementors of…",N,N],[4,"Generic","timely::communication::allocator::generic","Enumerates known implementors of `Allocate`. Passes trait…",N,N],[13,"Thread","","Intra-thread allocator.",1,N],[13,"Process","","Inter-thread, intra-process allocator.",1,N],[13,"ProcessBinary","","Inter-thread, intra-process serializing allocator.",1,N],[13,"ZeroCopy","","Inter-process allocator.",1,N],[4,"GenericBuilder","","Enumerations of constructable implementors of `Allocate`.",N,N],[13,"Thread","","Builder for `Thread` allocator.",2,N],[13,"Process","","Builder for `Process` allocator.",2,N],[13,"ProcessBinary","","Builder for `ProcessBinary` allocator.",2,N],[13,"ZeroCopy","","Builder for `ZeroCopy` allocator.",2,N],[0,"zero_copy","timely::communication::allocator","Allocators based on serialized data which avoid copies.",N,N],[0,"bytes_slab","timely::communication::allocator::zero_copy","A large binary allocation for writing and sharing.",N,N],[3,"BytesSlab","timely::communication::allocator::zero_copy::bytes_slab","A large binary allocation for writing and sharing.",N,N],[0,"bytes_exchange","timely::communication::allocator::zero_copy","Types and traits for sharing `Bytes`.",N,N],[8,"BytesPush","timely::communication::allocator::zero_copy::bytes_exchange","A target for `Bytes`.",N,N],[10,"extend","","Pushes many bytes at the instance.",3,N],[8,"BytesPull","","A source for `Bytes`.",N,N],[10,"drain_into","","Drains many bytes from the instance.",4,N],[3,"Signal","","A signal appropriate to wake a single thread.",N,N],[3,"MergeQueue","","Who knows.",N,N],[3,"SendEndpoint","","A `BytesPush` wrapper which stages writes.",N,N],[0,"tcp","timely::communication::allocator::zero_copy","",N,N],[5,"recv_loop","timely::communication::allocator::zero_copy::tcp","Repeatedly reads from a TcpStream and carves out messages.",N,N],[5,"send_loop","","Repeatedly sends messages into a TcpStream.",N,N],[0,"allocator","timely::communication::allocator::zero_copy","Zero-copy allocator based on TCP.",N,N],[3,"TcpBuilder","timely::communication::allocator::zero_copy::allocator","Builds an instance of a TcpAllocator.",N,N],[5,"new_vector","","Creates a vector of builders, sharing appropriate state.",N,N],[3,"TcpAllocator","","A TCP-based allocator for inter-process communication.",N,N],[0,"allocator_process","timely::communication::allocator::zero_copy","Zero-copy allocator for intra-process serialized…",N,N],[3,"ProcessBuilder","timely::communication::allocator::zero_copy::allocator_process","Builds an instance of a ProcessAllocator.",N,N],[3,"ProcessAllocator","","A serializing allocator for inter-thread intra-process…",N,N],[0,"initialize","timely::communication::allocator::zero_copy","Network initialization.",N,N],[3,"CommsGuard","timely::communication::allocator::zero_copy::initialize","Join handles for send and receive threads.",N,N],[5,"initialize_networking","","Initializes network connections",N,[[["vec",["string"]],["usize"],["usize"],["bool"],["box",["fn"]]],["result",["error"]]]],[0,"push_pull","timely::communication::allocator::zero_copy","Push and Pull implementations wrapping serialized data.",N,N],[3,"Pusher","timely::communication::allocator::zero_copy::push_pull","An adapter into which one may push elements of type `T`.",N,N],[3,"Puller","","An adapter from which one can pull elements of type `T`.",N,N],[3,"PullerInner","","An adapter from which one can pull elements of type `T`.",N,N],[8,"AllocateBuilder","timely::communication::allocator","A proto-allocator, which implements `Send` and can be…",N,N],[16,"Allocator","","The type of built allocator.",5,N],[10,"build","","Builds allocator, consumes self.",5,N],[8,"Allocate","","A type capable of allocating channels.",N,N],[10,"index","","The index of the worker out of `(0..self.peers())`.",6,[[["self"]],["usize"]]],[10,"peers","","The number of workers.",6,[[["self"]],["usize"]]],[10,"allocate","","Constructs several send endpoints and one receive endpoint.",6,N],[11,"pre_work","","Work performed before scheduling dataflows.",6,N],[11,"post_work","","Work performed after scheduling dataflows.",6,N],[0,"networking","timely::communication","Networking code for sending and receiving fixed size…",N,N],[3,"MessageHeader","timely::communication::networking","Framing data for each `Vec<u8>` transmission, indicating a…",N,N],[12,"channel","","index of channel.",7,N],[12,"source","","index of worker sending message.",7,N],[12,"target","","index of worker receiving message.",7,N],[12,"length","","number of bytes in message.",7,N],[12,"seqno","","sequence number.",7,N],[5,"create_sockets","","Creates socket connections from a list of host addresses.",N,[[["vec",["string"]],["usize"],["bool"]],["result",["vec","error"]]]],[5,"start_connections","","Result contains connections [0, my_index - 1].",N,[[["arc",["vec"]],["usize"],["bool"]],["result",["vec","error"]]]],[5,"await_connections","","Result contains connections [my_index + 1, addresses.len()…",N,[[["arc",["vec"]],["usize"],["bool"]],["result",["vec","error"]]]],[0,"initialize","timely::communication","Initialization logic for a generic instance of the…",N,N],[4,"Configuration","timely::communication::initialize","Possible configurations for the communication…",N,N],[13,"Thread","","Use one thread.",0,N],[13,"Process","","Use one process with an indicated number of threads.",0,N],[13,"Cluster","","Expect multiple processes indicated by `(threads, process,…",0,N],[5,"initialize","","Initializes communication and executes a distributed…",N,[[["configuration"],["f"]],["result",["workerguards","string"]]]],[5,"initialize_from","","Initializes computation and runs a distributed computation.",N,[[["vec"],["box",["any"]],["f"]],["result",["workerguards","string"]]]],[3,"WorkerGuards","","Maintains `JoinHandle`s for worker threads.",N,N],[0,"logging","timely::communication","Configuration and events for communication logging.",N,N],[3,"CommunicationSetup","timely::communication::logging","Configuration information about a communication thread.",N,N],[12,"sender","","True when this is a send thread (or the receive thread).",8,N],[12,"process","","The process id of the thread.",8,N],[12,"remote","","The remote process id.",8,N],[4,"CommunicationEvent","","Various communication events.",N,N],[13,"Message","","An observed message.",9,N],[13,"State","","A state transition.",9,N],[3,"MessageEvent","","An observed message.",N,N],[12,"is_send","","true for send event, false for receive event",10,N],[12,"header","","associated message header.",10,N],[3,"StateEvent","","Starting or stopping communication threads.",N,N],[12,"send","","Is the thread a send (vs a recv) thread.",11,N],[12,"process","","The host process id.",11,N],[12,"remote","","The remote process id.",11,N],[12,"start","","Is the thread starting or stopping.",11,N],[0,"message","timely::communication","Types wrapping typed data.",N,N],[4,"RefOrMut","timely::communication::message","Either an immutable or mutable reference.",N,N],[13,"Ref","","An immutable reference.",12,N],[13,"Mut","","A mutable reference.",12,N],[3,"Message","","A wrapped message which may be either typed or binary data.",N,N],[8,"Data","timely::communication","A composite trait for types that may be used with channels.",N,N],[8,"Push","","Pushing elements of type `T`.",N,N],[10,"push","","Pushes `element` and provides the opportunity to take…",13,N],[11,"send","","Pushes `element` and drops any resulting resources.",13,N],[11,"done","","Pushes `None`, conventionally signalling a flush.",13,N],[8,"Pull","","Pulling elements of type `T`.",N,N],[10,"pull","","Pulls an element and provides the opportunity to take…",14,[[["self"]],["option"]]],[11,"recv","","Takes an `Option<T>` and leaves `None` behind.",14,[[["self"]],["option"]]],[0,"bytes","timely","Re-export of the `timely_bytes` crate.",N,N],[0,"rc","timely::bytes","An `Rc`-backed mutable byte slice backed by a common…",N,N],[3,"Bytes","timely::bytes::rc","A thread-local byte buffer backed by a shared allocation.",N,N],[0,"arc","timely::bytes","An `Arc`-backed mutable byte slice backed by a common…",N,N],[3,"Bytes","timely::bytes::arc","A thread-safe byte buffer backed by a shared allocation.",N,N],[0,"logging_core","timely","Re-export of the `timely_logging` crate.",N,N],[3,"Registry","timely::logging_core","",N,N],[3,"Logger","","A buffering logger.",N,N],[0,"worker","timely","The root of each single-threaded worker.",N,N],[3,"Worker","timely::worker","A `Worker` is the entry point to a timely dataflow…",N,N],[8,"AsWorker","","Methods provided by the root Worker.",N,N],[10,"new_identifier","","Allocates a new worker-unique identifier.",15,[[["self"]],["usize"]]],[10,"log_register","","Provides access to named logging streams.",15,[[["self"]],["refmut",["registry"]]]],[11,"logging","","Provides access to the timely logging stream.",15,[[["self"]],["option",["timelylogger"]]]],[11,"new","","Allocates a new `Worker` bound to a channel allocator.",16,[[["a"]],["worker"]]],[11,"step","","Performs one step of the computation.",16,[[["self"]],["bool"]]],[11,"step_while","","Calls `self.step()` as long as `func` evaluates to true.",16,[[["self"],["f"]]]],[11,"index","","The index of the worker out of its peers.",16,[[["self"]],["usize"]]],[11,"peers","","The total number of peer workers.",16,[[["self"]],["usize"]]],[11,"new_identifier","","Allocate a new worker-unique identifier.",16,[[["self"]],["usize"]]],[11,"log_register","","Access to named loggers.",16,[[["self"]],["refmut",["registry"]]]],[11,"dataflow","","Construct a new dataflow.",16,[[["self"],["f"]],["r"]]],[11,"dataflow_using","","Construct a new dataflow binding resources that are…",16,[[["self"],["v"],["f"]],["r"]]],[0,"progress","timely","Progress tracking mechanisms to support notification in…",N,N],[0,"change_batch","timely::progress","A collection of updates of the form `(T, i64)`.",N,N],[3,"ChangeBatch","timely::progress::change_batch","A collection of updates of the form `(T, i64)`.",N,N],[11,"new","","Allocates a new empty `ChangeBatch`.",17,[[],["changebatch"]]],[11,"new_from","","Allocates a new `ChangeBatch` with a single entry.",17,[[["t"],["i64"]],["changebatch"]]],[11,"is_dirty","","Returns true if the change batch is not guaranteed compact.",17,[[["self"]],["bool"]]],[11,"update","","Adds a new update, for `item` with `value`.",17,[[["self"],["t"],["i64"]]]],[11,"extend","","Performs a sequence of updates described by `iterator`.",17,[[["self"],["i"]]]],[11,"into_inner","","Extracts the `Vec<(T, i64)>` from the map, consuming it.",17,[[["self"]],["vec"]]],[11,"iter","","Iterates over the contents of the map.",17,[[["self"]],["iter"]]],[11,"drain","","Drains the set of updates.",17,[[["self"]],["drain"]]],[11,"clear","","Clears the map.",17,[[["self"]]]],[11,"is_empty","","True iff all keys have value zero.",17,[[["self"]],["bool"]]],[11,"canonicalize","","Compact and sort data, so that two instances can be…",17,[[["self"]]]],[11,"drain_into","","Drains `self` into `other`.",17,[[["self"],["changebatch"]]]],[11,"compact","","Compact the internal representation.",17,[[["self"]]]],[0,"frontier","timely::progress","Tracks minimal sets of mutually incomparable elements of a…",N,N],[3,"Antichain","timely::progress::frontier","A set of mutually incomparable elements.",N,N],[3,"MutableAntichain","","An antichain based on a multiset whose elements…",N,N],[3,"AntichainRef","","A wrapper for elements of an antichain.",N,N],[11,"insert","","Updates the `Antichain` if the element is not greater than…",18,[[["self"],["t"]],["bool"]]],[11,"new","","Creates a new empty `Antichain`.",18,[[],["antichain"]]],[11,"from_elem","","Creates a new singleton `Antichain`.",18,[[["t"]],["antichain"]]],[11,"clear","","Clears the contents of the antichain.",18,[[["self"]]]],[11,"sort","","Sorts the elements so that comparisons between antichains…",18,[[["self"]]]],[11,"less_than","","Returns true if any item in the antichain is strictly less…",18,[[["self"],["t"]],["bool"]]],[11,"less_equal","","Returns true if any item in the antichain is less than or…",18,[[["self"],["t"]],["bool"]]],[11,"dominates","","Returns true if every element of `other` is greater or…",18,[[["self"],["antichain"]],["bool"]]],[11,"elements","","Reveals the elements in the antichain.",18,N],[11,"new","","Creates a new empty `MutableAntichain`.",19,[[],["mutableantichain"]]],[11,"clear","","Removes all elements.",19,[[["self"]]]],[11,"empty","","This method deletes the contents. Unlike `clear` it…",19,[[["self"]]]],[11,"frontier","","Reveals the minimal elements with positive count.",19,[[["self"]],["antichainref"]]],[11,"new_bottom","","Creates a new singleton `MutableAntichain`.",19,[[["t"]],["mutableantichain"]]],[11,"is_empty","","Returns true if there are no elements in the…",19,[[["self"]],["bool"]]],[11,"less_than","","Returns true if any item in the `MutableAntichain` is…",19,[[["self"],["t"]],["bool"]]],[11,"less_equal","","Returns true if any item in the `MutableAntichain` is less…",19,[[["self"],["t"]],["bool"]]],[11,"update_dirty","","Allows a single-element push, but dirties the antichain…",19,[[["self"],["t"],["i64"]]]],[11,"update_iter","","Applies updates to the antichain and applies `action` to…",19,[[["self"],["i"]]]],[11,"update_iter_and","","Applies updates to the antichain and applies `action` to…",19,[[["self"],["i"],["a"]]]],[11,"count_for","","Reports the count for a queried time.",19,[[["self"],["t"]],["i64"]]],[11,"new","","Create a new `AntichainRef` from a reference to a slice of…",20,N],[11,"is_empty","","Returns true if there are no elements in the `AntichainRef`.",20,[[["self"]],["bool"]]],[11,"iter","","Create an iterator over the elements in this `AntichainRef`.",20,[[["self"]],["iter"]]],[11,"less_than","","Returns true if any item in the `AntichainRef` is strictly…",20,[[["self"],["t"]],["bool"]]],[11,"less_equal","","Returns true if any item in the `AntichainRef` is less…",20,[[["self"],["t"]],["bool"]]],[11,"len","","Returns the number of elements in this `AntichainRef`.",20,[[["self"]],["usize"]]],[11,"to_vec","","Copies `self` into a new `Vec`.",20,[[["self"]],["vec"]]],[0,"nested","timely::progress","Coordination of progress information between a…",N,N],[0,"pointstamp_counter","timely::progress::nested","Manages pointstamp counts (timestamp, location) within a…",N,N],[3,"PointstampCounter","timely::progress::nested::pointstamp_counter","Represents changes to pointstamps before and after…",N,N],[12,"source","","timestamp updates indexed by (scope, output)",21,N],[12,"target","","timestamp updates indexed by (scope, input)",21,N],[12,"pushed","","pushed updates indexed by (scope, input)",21,N],[11,"update_target","","Updates the count for a time at a target.",21,[[["self"],["target"],["t"],["i64"]]]],[11,"update_source","","Updates the count for a time at a source.",21,[[["self"],["source"],["t"],["i64"]]]],[11,"clear","","Clears the pointstamp counter.",21,[[["self"]]]],[11,"allocate_for_operator","","Allocates internal state given an operator's inputs and…",21,[[["self"],["usize"],["usize"]]]],[0,"summary","timely::progress::nested","Path summaries that are either child local, or leave the…",N,N],[4,"Summary","timely::progress::nested::summary","Summarizes a path within a scope.",N,N],[13,"Local","","Reachable within the scope, and a summary adjusting only…",22,N],[13,"Outer","","Reachable outside the scope, with adjustments to both…",22,N],[0,"product","timely::progress::nested","A pair timestamp suitable for use with the product partial…",N,N],[3,"Product","timely::progress::nested::product","A nested pair of timestamps, one outer and one inner.",N,N],[12,"outer","","Outer timestamp.",23,N],[12,"inner","","Inner timestamp.",23,N],[8,"Empty","","A type that does not affect total orderedness.",N,N],[11,"new","","Creates a new product from outer and inner coordinates.",23,[[["touter"],["tinner"]],["product"]]],[0,"subgraph","timely::progress::nested","Implements `Operate` for a scoped collection of child…",N,N],[3,"Source","timely::progress::nested::subgraph","Names a source of a data stream.",N,N],[12,"index","","Index of the source operator.",24,N],[12,"port","","Number of the output port from the operator.",24,N],[3,"Target","","Names a target of a data stream.",N,N],[12,"index","","Index of the target operator.",25,N],[12,"port","","Number of the input port to the operator.",25,N],[3,"SubgraphBuilder","","A builder structure for initializing `Subgraph`s.",N,N],[12,"name","","The name of this subgraph.",26,N],[12,"path","","A sequence of integers uniquely identifying the subgraph.",26,N],[3,"Subgraph","","A dataflow subgraph.",N,N],[12,"path","","Path of identifiers from the root.",27,N],[11,"new_input","","Allocates a new input to the subgraph and returns the…",26,[[["self"],["rc",["refcell"]]],["target"]]],[11,"new_output","","Allocates a new output from the subgraph and returns the…",26,[[["self"]],["source"]]],[11,"connect","","Introduces a dependence from the source to the target.",26,[[["self"],["source"],["target"]]]],[11,"new_from","","Creates a new Subgraph from a channel allocator and…",26,[[["usize"],["vec",["usize"]],["option",["logger"]]],["subgraphbuilder"]]],[11,"allocate_child_id","","Allocates a new child identifier, for later use.",26,[[["self"]],["usize"]]],[11,"add_child","","Adds a new child to the subgraph.",26,[[["self"],["box",["operate"]],["usize"],["usize"]]]],[11,"build","","Now that initialization is complete, actually build a…",26,[[["self"],["a"]],["subgraph"]]],[0,"reachability","timely::progress::nested","Manages pointstamp reachability within a graph.",N,N],[3,"Builder","timely::progress::nested::reachability","A topology builder, which can summarize reachability along…",N,N],[3,"Summary","","A summary of minimal path summaries in a timely dataflow…",N,N],[12,"source_target","","Compiled source-to-target reachability.",28,N],[12,"target_target","","Compiled target-to-target reachability.",28,N],[3,"Tracker","","An interactive tracker of propagated reachability…",N,N],[11,"new","","Create a new empty topology builder.",29,[[],["self"]]],[11,"add_node","","Add links internal to operators.",29,[[["self"],["usize"],["usize"],["usize"],["vec",["vec"]]]]],[11,"add_edge","","Add links between operators.",29,[[["self"],["source"],["target"]]]],[11,"summarize","","Compiles the current nodes and edges into immutable path…",29,[[["self"]],["summary"]]],[11,"update_target","","Updates the count for a time at a target.",30,[[["self"],["target"],["t"],["i64"]]]],[11,"update_source","","Updates the count for a time at a source.",30,[[["self"],["source"],["t"],["i64"]]]],[11,"node_state","","Returns references to per-node state describing input and…",30,N],[11,"target","","Reference to the target mutable antichains.",30,N],[11,"source","","Reference to the source mutable antichains.",30,N],[11,"clear","","Clears the pointstamp counter.",30,[[["self"]]]],[11,"is_empty","","",30,[[["self"]],["bool"]]],[11,"tracking_anything","","Returns true if any source or target is non-empty.",30,[[["self"]],["bool"]]],[11,"allocate_from","","Allocate a new `Tracker` using the shape from `summaries`.",30,[[["summary"]],["self"]]],[11,"propagate_node","","Propagates updates from an indicated node.",30,[[["self"],["usize"]]]],[11,"propagate_all","","Propagates all updates made to sources and targets.",30,[[["self"]]]],[11,"pushed_mut","","Provides access to pushed changes for a node.",30,N],[0,"reachability_neu","timely::progress::nested","Manages pointstamp reachability within a graph.",N,N],[3,"Builder","timely::progress::nested::reachability_neu","A topology builder, which can summarize reachability along…",N,N],[12,"nodes","","Internal connections within hosted operators.",31,N],[12,"edges","","Direct connections from sources to targets.",31,N],[12,"shape","","Numbers of inputs and outputs for each node.",31,N],[3,"Tracker","","An interactive tracker of propagated reachability…",N,N],[11,"new","","Create a new empty topology builder.",31,[[],["self"]]],[11,"add_node","","Add links internal to operators.",31,[[["self"],["usize"],["usize"],["usize"],["vec",["vec"]]]]],[11,"add_edge","","Add links between operators.",31,[[["self"],["source"],["target"]]]],[11,"build","","Compiles the current nodes and edges into immutable path…",31,[[["self"]],["tracker"]]],[11,"update_target","","Updates the count for a time at a target.",32,[[["self"],["target"],["t"],["i64"]]]],[11,"update_source","","Updates the count for a time at a source.",32,[[["self"],["source"],["t"],["i64"]]]],[11,"allocate_from","","Allocate a new `Tracker` using the shape from `summaries`.",32,[[["builder"]],["self"]]],[11,"propagate_all","","Propagates all pending updates.",32,[[["self"]]]],[11,"pushed","","A mutable reference to the pushed results of changes.",32,[[["self"]],["changebatch"]]],[0,"timestamp","timely::progress","A partially ordered measure of progress at each timely…",N,N],[3,"RootTimestamp","timely::progress::timestamp","An empty timestamp used by the root scope.",N,N],[3,"RootSummary","","An empty path summary for root timestamps.",N,N],[8,"Timestamp","","A composite trait for types that serve as timestamps in…",N,N],[16,"Summary","","A type summarizing action on a timestamp along a dataflow…",33,N],[8,"PathSummary","","A summary of how a timestamp advances along a timely…",N,N],[10,"results_in","","Advances a timestamp according to the timestamp actions on…",34,[[["self"],["t"]],["option"]]],[10,"followed_by","","Composes this path summary with another path summary.",34,[[["self"],["self"]],["option"]]],[11,"new","","Constructs a new `Product<RootTimestamp,T>`.",35,[[["t"]],["product",["roottimestamp"]]]],[0,"operate","timely::progress","Methods which describe an operators topology, and the…",N,N],[8,"Operate","timely::progress::operate","Methods for describing an operators topology, and the…",N,N],[11,"local","","Indicates if the operator is strictly local to this worker.",36,[[["self"]],["bool"]]],[10,"inputs","","The number of inputs.",36,[[["self"]],["usize"]]],[10,"outputs","","The number of outputs.",36,[[["self"]],["usize"]]],[11,"get_internal_summary","","Fetches summary information about internal structure of…",36,N],[11,"set_external_summary","","Presents summary information about the external structure…",36,N],[11,"push_external_progress","","Reports a summary of progress statements external to the…",36,N],[10,"pull_internal_progress","","Retrieves a summary of progress statements internal to the…",36,N],[10,"name","","A descriptive name for the operator",36,[[["self"]],["string"]]],[11,"notify_me","","Indicates of whether the operator requires…",36,[[["self"]],["bool"]]],[0,"broadcast","timely::progress","Broadcasts progress information among workers.",N,N],[3,"Progcaster","timely::progress::broadcast","Manages broadcasting of progress updates to and receiving…",N,N],[6,"ProgressVec","","A list of progress updates corresponding to…",N,N],[6,"ProgressMsg","","A progress update message consisting of source worker id,…",N,N],[11,"new","","Creates a new `Progcaster` using a channel from the…",37,[[["a"],["vec"],["option",["logger"]]],["progcaster"]]],[11,"send_and_recv","","Sends and receives progress updates, broadcasting the…",37,[[["self"],["changebatch"],["changebatch"]]]],[0,"dataflow","timely","Abstractions for timely dataflow programming.",N,N],[0,"operators","timely::dataflow","Extension traits for `Stream` implementing various…",N,N],[3,"Notificator","timely::dataflow::operators","Tracks requests for notification and delivers available…",N,N],[3,"FrontierNotificator","","Tracks requests for notification and delivers available…",N,N],[3,"Capability","","The capability to send data with a certain timestamp on a…",N,N],[3,"CapabilityRef","","An unowned capability, which can be used but not retained.",N,N],[3,"CapabilitySet","","A set of capabilities, for possibly incomparable times.",N,N],[0,"enterleave","","Extension traits to move a `Stream` between an outer…",N,N],[8,"Enter","timely::dataflow::operators::enterleave","Extension trait to move a `Stream` into a child of its…",N,N],[10,"enter","","Moves the `Stream` argument into a child of its current…",38,[[["self"],["child"]],["stream",["child"]]]],[8,"EnterAt","","Extension trait to move a `Stream` into a child of its…",N,N],[10,"enter_at","","Moves the `Stream` argument into a child of its current…",39,[[["self"],["child"],["f"]],["stream",["child"]]]],[8,"Leave","","Extension trait to move a `Stream` to the parent of its…",N,N],[10,"leave","","Moves a `Stream` to the parent of its current `Scope`.",40,[[["self"]],["stream"]]],[0,"input","timely::dataflow::operators","Create new `Streams` connected to external inputs.",N,N],[3,"Handle","timely::dataflow::operators::input","A handle to an input `Stream`, used to introduce data to a…",N,N],[8,"Input","","Create a new `Stream` and `Handle` through which to supply…",N,N],[10,"new_input","","Create a new `Stream` and `Handle` through which to supply…",41,N],[10,"input_from","","Create a new stream from a supplied interactive handle.",41,[[["self"],["handle"]],["stream",["child"]]]],[11,"new","","Allocates a new input handle, from which one can create…",42,[[],["self"]]],[11,"to_stream","","Creates an input stream from the handle in the supplied…",42,[[["self"],["child"]],["stream",["child"]]]],[11,"send","","Sends one record into the corresponding timely dataflow…",42,[[["self"],["d"]]]],[11,"send_batch","","Sends a batch of records into the corresponding timely…",42,[[["self"],["vec"]]]],[11,"advance_to","","Advances the current epoch to `next`.",42,[[["self"],["t"]]]],[11,"close","","Closes the input.",42,[[["self"]]]],[11,"epoch","","Reports the current epoch.",42,[[["self"]],["t"]]],[11,"time","","Reports the current timestamp.",42,[[["self"]],["product"]]],[0,"flow_controlled","timely::dataflow::operators","Methods to construct flow-controlled sources.",N,N],[3,"IteratorSourceInput","timely::dataflow::operators::flow_controlled","Output of the input reading function for iterator_source.",N,N],[12,"lower_bound","","Lower bound on timestamps that can be emitted by this…",43,N],[12,"data","","Any `T: IntoIterator` of new input data in the form (time,…",43,N],[12,"target","","A timestamp that represents the frontier that the probe…",43,N],[5,"iterator_source","","Construct a source that repeatedly calls the provided…",N,[[["g"],["str"],["f"],["handle"]],["stream"]]],[0,"unordered_input","timely::dataflow::operators","Create new `Streams` connected to external inputs.",N,N],[3,"UnorderedHandle","timely::dataflow::operators::unordered_input","A handle to an input `Stream`, used to introduce data to a…",N,N],[8,"UnorderedInput","","Create a new `Stream` and `Handle` through which to supply…",N,N],[10,"new_unordered_input","","Create a new capability-based `Stream` and `Handle`…",44,N],[11,"session","","Allocates a new automatically flushing session based on…",45,[[["self"],["capability"]],["autoflushsession",["pushcounter"]]]],[0,"feedback","timely::dataflow::operators","Create cycles in a timely dataflow graph.",N,N],[3,"Handle","timely::dataflow::operators::feedback","A handle used to bind the source of a loop variable.",N,N],[8,"LoopVariable","","Creates a `Stream` and a `Handle` to later bind the source…",N,N],[10,"loop_variable","","Creates a `Stream` and a `Handle` to later bind the source…",46,N],[8,"ConnectLoop","","Connect a `Stream` to the input of a loop variable.",N,N],[10,"connect_loop","","Connect a `Stream` to be the input of a loop variable.",47,[[["self"],["handle"]]]],[0,"concat","timely::dataflow::operators","Merges the contents of multiple streams.",N,N],[8,"Concat","timely::dataflow::operators::concat","Merge the contents of two streams.",N,N],[10,"concat","","Merge the contents of two streams.",48,[[["self"],["stream"]],["stream"]]],[8,"Concatenate","","Merge the contents of multiple streams.",N,N],[10,"concatenate","","Merge the contents of multiple streams.",49,N],[0,"partition","timely::dataflow::operators","Partition a stream of records into multiple streams.",N,N],[8,"Partition","timely::dataflow::operators::partition","Partition a stream of records into multiple streams.",N,N],[10,"partition","","Produces `parts` output streams, containing records…",50,[[["self"],["u64"],["f"]],["vec",["stream"]]]],[0,"map","timely::dataflow::operators","Extension methods for `Stream` based on record-by-record…",N,N],[8,"Map","timely::dataflow::operators::map","Extension trait for `Stream`.",N,N],[10,"map","","Consumes each element of the stream and yields a new…",51,N],[10,"map_in_place","","Updates each element of the stream and yields the element,…",51,N],[10,"flat_map","","Consumes each element of the stream and yields some number…",51,N],[0,"inspect","timely::dataflow::operators","Extension trait and implementation for observing and…",N,N],[8,"Inspect","timely::dataflow::operators::inspect","Methods to inspect records and batches of records on a…",N,N],[11,"inspect","","Runs a supplied closure on each observed data element.",52,N],[11,"inspect_time","","Runs a supplied closure on each observed data element and…",52,N],[10,"inspect_batch","","Runs a supplied closure on each observed data batch (time…",52,N],[0,"filter","timely::dataflow::operators","Filters a stream by a predicate.",N,N],[8,"Filter","timely::dataflow::operators::filter","Extension trait for filtering.",N,N],[10,"filter","","Returns a new instance of `self` containing only records…",53,N],[0,"delay","timely::dataflow::operators","Operators acting on timestamps to logically delay records",N,N],[8,"Delay","timely::dataflow::operators::delay","Methods to advance the timestamps of records or batches of…",N,N],[10,"delay","","Advances the timestamp of records using a supplied function.",54,N],[10,"delay_batch","","Advances the timestamp of batches of records using a…",54,N],[0,"exchange","timely::dataflow::operators","Exchange records between workers.",N,N],[8,"Exchange","timely::dataflow::operators::exchange","Exchange records between workers.",N,N],[10,"exchange","","Exchange records so that all records with the same `route`…",55,N],[0,"broadcast","timely::dataflow::operators","Broadcast records to all workers.",N,N],[8,"Broadcast","timely::dataflow::operators::broadcast","Broadcast records to all workers.",N,N],[10,"broadcast","","Broadcast records to all workers.",56,[[["self"]],["self"]]],[0,"probe","timely::dataflow::operators","Monitor progress at a `Stream`.",N,N],[3,"Handle","timely::dataflow::operators::probe","Reports information about progress at the probe.",N,N],[8,"Probe","","Monitors progress at a `Stream`.",N,N],[10,"probe","","Constructs a progress probe which indicates which…",57,[[["self"]],["handle"]]],[10,"probe_with","","Inserts a progress probe in a stream.",57,[[["self"],["handle"]],["stream"]]],[11,"less_than","","returns true iff the frontier is strictly less than `time`.",58,[[["self"],["t"]],["bool"]]],[11,"less_equal","","returns true iff the frontier is less than or equal to…",58,[[["self"],["t"]],["bool"]]],[11,"done","","returns true iff the frontier is empty.",58,[[["self"]],["bool"]]],[11,"new","","Allocates a new handle.",58,[[],["self"]]],[11,"with_frontier","","Invokes a method on the frontier, returning its result.",58,[[["self"],["f"]],["r"]]],[0,"to_stream","timely::dataflow::operators","Conversion to the `Stream` type from iterators.",N,N],[8,"ToStream","timely::dataflow::operators::to_stream","Converts to a timely `Stream`.",N,N],[10,"to_stream","","Converts to a timely `Stream`.",59,[[["self"],["s"]],["stream"]]],[0,"capture","timely::dataflow::operators","Operators to capture and replay timely dataflow streams.",N,N],[0,"capture","timely::dataflow::operators::capture","Traits and types for capturing timely dataflow streams.",N,N],[8,"Capture","timely::dataflow::operators::capture::capture","Capture a stream of timestamped data for later replay.",N,N],[10,"capture_into","","Captures a stream of timestamped data for later replay.",60,[[["self"],["p"]]]],[11,"capture","","Captures a stream using Rust's MPSC channels.",60,[[["self"]],["receiver",["event"]]]],[0,"replay","timely::dataflow::operators::capture","Traits and types for replaying captured timely dataflow…",N,N],[8,"Replay","timely::dataflow::operators::capture::replay","Replay a capture stream into a scope with the same…",N,N],[10,"replay_into","","Replays `self` into the provided scope, as a `Stream<S, D>`.",61,[[["self"],["s"]],["stream"]]],[0,"extract","timely::dataflow::operators::capture","Traits and types for extracting captured timely dataflow…",N,N],[8,"Extract","timely::dataflow::operators::capture::extract","Supports extracting a sequence of timestamp and data.",N,N],[10,"extract","","Converts `self` into a sequence of timestamped data.",62,[[["self"]],["vec"]]],[0,"event","timely::dataflow::operators::capture","Traits and types describing timely dataflow events.",N,N],[4,"Event","timely::dataflow::operators::capture::event","Data and progress events of the captured stream.",N,N],[13,"Progress","","Progress received via `push_external_progress`.",63,N],[13,"Messages","","Messages received via the data stream.",63,N],[0,"link","","A linked-list event pusher and iterator.",N,N],[3,"EventLink","timely::dataflow::operators::capture::event::link","A linked list of Event<T, D>.",N,N],[12,"event","","An event, if one exists.",64,N],[12,"next","","The next event, if it exists.",64,N],[11,"new","","Allocates a new `EventLink`.",64,[[],["eventlink"]]],[0,"binary","timely::dataflow::operators::capture::event","A binary event pusher and iterator.",N,N],[3,"EventWriter","timely::dataflow::operators::capture::event::binary","A wrapper for `W: Write` implementing `EventPusher<T, D>`.",N,N],[3,"EventReader","","A Wrapper for `R: Read` implementing `EventIterator<T, D>`.",N,N],[11,"new","","Allocates a new `EventWriter` wrapping a supplied writer.",65,[[["w"]],["eventwriter"]]],[11,"new","","Allocates a new `EventReader` wrapping a supplied reader.",66,[[["r"]],["eventreader"]]],[8,"EventIterator","timely::dataflow::operators::capture::event","Iterates over contained `Event<T, D>`.",N,N],[10,"next","","Iterates over references to `Event<T, D>` elements.",67,[[["self"]],["option",["event"]]]],[8,"EventPusher","","Receives `Event<T, D>` events.",N,N],[10,"push","","Provides a new `Event<T, D>` to the pusher.",68,[[["self"],["event"]]]],[0,"branch","timely::dataflow::operators","Operators that separate one stream into two streams based…",N,N],[8,"Branch","timely::dataflow::operators::branch","Extension trait for `Stream`.",N,N],[10,"branch","","Takes one input stream and splits it into two output…",69,N],[8,"BranchWhen","","Extension trait for `Stream`.",N,N],[10,"branch_when","","Takes one input stream and splits it into two output…",70,N],[0,"aggregation","timely::dataflow::operators","Aggregation operators of various flavors",N,N],[0,"state_machine","timely::dataflow::operators::aggregation","General purpose state transition operator.",N,N],[8,"StateMachine","timely::dataflow::operators::aggregation::state_machine","Generic state-transition machinery: each key has a state,…",N,N],[10,"state_machine","","Tracks a state for each presented key, using user-supplied…",71,[[["self"],["f"],["h"]],["stream"]]],[0,"aggregate","timely::dataflow::operators::aggregation","General purpose intra-timestamp aggregation",N,N],[8,"Aggregate","timely::dataflow::operators::aggregation::aggregate","Generic intra-timestamp aggregation",N,N],[10,"aggregate","","Aggregates data of the form `(key, val)`, using…",72,[[["self"],["f"],["e"],["h"]],["stream"]]],[0,"generic","timely::dataflow::operators","Generic operators defined by user-provided closures.",N,N],[3,"InputHandle","timely::dataflow::operators::generic","Handle to an operator's input stream.",N,N],[3,"FrontieredInputHandle","","Handle to an operator's input stream and frontier.",N,N],[12,"handle","","The underlying input handle.",73,N],[12,"frontier","","The frontier as reported by timely progress tracking.",73,N],[3,"OutputHandle","","Handle to an operator's output stream.",N,N],[3,"Notificator","","Tracks requests for notification and delivers available…",N,N],[3,"FrontierNotificator","","Tracks requests for notification and delivers available…",N,N],[3,"OperatorInfo","","Information about the operator being constructed",N,N],[12,"local_id","","Scope-local index assigned to the operator being…",74,N],[12,"global_id","","Worker-unique identifier.",74,N],[0,"operator","","Methods to construct generic streaming and blocking unary…",N,N],[5,"source","timely::dataflow::operators::generic::operator","Creates a new data stream source for a scope.",N,[[["g"],["str"],["b"]],["stream"]]],[5,"empty","","Constructs an empty stream.",N,[[["g"]],["stream"]]],[8,"Operator","","Methods to construct generic streaming and blocking…",N,N],[10,"unary_frontier","","Creates a new dataflow operator that partitions its input…",75,[[["self"],["p"],["str"],["b"]],["stream"]]],[10,"unary_notify","","Creates a new dataflow operator that partitions its input…",75,N],[10,"unary","","Creates a new dataflow operator that partitions its input…",75,[[["self"],["p"],["str"],["b"]],["stream"]]],[10,"binary_frontier","","Creates a new dataflow operator that partitions its input…",75,[[["self"],["stream"],["p1"],["p2"],["str"],["b"]],["stream"]]],[10,"binary_notify","","Creates a new dataflow operator that partitions its input…",75,N],[10,"binary","","Creates a new dataflow operator that partitions its input…",75,[[["self"],["stream"],["p1"],["p2"],["str"],["b"]],["stream"]]],[10,"sink","","Creates a new dataflow operator that partitions its input…",75,[[["self"],["p"],["str"],["l"]]]],[0,"builder_rc","timely::dataflow::operators::generic","Types to build operators with general shapes.",N,N],[3,"OperatorBuilder","timely::dataflow::operators::generic::builder_rc","Builds operators with generic shape.",N,N],[11,"new","","Allocates a new generic operator builder from its…",76,[[["string"],["g"]],["self"]]],[11,"set_notify","","Indicates whether the operator requires frontier…",76,[[["self"],["bool"]]]],[11,"new_input","","Adds a new input to a generic operator builder, returning…",76,[[["self"],["stream"],["p"]],["inputhandle"]]],[11,"new_input_connection","","Adds a new input with connection information to a generic…",76,[[["self"],["stream"],["p"],["vec",["antichain"]]],["inputhandle"]]],[11,"new_output","","Adds a new output to a generic operator builder, returning…",76,N],[11,"new_output_connection","","Adds a new output with connection information to a generic…",76,N],[11,"build","","Creates an operator implementation from supplied logic…",76,[[["self"],["b"]]]],[11,"index","","Get the identifier assigned to the operator being…",76,[[["self"]],["usize"]]],[11,"global","","The operator's worker-unique identifier.",76,[[["self"]],["usize"]]],[0,"builder_raw","timely::dataflow::operators::generic","Types to build operators with general shapes.",N,N],[3,"OperatorShape","timely::dataflow::operators::generic::builder_raw","Contains type-free information about the operator…",N,N],[3,"OperatorBuilder","","Builds operators with generic shape.",N,N],[11,"inputs","","The number of inputs of this operator",77,[[["self"]],["usize"]]],[11,"outputs","","The number of outputs of this operator",77,[[["self"]],["usize"]]],[11,"new","","Allocates a new generic operator builder from its…",78,[[["string"],["g"]],["self"]]],[11,"index","","The operator's scope-local index.",78,[[["self"]],["usize"]]],[11,"global","","The operator's worker-unique identifier.",78,[[["self"]],["usize"]]],[11,"shape","","Return a reference to the operator's shape",78,[[["self"]],["operatorshape"]]],[11,"set_notify","","Indicates whether the operator requires frontier…",78,[[["self"],["bool"]]]],[11,"new_input","","Adds a new input to a generic operator builder, returning…",78,N],[11,"new_input_connection","","Adds a new input to a generic operator builder, returning…",78,N],[11,"new_output","","Adds a new input to a generic operator builder, returning…",78,N],[11,"new_output_connection","","Adds a new input to a generic operator builder, returning…",78,N],[11,"build","","Creates an operator implementation from supplied logic…",78,[[["self"],["pep"],["pip"]]]],[11,"next","timely::dataflow::operators::generic","Reads the next input buffer (at some timestamp `t`) and a…",79,[[["self"]],["option"]]],[11,"for_each","","Repeatedly calls `logic` till exhaustion of the available…",79,[[["self"],["f"]]]],[11,"new","","Allocate a new frontiered input handle.",73,[[["inputhandle"],["mutableantichain"]],["self"]]],[11,"next","","Reads the next input buffer (at some timestamp `t`) and a…",73,[[["self"]],["option"]]],[11,"for_each","","Repeatedly calls `logic` till exhaustion of the available…",73,[[["self"],["f"]]]],[11,"frontier","","Inspect the frontier associated with this input.",73,[[["self"]],["mutableantichain"]]],[11,"session","","Obtains a session that can send data at the timestamp…",80,[[["self"],["c"]],["session",["pushcounter"]]]],[11,"new","timely::dataflow::operators","Allocates a new `Notificator`.",81,N],[11,"frontier","","Reveals the elements in the frontier of the indicated input.",81,[[["self"],["usize"]],["antichainref"]]],[11,"notify_at","","Requests a notification at the time associated with…",81,[[["self"],["capability"]]]],[11,"for_each","","Repeatedly calls `logic` until exhaustion of the available…",81,[[["self"],["f"]]]],[11,"new","","Allocates a new `FrontierNotificator`.",82,[[],["self"]]],[11,"from","","Allocates a new `FrontierNotificator` with initial…",82,[[["i"]],["self"]]],[11,"notify_at","","Requests a notification at the time associated with…",82,[[["self"],["capability"]]]],[11,"notify_at_frontiered","","Requests a notification at the time associated with…",82,N],[11,"make_available","","Enables pending notifications not in advance of any…",82,N],[11,"next","","Returns the next available capability with respect to the…",82,N],[11,"for_each","","Repeatedly calls `logic` till exhaustion of the…",82,N],[11,"monotonic","","Creates a notificator session in which delivered…",82,N],[11,"pending","","Iterates over pending capabilities and their count. The…",82,[[["self"]],["iter"]]],[11,"new","timely::dataflow::operators::generic","Construct a new `OperatorInfo`.",74,[[["usize"],["usize"]],["operatorinfo"]]],[0,"reclock","timely::dataflow::operators","Extension methods for `Stream` based on record-by-record…",N,N],[8,"Reclock","timely::dataflow::operators::reclock","Extension trait for reclocking a stream.",N,N],[10,"reclock","","Delays records until an input is observed on the `clock`…",83,[[["self"],["stream"]],["stream"]]],[0,"count","timely::dataflow::operators","Counts the number of records at each time.",N,N],[8,"Accumulate","timely::dataflow::operators::count","Accumulates records within a timestamp.",N,N],[10,"accumulate","","Accumulates records within a timestamp.",84,N],[11,"count","","Counts the number of records observed at each time.",84,[[["self"]],["stream",["usize"]]]],[11,"time","timely::dataflow::operators","The timestamp associated with this capability.",85,[[["self"]],["t"]]],[11,"delayed","","Makes a new capability for a timestamp `new_time` greater…",85,[[["self"],["t"]],["capability"]]],[11,"downgrade","","Downgrades the capability to one corresponding to…",85,[[["self"],["t"]]]],[11,"time","","The timestamp associated with this capability.",86,[[["self"]],["t"]]],[11,"delayed","","Makes a new capability for a timestamp `new_time` greater…",86,[[["self"],["t"]],["capability"]]],[11,"delayed_for_output","","Delays capability for a specific output port.",86,[[["self"],["t"],["usize"]],["capability"]]],[11,"retain","","Transform to an owned capability.",86,[[["self"]],["capability"]]],[11,"retain_for_output","","Transforms to an owned capability for a specific output…",86,[[["self"],["usize"]],["capability"]]],[11,"new","","Allocates an empty capability set.",87,[[],["self"]]],[11,"insert","","Inserts `capability` into the set, discarding redundant…",87,[[["self"],["capability"]]]],[11,"delayed","","Creates a new capability to send data at `time`.",87,[[["self"],["t"]],["capability"]]],[11,"downgrade","","Downgrades the set of capabilities to correspond with the…",87,N],[0,"channels","timely::dataflow","Structured communication between timely dataflow operators.",N,N],[3,"Message","timely::dataflow::channels","A serializable representation of timestamped data.",N,N],[12,"time","","The timestamp associated with the message.",88,N],[12,"data","","The data in the message.",88,N],[12,"from","","The source worker.",88,N],[12,"seq","","A sequence number for this worker-to-worker stream.",88,N],[0,"pushers","","A collection of types that may be pushed at.",N,N],[0,"tee","timely::dataflow::channels::pushers","A `Push` implementor with a list of `Box<Push>` to forward…",N,N],[3,"Tee","timely::dataflow::channels::pushers::tee","Wraps a shared list of `Box<Push>` to forward pushes to.…",N,N],[3,"TeeHelper","","A shared list of `Box<Push>` used to add `Push`…",N,N],[11,"new","","Allocates a new pair of `Tee` and `TeeHelper`.",89,N],[11,"add_pusher","","Adds a new `Push` implementor to the list of recipients…",90,[[["self"],["p"]]]],[0,"exchange","timely::dataflow::channels::pushers","The exchange pattern distributes pushed data between many…",N,N],[3,"Exchange","timely::dataflow::channels::pushers::exchange","Distributes records among target pushees according to a…",N,N],[11,"new","","Allocates a new `Exchange` from a supplied set of pushers…",91,[[["vec"],["h"]],["exchange"]]],[0,"counter","timely::dataflow::channels::pushers","A wrapper which counts the number of records pushed past…",N,N],[3,"Counter","timely::dataflow::channels::pushers::counter","A wrapper which updates shared `produced` based on the…",N,N],[11,"new","","Allocates a new `Counter` from a pushee and shared counts.",92,[[["p"]],["counter"]]],[11,"produced","","A references to shared changes in counts, for cloning or…",92,[[["self"]],["rc"]]],[0,"buffer","timely::dataflow::channels::pushers","Buffering and session mechanisms to provide the appearance…",N,N],[3,"Buffer","timely::dataflow::channels::pushers::buffer","Buffers data sent at the same time, for efficient…",N,N],[3,"Session","","An output session for sending records at a specified time.",N,N],[3,"AutoflushSession","","A session which will flush itself when dropped.",N,N],[11,"new","","Creates a new `Buffer`.",93,[[["p"]],["buffer"]]],[11,"session","","Returns a `Session`, which accepts data to send at the…",93,[[["self"],["t"]],["session"]]],[11,"autoflush_session","","Allocates a new `AutoflushSession` which flushes itself on…",93,[[["self"],["capability"]],["autoflushsession"]]],[11,"inner","","Returns a reference to the inner `P: Push` type.",93,[[["self"]],["p"]]],[11,"cease","","Flushes all data and pushes a `None` to `self.pusher`,…",93,[[["self"]]]],[11,"give","","Provides one record at the time specified by the `Session`.",94,[[["self"],["d"]]]],[11,"give_iterator","","Provides an iterator of records at the time specified by…",94,[[["self"],["i"]]]],[11,"give_vec","","Provides a fully formed `Content<D>` message for senders…",94,[[["self"],["vec"]]]],[11,"give","","Transmits a single record.",95,[[["self"],["d"]]]],[11,"give_iterator","","Transmits records produced by an iterator.",95,[[["self"],["i"]]]],[11,"give_content","","Transmits a pre-packed batch of data.",95,[[["self"],["vec"]]]],[0,"pullers","timely::dataflow::channels","A collection of types that may be pulled from.",N,N],[0,"counter","timely::dataflow::channels::pullers","A wrapper which accounts records pulled past in a shared…",N,N],[3,"Counter","timely::dataflow::channels::pullers::counter","A wrapper which accounts records pulled past in a shared…",N,N],[11,"next","","Retrieves the next timestamp and batch of data.",96,[[["self"]],["option",["bundle"]]]],[11,"new","","Allocates a new `Counter` from a boxed puller.",96,[[["p"]],["self"]]],[11,"consumed","","A references to shared changes in counts, for cloning or…",96,[[["self"]],["rc"]]],[0,"pact","timely::dataflow::channels","Parallelization contracts, describing how data must be…",N,N],[3,"Pipeline","timely::dataflow::channels::pact","A direct connection",N,N],[3,"Exchange","","An exchange between multiple observers by data",N,N],[3,"LogPusher","","Wraps a `Message<T,D>` pusher to provide a `Push<(T,…",N,N],[3,"LogPuller","","Wraps a `Message<T,D>` puller to provide a `Pull<(T,…",N,N],[8,"ParallelizationContract","","A `ParallelizationContract` allocates paired `Push` and…",N,N],[16,"Pusher","","Type implementing `Push` produced by this pact.",97,N],[16,"Puller","","Type implementing `Pull` produced by this pact.",97,N],[10,"connect","","Allocates a matched pair of push and pull endpoints…",97,N],[11,"new","","Allocates a new `Exchange` pact from a distribution…",98,[[["f"]],["exchange"]]],[11,"new","","Allocates a new pusher.",99,[[["p"],["usize"],["usize"],["usize"],["option",["logger"]]],["self"]]],[11,"new","","Allocates a new `Puller`.",100,[[["p"],["usize"],["usize"],["option",["logger"]]],["self"]]],[6,"Bundle","timely::dataflow::channels","The input to and output from timely dataflow communication…",N,N],[11,"default_length","","Default buffer size.",88,[[],["usize"]]],[11,"new","","Creates a new message instance from arguments.",88,[[["t"],["vec"],["usize"],["usize"]],["self"]]],[11,"push_at","","Forms a message, and pushes contents at `pusher`.",88,[[["vec"],["t"],["p"]]]],[0,"scopes","timely::dataflow","Hierarchical organization of timely dataflow graphs.",N,N],[0,"child","timely::dataflow::scopes","A child dataflow scope, used to build nested dataflow…",N,N],[3,"Child","timely::dataflow::scopes::child","A `Child` wraps a `Subgraph` and a parent `G: Scope`. It…",N,N],[12,"subgraph","","The subgraph under assembly.",101,N],[12,"parent","","A copy of the child's parent scope.",101,N],[12,"logging","","The log writer for this scope.",101,N],[11,"index","","This worker's unique identifier.",101,[[["self"]],["usize"]]],[11,"peers","","The total number of workers in the computation.",101,[[["self"]],["usize"]]],[8,"ScopeParent","timely::dataflow::scopes","The information a child scope needs from its parent.",N,N],[16,"Timestamp","","The timestamp associated with data in this scope.",102,N],[8,"Scope","","The fundamental operations required to add and connect…",N,N],[10,"name","","A useful name describing the scope.",103,[[["self"]],["string"]]],[10,"addr","","A sequence of scope identifiers describing the path from…",103,[[["self"]],["vec",["usize"]]]],[10,"add_edge","","Connects a source of data with a target of the data. This…",103,[[["self"],["source"],["target"]]]],[11,"add_operator","","Adds a child `Operate` to the builder's scope. Returns the…",103,[[["self"],["box",["operate"]]],["usize"]]],[10,"allocate_operator_index","","Allocates a new scope-local operator index.",103,[[["self"]],["usize"]]],[11,"add_operator_with_index","","Adds a child `Operate` to the builder's scope using a…",103,[[["self"],["box",["operate"]],["usize"]]]],[10,"add_operator_with_indices","","Adds a child `Operate` to the builder's scope using…",103,[[["self"],["box",["operate"]],["usize"],["usize"]]]],[10,"scoped","","Creates a `Subgraph` from a closure acting on a `Child`…",103,[[["self"],["f"]],["r"]]],[0,"stream","timely::dataflow","A handle to a typed stream of timely data.",N,N],[3,"Stream","timely::dataflow::stream","Abstraction of a stream of `D: Data` records timestamped…",N,N],[11,"connect_to","","Connects the stream to a destination.",104,[[["self"],["target"],["p"],["usize"]]]],[11,"new","","Allocates a `Stream` from a supplied `Source` name and…",104,[[["source"],["teehelper"],["s"]],["self"]]],[11,"name","","The name of the stream's source operator.",104,[[["self"]],["source"]]],[11,"scope","","The scope immediately containing the stream.",104,[[["self"]],["s"]]],[0,"synchronization","timely","Synchronization primitives implemented in timely dataflow.",N,N],[0,"barrier","timely::synchronization","Barrier synchronization.",N,N],[3,"Barrier","timely::synchronization::barrier","A re-usable barrier synchronization mechanism.",N,N],[11,"new","","Allocates a new barrier.",105,[[["worker"]],["self"]]],[11,"wait","","Blocks until all other workers have reached this barrier.",105,[[["self"]]]],[0,"sequence","timely::synchronization","A shared ordered log.",N,N],[3,"Sequencer","timely::synchronization::sequence","Orders elements inserted across all workers.",N,N],[11,"new","","Creates a new Sequencer.",106,[[["worker"],["instant"]],["self"]]],[11,"push","","Adds an element to the shared log.",106,[[["self"],["t"]]]],[11,"next","","Reads the next element from the shared log.",106,[[["self"]],["option"]]],[0,"execute","timely","Starts a timely dataflow execution from configuration…",N,N],[5,"example","timely::execute","Executes a single-threaded timely dataflow computation.",N,[[["f"]],["t"]]],[5,"execute","","Executes a timely dataflow from a configuration and…",N,[[["configuration"],["f"]],["result",["workerguards","string"]]]],[5,"execute_from_args","","Executes a timely dataflow from supplied arguments and…",N,[[["i"],["f"]],["result",["workerguards","string"]]]],[5,"execute_from","","Executes a timely dataflow from supplied allocators and…",N,[[["vec"],["box",["any"]],["f"]],["result",["workerguards","string"]]]],[0,"order","timely","Traits and types for partially ordered sets.",N,N],[8,"PartialOrder","timely::order","A type that is partially ordered.",N,N],[11,"less_than","","Returns true iff one element is strictly less than the…",107,[[["self"],["self"]],["bool"]]],[10,"less_equal","","Returns true iff one element is less than or equal to the…",107,[[["self"],["self"]],["bool"]]],[8,"TotalOrder","","A type that is totally ordered.",N,N],[0,"logging","timely","Traits, implementations, and macros related to logging…",N,N],[3,"BatchLogger","timely::logging","Logs events as a timely stream, with progress statements.",N,N],[3,"OperatesEvent","","The creation of an `Operate` implementor.",N,N],[12,"id","","Worker-unique identifier for the operator.",108,N],[12,"addr","","Sequence of nested scope identifiers indicating the path…",108,N],[12,"name","","A helpful name.",108,N],[3,"ChannelsEvent","","The creation of a channel between operators.",N,N],[12,"id","","Worker-unique identifier for the channel",109,N],[12,"scope_addr","","Sequence of nested scope identifiers indicating the path…",109,N],[12,"source","","Source descriptor, indicating operator index and output…",109,N],[12,"target","","Target descriptor, indicating operator index and input port.",109,N],[3,"ProgressEvent","","Send or receive of progress information.",N,N],[12,"is_send","","`true` if the event is a send, and `false` if it is a…",110,N],[12,"source","","Source worker index.",110,N],[12,"channel","","Communication channel identifier",110,N],[12,"seq_no","","Message sequence number.",110,N],[12,"addr","","Sequence of nested scope identifiers indicating the path…",110,N],[12,"messages","","List of message updates, containing Target descriptor,…",110,N],[12,"internal","","List of capability updates, containing Source descriptor,…",110,N],[3,"PushProgressEvent","","External progress pushed onto an operator",N,N],[12,"op_id","","Worker-unique operator identifier",111,N],[3,"MessagesEvent","","Message send or receive event",N,N],[12,"is_send","","`true` if send event, `false` if receive event.",112,N],[12,"channel","","Channel identifier",112,N],[12,"source","","Source worker index.",112,N],[12,"target","","Target worker index.",112,N],[12,"seq_no","","Message sequence number.",112,N],[12,"length","","Number of typed records in the message.",112,N],[3,"ScheduleEvent","","Operator start or stop.",N,N],[12,"id","","Worker-unique identifier for the operator, linkable to the…",113,N],[12,"start_stop","","`Start` if the operator is starting, `Stop` if it is…",113,N],[3,"ApplicationEvent","","Application-defined code start or stop",N,N],[12,"id","","Unique event type identifier",114,N],[12,"is_start","","True when activity begins, false when it stops",114,N],[3,"GuardedMessageEvent","","Application-defined code start or stop",N,N],[12,"is_start","","True when activity begins, false when it stops",115,N],[3,"GuardedProgressEvent","","Application-defined code start or stop",N,N],[12,"is_start","","True when activity begins, false when it stops",116,N],[3,"TimelySetup","","Identifier of the worker that generated a log line",N,N],[12,"index","","Worker index",117,N],[3,"CommChannelsEvent","","Event on a communication channel",N,N],[12,"identifier","","Communication channel identifier",118,N],[12,"kind","","Kind of communication channel (progress / data)",118,N],[3,"InputEvent","","Input logic start/stop",N,N],[12,"start_stop","","True when activity begins, false when it stops",119,N],[4,"StartStop","","Records the starting and stopping of an operator.",N,N],[13,"Start","","Operator starts.",120,N],[13,"Stop","","Operator stops; did it have any activity?",120,N],[12,"activity","timely::logging::StartStop","Did the operator perform non-trivial work.",120,N],[4,"CommChannelKind","timely::logging","Kind of communication channel",N,N],[13,"Progress","","Communication channel carrying progress information",121,N],[13,"Data","","Communication channel carrying data",121,N],[4,"TimelyEvent","","An event in a timely worker",N,N],[13,"Operates","","Operator creation.",122,N],[13,"Channels","","Channel creation.",122,N],[13,"Progress","","Progress message send or receive.",122,N],[13,"PushProgress","","Progress propagation (reasoning).",122,N],[13,"Messages","","Message send or receive.",122,N],[13,"Schedule","","Operator start or stop.",122,N],[13,"Application","","No clue.",122,N],[13,"GuardedMessage","","Per-message computation.",122,N],[13,"GuardedProgress","","Per-notification computation.",122,N],[13,"CommChannels","","Communication channel event.",122,N],[13,"Input","","Input event.",122,N],[13,"Text","","Unstructured event.",122,N],[6,"WorkerIdentifier","","Type alias for logging timely events.",N,N],[6,"Logger","","Logger type for worker-local logging.",N,N],[6,"TimelyLogger","","Logger for timely dataflow system events.",N,N],[11,"new","","Creates a new batch logger.",123,[[["p"]],["self"]]],[11,"publish_batch","","Publishes a batch of logged events and advances the…",123,[[["self"],["duration"],["vec"]]]],[8,"Data","timely","A composite trait for types usable as data in timely…",N,N],[8,"ExchangeData","","A composite trait for types usable on exchange channels in…",N,N],[11,"from","timely::communication::initialize","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::thread","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::process","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::generic","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::zero_copy::bytes_slab","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::zero_copy::bytes_exchange","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::zero_copy::allocator","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::zero_copy::allocator_process","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::zero_copy::initialize","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","timely::communication::allocator::zero_copy::push_pull","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","timely::communication::networking","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","timely::communication::initialize","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","timely::communication::logging","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","timely::communication::message","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","timely::bytes::rc","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","timely::bytes::arc","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","timely::logging_core","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[["self"]],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,N],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"try_into","","",145,[[["self"]],["result"]]],[11,"get_type_id","","",145,[[["self"]],["typeid"]]],[11,"from","timely::worker","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","timely::progress::change_batch","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","timely::progress::frontier","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","timely::progress::nested::pointstamp_counter","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_string","timely::progress::nested::summary","",22,[[["self"]],["string"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","timely::progress::nested::product","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","timely::progress::nested::subgraph","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","timely::progress::nested::reachability","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","timely::progress::nested::reachability_neu","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","timely::progress::timestamp","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,N],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"from","timely::progress::broadcast","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into_iter","timely::dataflow::operators","",81,[[["self"]],["i"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::input","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::flow_controlled","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::unordered_input","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::feedback","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::probe","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::capture::event","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::capture::event::link","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::capture::event::binary","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::generic","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::generic::builder_rc","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::operators::generic::builder_raw","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::channels","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::channels::pushers::tee","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::channels::pushers::exchange","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::channels::pushers::counter","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::channels::pushers::buffer","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::channels::pullers::counter","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","timely::dataflow::channels::pact","",148,[[["t"]],["t"]]],[11,"into","","",148,[[["self"]],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"try_into","","",148,[[["self"]],["result"]]],[11,"get_type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"new_unordered_input","timely::dataflow::scopes::child","",101,N],[11,"concatenate","","",101,[[["self"],["impl intoiterator<item = stream<g, d>>"]],["stream"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"enter_at","timely::dataflow::stream","",104,[[["self"],["child"],["f"]],["stream",["child"]]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","timely::synchronization::barrier","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","timely::synchronization::sequence","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","timely::logging","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,N],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,N],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,N],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,N],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"hash","timely::communication::logging","",8,N],[11,"extend","timely::communication::allocator::zero_copy::bytes_exchange","",130,N],[11,"index","timely::communication::allocator::zero_copy::allocator","",133,[[["self"]],["usize"]]],[11,"peers","","",133,[[["self"]],["usize"]]],[11,"allocate","","",133,N],[11,"pre_work","","",133,N],[11,"post_work","","",133,N],[11,"index","timely::communication::allocator::thread","",124,[[["self"]],["usize"]]],[11,"peers","","",124,[[["self"]],["usize"]]],[11,"allocate","","",124,N],[11,"index","timely::communication::allocator::generic","",1,[[["self"]],["usize"]]],[11,"peers","","",1,[[["self"]],["usize"]]],[11,"allocate","","",1,N],[11,"pre_work","","",1,N],[11,"post_work","","",1,N],[11,"index","timely::communication::allocator::process","",127,[[["self"]],["usize"]]],[11,"peers","","",127,[[["self"]],["usize"]]],[11,"allocate","","",127,N],[11,"index","timely::communication::allocator::zero_copy::allocator_process","",135,[[["self"]],["usize"]]],[11,"peers","","",135,[[["self"]],["usize"]]],[11,"allocate","","",135,N],[11,"pre_work","","",135,N],[11,"post_work","","",135,N],[11,"deref","timely::communication::message","",141,N],[11,"deref","","",12,N],[11,"build","timely::communication::allocator::generic","",2,[[["self"]],["generic"]]],[11,"build","timely::communication::allocator::process","",127,[[["self"]],["process"]]],[11,"build","timely::communication::allocator::zero_copy::allocator_process","Builds allocator, consumes self.",134,N],[11,"build","timely::communication::allocator::thread","",124,[[["self"]],["thread"]]],[11,"pull","timely::communication::allocator::zero_copy::push_pull","",139,[[["self"]],["option"]]],[11,"pull","","",138,[[["self"]],["option"]]],[11,"pull","timely::communication::allocator::thread","",126,[[["self"]],["option"]]],[11,"from","timely::communication::logging","",9,[[["messageevent"]],["communicationevent"]]],[11,"from","","",9,[[["stateevent"]],["communicationevent"]]],[11,"push","timely::communication::allocator::thread","",125,N],[11,"push","timely::communication::allocator::zero_copy::push_pull","",137,N],[11,"eq","timely::communication::logging","",8,[[["self"],["communicationsetup"]],["bool"]]],[11,"ne","","",8,[[["self"],["communicationsetup"]],["bool"]]],[11,"clone","","",9,[[["self"]],["communicationevent"]]],[11,"clone","timely::communication::networking","",7,[[["self"]],["messageheader"]]],[11,"clone","timely::communication::logging","",10,[[["self"]],["messageevent"]]],[11,"clone","timely::communication::allocator::zero_copy::bytes_exchange","",130,[[["self"]],["mergequeue"]]],[11,"clone","timely::communication::logging","",11,[[["self"]],["stateevent"]]],[11,"clone","timely::communication::allocator::zero_copy::bytes_exchange","",129,[[["self"]],["signal"]]],[11,"clone","timely::communication::logging","",8,[[["self"]],["communicationsetup"]]],[11,"drop","timely::communication::allocator::zero_copy::bytes_exchange","",131,N],[11,"drop","","",130,N],[11,"drop","timely::communication::initialize","",140,N],[11,"drop","timely::communication::allocator::zero_copy::initialize","",136,N],[11,"entomb","timely::communication::logging","",11,[[["self"],["w"]],["result",["error"]]]],[11,"extent","","",11,[[["self"]],["usize"]]],[11,"exhume","","",11,N],[11,"entomb","","",10,[[["self"],["w"]],["result",["error"]]]],[11,"extent","","",10,[[["self"]],["usize"]]],[11,"exhume","","",10,N],[11,"entomb","","",9,[[["self"],["w"]],["result",["error"]]]],[11,"extent","","",9,[[["self"]],["usize"]]],[11,"exhume","","",9,N],[11,"entomb","timely::communication::networking","",7,[[["self"],["w"]],["result",["error"]]]],[11,"extent","","",7,[[["self"]],["usize"]]],[11,"exhume","","",7,N],[11,"entomb","timely::communication::logging","",8,[[["self"],["w"]],["result",["error"]]]],[11,"extent","","",8,[[["self"]],["usize"]]],[11,"exhume","","",8,N],[11,"drain_into","timely::communication::allocator::zero_copy::bytes_exchange","",130,N],[11,"fmt","timely::communication::logging","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","timely::communication::networking","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","timely::bytes::arc","",143,N],[11,"deref_mut","timely::bytes::rc","",142,N],[11,"deref","","",142,N],[11,"deref","timely::bytes::arc","",143,N],[11,"clone","timely::logging_core","",145,[[["self"]],["logger"]]],[11,"drop","","",145,N],[11,"new_identifier","timely::worker","",16,[[["self"]],["usize"]]],[11,"log_register","","",16,[[["self"]],["refmut",["registry"]]]],[11,"new_identifier","timely::dataflow::scopes::child","",101,[[["self"]],["usize"]]],[11,"log_register","","",101,[[["self"]],["refmut",["registry"]]]],[11,"results_in","timely::progress::nested::summary","",22,[[["self"],["product"]],["option",["product"]]]],[11,"followed_by","","",22,[[["self"],["summary"]],["option",["summary"]]]],[11,"results_in","timely::progress::timestamp","",146,[[["self"],["roottimestamp"]],["option",["roottimestamp"]]]],[11,"followed_by","","",146,[[["self"],["rootsummary"]],["option",["rootsummary"]]]],[11,"name","timely::progress::nested::subgraph","",27,[[["self"]],["string"]]],[11,"local","","",27,[[["self"]],["bool"]]],[11,"inputs","","",27,[[["self"]],["usize"]]],[11,"outputs","","",27,[[["self"]],["usize"]]],[11,"get_internal_summary","","",27,N],[11,"set_external_summary","","Receive summaries from outputs to inputs, as well as…",27,N],[11,"push_external_progress","","Receive changes in the external capabilities of the…",27,N],[11,"pull_internal_progress","","Report changes in messages and capabilities for the…",27,N],[11,"enter","timely::dataflow::stream","",104,[[["self"],["child"]],["stream",["child"]]]],[11,"leave","","",104,[[["self"]],["stream"]]],[11,"new_input","timely::dataflow::scopes::child","",101,N],[11,"input_from","","",101,[[["self"],["handle"]],["stream",["child"]]]],[11,"loop_variable","","",101,N],[11,"connect_loop","timely::dataflow::stream","",104,[[["self"],["handle"]]]],[11,"concat","","",104,[[["self"],["stream"]],["stream"]]],[11,"partition","","",104,[[["self"],["u64"],["f"]],["vec",["stream"]]]],[11,"map","","",104,N],[11,"map_in_place","","",104,N],[11,"flat_map","","",104,N],[11,"inspect_batch","","",104,N],[11,"filter","","",104,N],[11,"delay","","",104,N],[11,"delay_batch","","",104,N],[11,"exchange","","",104,N],[11,"broadcast","","",104,[[["self"]],["stream"]]],[11,"probe","","",104,[[["self"]],["handle"]]],[11,"probe_with","","",104,[[["self"],["handle"]],["stream"]]],[11,"capture_into","","",104,[[["self"],["p"]]]],[11,"next","timely::dataflow::operators::capture::event::binary","",66,[[["self"]],["option",["event"]]]],[11,"push","","",65,[[["self"],["event"]]]],[11,"branch","timely::dataflow::stream","",104,N],[11,"branch_when","","",104,N],[11,"state_machine","","",104,[[["self"],["f"],["h"]],["stream"]]],[11,"aggregate","","",104,[[["self"],["f"],["e"],["h"]],["stream"]]],[11,"unary_frontier","","",104,[[["self"],["p"],["str"],["b"]],["stream"]]],[11,"unary_notify","","",104,N],[11,"unary","","",104,[[["self"],["p"],["str"],["b"]],["stream"]]],[11,"binary_frontier","","",104,[[["self"],["stream"],["p1"],["p2"],["str"],["b"]],["stream"]]],[11,"binary_notify","","",104,N],[11,"binary","","",104,[[["self"],["stream"],["p1"],["p2"],["str"],["b"]],["stream"]]],[11,"sink","","",104,[[["self"],["p"],["str"],["l"]]]],[11,"reclock","","",104,[[["self"],["stream"]],["stream"]]],[11,"accumulate","","",104,N],[11,"connect","timely::dataflow::channels::pact","",148,N],[11,"connect","","",98,N],[11,"name","timely::dataflow::scopes::child","",101,[[["self"]],["string"]]],[11,"addr","","",101,[[["self"]],["vec",["usize"]]]],[11,"add_edge","","",101,[[["self"],["source"],["target"]]]],[11,"add_operator_with_indices","","",101,[[["self"],["box",["operate"]],["usize"],["usize"]]]],[11,"allocate_operator_index","","",101,[[["self"]],["usize"]]],[11,"scoped","","",101,[[["self"],["f"]],["r"]]],[11,"less_equal","timely::progress::nested::summary","",22,[[["self"],["self"]],["bool"]]],[11,"less_equal","timely::progress::nested::product","",23,[[["self"],["self"]],["bool"]]],[11,"less_equal","timely::progress::timestamp","",35,[[["self"],["self"]],["bool"]]],[11,"less_equal","","",146,[[["self"],["self"]],["bool"]]],[11,"less_equal","timely::dataflow::operators","",85,[[["self"],["self"]],["bool"]]],[11,"next","","Retrieve the next available notification.",81,[[["self"]],["option"]]],[11,"eq","timely::progress::change_batch","",17,[[["self"],["changebatch"]],["bool"]]],[11,"ne","","",17,[[["self"],["changebatch"]],["bool"]]],[11,"eq","timely::progress::frontier","",18,[[["self"],["antichain"]],["bool"]]],[11,"ne","","",18,[[["self"],["antichain"]],["bool"]]],[11,"eq","","",20,[[["self"],["antichainref"]],["bool"]]],[11,"ne","","",20,[[["self"],["antichainref"]],["bool"]]],[11,"eq","timely::progress::nested::summary","",22,[[["self"],["summary"]],["bool"]]],[11,"ne","","",22,[[["self"],["summary"]],["bool"]]],[11,"eq","timely::progress::nested::product","",23,[[["self"],["product"]],["bool"]]],[11,"ne","","",23,[[["self"],["product"]],["bool"]]],[11,"eq","timely::progress::nested::subgraph","",24,[[["self"],["source"]],["bool"]]],[11,"ne","","",24,[[["self"],["source"]],["bool"]]],[11,"eq","","",25,[[["self"],["target"]],["bool"]]],[11,"ne","","",25,[[["self"],["target"]],["bool"]]],[11,"eq","timely::progress::timestamp","",35,[[["self"],["roottimestamp"]],["bool"]]],[11,"eq","","",146,[[["self"],["rootsummary"]],["bool"]]],[11,"eq","timely::dataflow::operators::capture::event","",63,[[["self"],["event"]],["bool"]]],[11,"ne","","",63,[[["self"],["event"]],["bool"]]],[11,"eq","timely::dataflow::operators","",85,[[["self"],["self"]],["bool"]]],[11,"eq","timely::logging","",108,[[["self"],["operatesevent"]],["bool"]]],[11,"ne","","",108,[[["self"],["operatesevent"]],["bool"]]],[11,"eq","","",109,[[["self"],["channelsevent"]],["bool"]]],[11,"ne","","",109,[[["self"],["channelsevent"]],["bool"]]],[11,"eq","","",110,[[["self"],["progressevent"]],["bool"]]],[11,"ne","","",110,[[["self"],["progressevent"]],["bool"]]],[11,"eq","","",111,[[["self"],["pushprogressevent"]],["bool"]]],[11,"ne","","",111,[[["self"],["pushprogressevent"]],["bool"]]],[11,"eq","","",112,[[["self"],["messagesevent"]],["bool"]]],[11,"ne","","",112,[[["self"],["messagesevent"]],["bool"]]],[11,"eq","","",120,[[["self"],["startstop"]],["bool"]]],[11,"ne","","",120,[[["self"],["startstop"]],["bool"]]],[11,"eq","","",113,[[["self"],["scheduleevent"]],["bool"]]],[11,"ne","","",113,[[["self"],["scheduleevent"]],["bool"]]],[11,"eq","","",114,[[["self"],["applicationevent"]],["bool"]]],[11,"ne","","",114,[[["self"],["applicationevent"]],["bool"]]],[11,"eq","","",115,[[["self"],["guardedmessageevent"]],["bool"]]],[11,"ne","","",115,[[["self"],["guardedmessageevent"]],["bool"]]],[11,"eq","","",116,[[["self"],["guardedprogressevent"]],["bool"]]],[11,"ne","","",116,[[["self"],["guardedprogressevent"]],["bool"]]],[11,"eq","","",117,[[["self"],["timelysetup"]],["bool"]]],[11,"ne","","",117,[[["self"],["timelysetup"]],["bool"]]],[11,"eq","","",121,[[["self"],["commchannelkind"]],["bool"]]],[11,"eq","","",118,[[["self"],["commchannelsevent"]],["bool"]]],[11,"ne","","",118,[[["self"],["commchannelsevent"]],["bool"]]],[11,"eq","","",119,[[["self"],["inputevent"]],["bool"]]],[11,"ne","","",119,[[["self"],["inputevent"]],["bool"]]],[11,"eq","","",122,[[["self"],["timelyevent"]],["bool"]]],[11,"ne","","",122,[[["self"],["timelyevent"]],["bool"]]],[11,"default","timely::progress::frontier","",18,[[],["antichain"]]],[11,"default","","",19,[[],["mutableantichain"]]],[11,"default","timely::progress::nested::pointstamp_counter","",21,[[],["pointstampcounter"]]],[11,"default","timely::progress::nested::summary","",22,[[],["summary"]]],[11,"default","timely::progress::nested::product","",23,[[],["product"]]],[11,"default","timely::progress::nested::reachability","",30,[[],["tracker"]]],[11,"default","timely::progress::timestamp","",35,[[],["roottimestamp"]]],[11,"default","","",146,[[],["rootsummary"]]],[11,"cmp","timely::progress::nested::product","",23,[[["self"],["product"]],["ordering"]]],[11,"cmp","timely::progress::nested::subgraph","",24,[[["self"],["source"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["target"]],["ordering"]]],[11,"cmp","timely::progress::timestamp","",35,[[["self"],["roottimestamp"]],["ordering"]]],[11,"cmp","","",146,[[["self"],["rootsummary"]],["ordering"]]],[11,"cmp","timely::dataflow::operators::capture::event","",63,[[["self"],["event"]],["ordering"]]],[11,"cmp","timely::logging","",108,[[["self"],["operatesevent"]],["ordering"]]],[11,"cmp","","",109,[[["self"],["channelsevent"]],["ordering"]]],[11,"cmp","","",110,[[["self"],["progressevent"]],["ordering"]]],[11,"cmp","","",111,[[["self"],["pushprogressevent"]],["ordering"]]],[11,"cmp","","",112,[[["self"],["messagesevent"]],["ordering"]]],[11,"cmp","","",120,[[["self"],["startstop"]],["ordering"]]],[11,"cmp","","",113,[[["self"],["scheduleevent"]],["ordering"]]],[11,"cmp","","",114,[[["self"],["applicationevent"]],["ordering"]]],[11,"cmp","","",115,[[["self"],["guardedmessageevent"]],["ordering"]]],[11,"cmp","","",116,[[["self"],["guardedprogressevent"]],["ordering"]]],[11,"cmp","","",121,[[["self"],["commchannelkind"]],["ordering"]]],[11,"cmp","","",118,[[["self"],["commchannelsevent"]],["ordering"]]],[11,"cmp","","",119,[[["self"],["inputevent"]],["ordering"]]],[11,"cmp","","",122,[[["self"],["timelyevent"]],["ordering"]]],[11,"clone","timely::worker","",16,[[["self"]],["self"]]],[11,"clone","timely::progress::change_batch","",17,[[["self"]],["changebatch"]]],[11,"clone","timely::progress::frontier","",18,[[["self"]],["antichain"]]],[11,"clone","","",19,[[["self"]],["mutableantichain"]]],[11,"clone","timely::progress::nested::summary","",22,[[["self"]],["summary"]]],[11,"clone","timely::progress::nested::product","",23,[[["self"]],["product"]]],[11,"clone","timely::progress::nested::subgraph","",24,[[["self"]],["source"]]],[11,"clone","","",25,[[["self"]],["target"]]],[11,"clone","timely::progress::nested::reachability","",29,[[["self"]],["builder"]]],[11,"clone","","",28,[[["self"]],["summary"]]],[11,"clone","timely::progress::nested::reachability_neu","",31,[[["self"]],["builder"]]],[11,"clone","timely::progress::timestamp","",35,[[["self"]],["roottimestamp"]]],[11,"clone","","",146,[[["self"]],["rootsummary"]]],[11,"clone","timely::dataflow::operators::probe","",58,[[["self"]],["self"]]],[11,"clone","timely::dataflow::operators::capture::event","",63,[[["self"]],["event"]]],[11,"clone","timely::dataflow::operators","",85,[[["self"]],["capability"]]],[11,"clone","timely::dataflow::channels::pushers::tee","",89,[[["self"]],["tee"]]],[11,"clone","","",90,[[["self"]],["self"]]],[11,"clone","timely::dataflow::channels","",88,[[["self"]],["message"]]],[11,"clone","timely::dataflow::scopes::child","",101,[[["self"]],["self"]]],[11,"clone","timely::dataflow::stream","",104,[[["self"]],["stream"]]],[11,"clone","timely::logging","",108,[[["self"]],["operatesevent"]]],[11,"clone","","",109,[[["self"]],["channelsevent"]]],[11,"clone","","",110,[[["self"]],["progressevent"]]],[11,"clone","","",111,[[["self"]],["pushprogressevent"]]],[11,"clone","","",112,[[["self"]],["messagesevent"]]],[11,"clone","","",120,[[["self"]],["startstop"]]],[11,"clone","","",113,[[["self"]],["scheduleevent"]]],[11,"clone","","",114,[[["self"]],["applicationevent"]]],[11,"clone","","",115,[[["self"]],["guardedmessageevent"]]],[11,"clone","","",116,[[["self"]],["guardedprogressevent"]]],[11,"clone","","",117,[[["self"]],["timelysetup"]]],[11,"clone","","",121,[[["self"]],["commchannelkind"]]],[11,"clone","","",118,[[["self"]],["commchannelsevent"]]],[11,"clone","","",119,[[["self"]],["inputevent"]]],[11,"clone","","",122,[[["self"]],["timelyevent"]]],[11,"from","","",122,[[["operatesevent"]],["timelyevent"]]],[11,"from","","",122,[[["channelsevent"]],["timelyevent"]]],[11,"from","","",122,[[["progressevent"]],["timelyevent"]]],[11,"from","","",122,[[["pushprogressevent"]],["timelyevent"]]],[11,"from","","",122,[[["messagesevent"]],["timelyevent"]]],[11,"from","","",122,[[["scheduleevent"]],["timelyevent"]]],[11,"from","","",122,[[["applicationevent"]],["timelyevent"]]],[11,"from","","",122,[[["guardedmessageevent"]],["timelyevent"]]],[11,"from","","",122,[[["guardedprogressevent"]],["timelyevent"]]],[11,"from","","",122,[[["commchannelsevent"]],["timelyevent"]]],[11,"from","","",122,[[["inputevent"]],["timelyevent"]]],[11,"drop","timely::dataflow::operators::input","",42,[[["self"]]]],[11,"drop","timely::dataflow::operators::unordered_input","",45,[[["self"]]]],[11,"drop","timely::dataflow::operators::capture::event::link","",64,[[["self"]]]],[11,"drop","timely::dataflow::operators::generic","",80,[[["self"]]]],[11,"drop","timely::dataflow::operators","",85,[[["self"]]]],[11,"drop","timely::dataflow::channels::pushers::buffer","",95,[[["self"]]]],[11,"drop","timely::logging","",123,[[["self"]]]],[11,"partial_cmp","timely::progress::nested::product","",23,[[["self"],["product"]],["option",["ordering"]]]],[11,"lt","","",23,[[["self"],["product"]],["bool"]]],[11,"le","","",23,[[["self"],["product"]],["bool"]]],[11,"gt","","",23,[[["self"],["product"]],["bool"]]],[11,"ge","","",23,[[["self"],["product"]],["bool"]]],[11,"partial_cmp","timely::progress::nested::subgraph","",24,[[["self"],["source"]],["option",["ordering"]]]],[11,"lt","","",24,[[["self"],["source"]],["bool"]]],[11,"le","","",24,[[["self"],["source"]],["bool"]]],[11,"gt","","",24,[[["self"],["source"]],["bool"]]],[11,"ge","","",24,[[["self"],["source"]],["bool"]]],[11,"partial_cmp","","",25,[[["self"],["target"]],["option",["ordering"]]]],[11,"lt","","",25,[[["self"],["target"]],["bool"]]],[11,"le","","",25,[[["self"],["target"]],["bool"]]],[11,"gt","","",25,[[["self"],["target"]],["bool"]]],[11,"ge","","",25,[[["self"],["target"]],["bool"]]],[11,"partial_cmp","timely::progress::timestamp","",35,[[["self"],["roottimestamp"]],["option",["ordering"]]]],[11,"partial_cmp","","",146,[[["self"],["rootsummary"]],["option",["ordering"]]]],[11,"partial_cmp","timely::dataflow::operators::capture::event","",63,[[["self"],["event"]],["option",["ordering"]]]],[11,"lt","","",63,[[["self"],["event"]],["bool"]]],[11,"le","","",63,[[["self"],["event"]],["bool"]]],[11,"gt","","",63,[[["self"],["event"]],["bool"]]],[11,"ge","","",63,[[["self"],["event"]],["bool"]]],[11,"partial_cmp","timely::logging","",108,[[["self"],["operatesevent"]],["option",["ordering"]]]],[11,"lt","","",108,[[["self"],["operatesevent"]],["bool"]]],[11,"le","","",108,[[["self"],["operatesevent"]],["bool"]]],[11,"gt","","",108,[[["self"],["operatesevent"]],["bool"]]],[11,"ge","","",108,[[["self"],["operatesevent"]],["bool"]]],[11,"partial_cmp","","",109,[[["self"],["channelsevent"]],["option",["ordering"]]]],[11,"lt","","",109,[[["self"],["channelsevent"]],["bool"]]],[11,"le","","",109,[[["self"],["channelsevent"]],["bool"]]],[11,"gt","","",109,[[["self"],["channelsevent"]],["bool"]]],[11,"ge","","",109,[[["self"],["channelsevent"]],["bool"]]],[11,"partial_cmp","","",110,[[["self"],["progressevent"]],["option",["ordering"]]]],[11,"lt","","",110,[[["self"],["progressevent"]],["bool"]]],[11,"le","","",110,[[["self"],["progressevent"]],["bool"]]],[11,"gt","","",110,[[["self"],["progressevent"]],["bool"]]],[11,"ge","","",110,[[["self"],["progressevent"]],["bool"]]],[11,"partial_cmp","","",111,[[["self"],["pushprogressevent"]],["option",["ordering"]]]],[11,"lt","","",111,[[["self"],["pushprogressevent"]],["bool"]]],[11,"le","","",111,[[["self"],["pushprogressevent"]],["bool"]]],[11,"gt","","",111,[[["self"],["pushprogressevent"]],["bool"]]],[11,"ge","","",111,[[["self"],["pushprogressevent"]],["bool"]]],[11,"partial_cmp","","",112,[[["self"],["messagesevent"]],["option",["ordering"]]]],[11,"lt","","",112,[[["self"],["messagesevent"]],["bool"]]],[11,"le","","",112,[[["self"],["messagesevent"]],["bool"]]],[11,"gt","","",112,[[["self"],["messagesevent"]],["bool"]]],[11,"ge","","",112,[[["self"],["messagesevent"]],["bool"]]],[11,"partial_cmp","","",120,[[["self"],["startstop"]],["option",["ordering"]]]],[11,"lt","","",120,[[["self"],["startstop"]],["bool"]]],[11,"le","","",120,[[["self"],["startstop"]],["bool"]]],[11,"gt","","",120,[[["self"],["startstop"]],["bool"]]],[11,"ge","","",120,[[["self"],["startstop"]],["bool"]]],[11,"partial_cmp","","",113,[[["self"],["scheduleevent"]],["option",["ordering"]]]],[11,"lt","","",113,[[["self"],["scheduleevent"]],["bool"]]],[11,"le","","",113,[[["self"],["scheduleevent"]],["bool"]]],[11,"gt","","",113,[[["self"],["scheduleevent"]],["bool"]]],[11,"ge","","",113,[[["self"],["scheduleevent"]],["bool"]]],[11,"partial_cmp","","",114,[[["self"],["applicationevent"]],["option",["ordering"]]]],[11,"lt","","",114,[[["self"],["applicationevent"]],["bool"]]],[11,"le","","",114,[[["self"],["applicationevent"]],["bool"]]],[11,"gt","","",114,[[["self"],["applicationevent"]],["bool"]]],[11,"ge","","",114,[[["self"],["applicationevent"]],["bool"]]],[11,"partial_cmp","","",115,[[["self"],["guardedmessageevent"]],["option",["ordering"]]]],[11,"lt","","",115,[[["self"],["guardedmessageevent"]],["bool"]]],[11,"le","","",115,[[["self"],["guardedmessageevent"]],["bool"]]],[11,"gt","","",115,[[["self"],["guardedmessageevent"]],["bool"]]],[11,"ge","","",115,[[["self"],["guardedmessageevent"]],["bool"]]],[11,"partial_cmp","","",116,[[["self"],["guardedprogressevent"]],["option",["ordering"]]]],[11,"lt","","",116,[[["self"],["guardedprogressevent"]],["bool"]]],[11,"le","","",116,[[["self"],["guardedprogressevent"]],["bool"]]],[11,"gt","","",116,[[["self"],["guardedprogressevent"]],["bool"]]],[11,"ge","","",116,[[["self"],["guardedprogressevent"]],["bool"]]],[11,"partial_cmp","","",121,[[["self"],["commchannelkind"]],["option",["ordering"]]]],[11,"partial_cmp","","",118,[[["self"],["commchannelsevent"]],["option",["ordering"]]]],[11,"lt","","",118,[[["self"],["commchannelsevent"]],["bool"]]],[11,"le","","",118,[[["self"],["commchannelsevent"]],["bool"]]],[11,"gt","","",118,[[["self"],["commchannelsevent"]],["bool"]]],[11,"ge","","",118,[[["self"],["commchannelsevent"]],["bool"]]],[11,"partial_cmp","","",119,[[["self"],["inputevent"]],["option",["ordering"]]]],[11,"lt","","",119,[[["self"],["inputevent"]],["bool"]]],[11,"le","","",119,[[["self"],["inputevent"]],["bool"]]],[11,"gt","","",119,[[["self"],["inputevent"]],["bool"]]],[11,"ge","","",119,[[["self"],["inputevent"]],["bool"]]],[11,"partial_cmp","","",122,[[["self"],["timelyevent"]],["option",["ordering"]]]],[11,"lt","","",122,[[["self"],["timelyevent"]],["bool"]]],[11,"le","","",122,[[["self"],["timelyevent"]],["bool"]]],[11,"gt","","",122,[[["self"],["timelyevent"]],["bool"]]],[11,"ge","","",122,[[["self"],["timelyevent"]],["bool"]]],[11,"fmt","timely::progress::change_batch","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::progress::frontier","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::progress::nested::summary","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::progress::nested::product","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","timely::progress::nested::subgraph","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::progress::nested::reachability","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::progress::nested::reachability_neu","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::progress::timestamp","",35,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::dataflow::operators::capture::event","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::dataflow::operators","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::logging","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely::progress::nested::summary","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","timely::progress::nested::product","",23,N],[11,"hash","timely::progress::timestamp","",35,N],[11,"hash","timely::dataflow::operators::capture::event","",63,N],[11,"hash","timely::dataflow::operators","",85,[[["self"],["h"]]]],[11,"hash","timely::logging","",108,N],[11,"hash","","",109,N],[11,"hash","","",110,N],[11,"hash","","",111,N],[11,"hash","","",112,N],[11,"hash","","",120,N],[11,"hash","","",113,N],[11,"hash","","",114,N],[11,"hash","","",115,N],[11,"hash","","",116,N],[11,"hash","","",117,N],[11,"hash","","",121,N],[11,"hash","","",118,N],[11,"hash","","",119,N],[11,"hash","","",122,N],[11,"deref","timely::progress::frontier","",20,N],[11,"deref","timely::dataflow::operators","",85,[[["self"]],["t"]]],[11,"deref","","",86,[[["self"]],["t"]]],[11,"entomb","timely::progress::nested::product","",23,[[["self"],["w"]],["result"]]],[11,"exhume","","",23,N],[11,"entomb","timely::dataflow::operators::capture::event","",63,[[["self"],["w"]],["result"]]],[11,"extent","","",63,[[["self"]],["usize"]]],[11,"exhume","","",63,N],[11,"entomb","timely::dataflow::channels","",88,[[["self"],["w"]],["result"]]],[11,"extent","","",88,[[["self"]],["usize"]]],[11,"exhume","","",88,N],[11,"entomb","timely::logging","",108,[[["self"],["w"]],["result"]]],[11,"extent","","",108,[[["self"]],["usize"]]],[11,"exhume","","",108,N],[11,"entomb","","",109,[[["self"],["w"]],["result"]]],[11,"extent","","",109,[[["self"]],["usize"]]],[11,"exhume","","",109,N],[11,"entomb","","",110,[[["self"],["w"]],["result"]]],[11,"extent","","",110,[[["self"]],["usize"]]],[11,"exhume","","",110,N],[11,"entomb","","",111,[[["self"],["w"]],["result"]]],[11,"extent","","",111,[[["self"]],["usize"]]],[11,"exhume","","",111,N],[11,"entomb","","",112,[[["self"],["w"]],["result"]]],[11,"extent","","",112,[[["self"]],["usize"]]],[11,"exhume","","",112,N],[11,"entomb","","",120,[[["self"],["w"]],["result"]]],[11,"extent","","",120,[[["self"]],["usize"]]],[11,"exhume","","",120,N],[11,"entomb","","",113,[[["self"],["w"]],["result"]]],[11,"extent","","",113,[[["self"]],["usize"]]],[11,"exhume","","",113,N],[11,"entomb","","",114,[[["self"],["w"]],["result"]]],[11,"extent","","",114,[[["self"]],["usize"]]],[11,"exhume","","",114,N],[11,"entomb","","",115,[[["self"],["w"]],["result"]]],[11,"extent","","",115,[[["self"]],["usize"]]],[11,"exhume","","",115,N],[11,"entomb","","",116,[[["self"],["w"]],["result"]]],[11,"extent","","",116,[[["self"]],["usize"]]],[11,"exhume","","",116,N],[11,"entomb","","",117,[[["self"],["w"]],["result"]]],[11,"extent","","",117,[[["self"]],["usize"]]],[11,"exhume","","",117,N],[11,"entomb","","",121,[[["self"],["w"]],["result"]]],[11,"extent","","",121,[[["self"]],["usize"]]],[11,"exhume","","",121,N],[11,"entomb","","",118,[[["self"],["w"]],["result"]]],[11,"extent","","",118,[[["self"]],["usize"]]],[11,"exhume","","",118,N],[11,"entomb","","",119,[[["self"],["w"]],["result"]]],[11,"extent","","",119,[[["self"]],["usize"]]],[11,"exhume","","",119,N],[11,"entomb","","",122,[[["self"],["w"]],["result"]]],[11,"extent","","",122,[[["self"]],["usize"]]],[11,"exhume","","",122,N],[11,"push","timely::dataflow::channels::pushers::tee","",89,[[["self"],["option"]]]],[11,"push","timely::dataflow::channels::pushers::exchange","",91,[[["self"],["option"]]]],[11,"push","timely::dataflow::channels::pushers::counter","",92,[[["self"],["option"]]]],[11,"push","timely::dataflow::channels::pact","",99,[[["self"],["option"]]]],[11,"pull","","",100,[[["self"]],["option"]]],[11,"index","timely::worker","",16,[[["self"]],["usize"]]],[11,"peers","","",16,[[["self"]],["usize"]]],[11,"allocate","","",16,N],[11,"index","timely::dataflow::scopes::child","",101,[[["self"]],["usize"]]],[11,"peers","","",101,[[["self"]],["usize"]]],[11,"allocate","","",101,N],[11,"from_args","timely::communication::initialize","Constructs a new configuration by parsing supplied text…",0,[[["i"]],["result",["configuration","string"]]]],[11,"try_build","","Attempts to assemble the described communication…",0,[[["self"]],["result",["string"]]]],[11,"new","timely::communication::allocator::thread","Allocates a new pusher and puller pair.",124,N],[11,"inner","timely::communication::allocator::process","Access the wrapped inner allocator.",127,[[["self"]],["thread"]]],[11,"new_vector","","Allocate a list of connected intra-process allocators.",127,[[["usize"]],["vec",["process"]]]],[11,"index","timely::communication::allocator::generic","The index of the worker out of `(0..self.peers())`.",1,[[["self"]],["usize"]]],[11,"peers","","The number of workers.",1,[[["self"]],["usize"]]],[11,"pre_work","","Perform work before scheduling operators.",1,N],[11,"post_work","","Perform work after scheduling operators.",1,N],[11,"new","timely::communication::allocator::zero_copy::bytes_slab","Allocates a new `BytesSlab` with an initial size…",128,[[["usize"]],["bytesslab"]]],[11,"empty","","The empty region of the slab.",128,N],[11,"valid","","The valid region of the slab.",128,N],[11,"make_valid","","Marks the next `bytes` bytes as valid.",128,N],[11,"extract","","Extracts the first `bytes` valid bytes.",128,[[["self"],["usize"]],["bytes"]]],[11,"ensure_capacity","","Ensures that `self.empty().len()` is at least `capacity`.",128,N],[11,"new","timely::communication::allocator::zero_copy::bytes_exchange","Creates a new signal.",129,[[],["signal"]]],[11,"wait","","Blocks unless or until ping is called.",129,N],[11,"ping","","Unblocks the current or next call to wait.",129,N],[11,"new","","Allocates a new queue with an associated signal.",130,[[["signal"]],["mergequeue"]]],[11,"is_complete","","Indicates that all input handles to the queue have dropped.",130,[[["self"]],["bool"]]],[11,"new","","Allocates a new `BytesSendEndpoint` from a shared queue.",131,[[["p"]],["sendendpoint"]]],[11,"make_valid","","Makes the next `bytes` bytes valid.",131,N],[11,"reserve","","Acquires a prefix of `self.empty()` of length at least…",131,N],[11,"publish","","Marks all written data as valid, makes visible.",131,N],[11,"build","timely::communication::allocator::zero_copy::allocator","Builds a `TcpAllocator`, instantiating `Rc<RefCell<_>>`…",132,[[["self"]],["tcpallocator"]]],[11,"new_vector","timely::communication::allocator::zero_copy::allocator_process","Creates a vector of builders, sharing appropriate state.",134,[[["usize"]],["vec",["processbuilder"]]]],[11,"build","","Builds a `ProcessAllocator`, instantiating…",134,[[["self"]],["processallocator"]]],[11,"new","timely::communication::allocator::zero_copy::push_pull","Creates a new `Pusher` from a header and shared byte buffer.",137,[[["messageheader"],["rc",["refcell"]]],["pusher"]]],[11,"new","","Creates a new `Puller` instance from a shared queue.",138,[[["rc",["refcell"]]],["puller"]]],[11,"new","","Creates a new `PullerInner` instance from a shared queue.",139,[[["box",["pull"]],["rc",["refcell"]]],["pullerinner"]]],[11,"try_read","timely::communication::networking","Returns a header when there is enough supporting data",7,N],[11,"write_to","","Writes the header as binary data.",7,[[["self"],["w"]],["result",["error"]]]],[11,"required_bytes","","The number of bytes required for the header and data.",7,[[["self"]],["usize"]]],[11,"join","timely::communication::initialize","Waits on the worker threads and returns the results they…",140,[[["self"]],["vec",["result"]]]],[11,"swap","timely::communication::message","Extracts the contents of `self`, either by cloning or…",12,N],[11,"replace","","Extracts the contents of `self`, either by cloning or…",12,[[["self"],["t"]],["t"]]],[11,"from_typed","","Wrap a typed item as a message.",141,[[["t"]],["message"]]],[11,"if_typed","","Destructures and returns any typed data.",141,[[["self"]],["option"]]],[11,"if_mut","","Returns a mutable reference, if typed.",141,[[["self"]],["option"]]],[11,"from_bytes","","Wrap bytes as a message.",141,[[["bytes"]],["message"]]],[11,"as_ref_or_mut","","Returns an immutable or mutable typed reference.",141,[[["self"]],["reformut"]]],[11,"length_in_bytes","","The number of bytes required to serialize the data.",141,[[["self"]],["usize"]]],[11,"into_bytes","","Writes the binary representation into `writer`.",141,N],[11,"into_typed","","Produces a typed instance of the wrapped element.",141,[[["self"]],["t"]]],[11,"as_mut","","Ensures the message is typed data and returns a mutable…",141,[[["self"]],["t"]]],[11,"from","timely::bytes::rc","Create a new instance from a byte allocation.",142,[[["b"]],["bytes"]]],[11,"extract_to","","Extracts [0, index) into a new `Bytes` which is returned,…",142,[[["self"],["usize"]],["bytes"]]],[11,"try_recover","","Recover the underlying storage.",142,[[["self"]],["result",["bytes"]]]],[11,"from","timely::bytes::arc","Create a new instance from a byte allocation.",143,[[["b"]],["bytes"]]],[11,"extract_to","","Extracts [0, index) into a new `Bytes` which is returned,…",143,[[["self"],["usize"]],["bytes"]]],[11,"try_recover","","Recover the underlying storage.",143,[[["self"]],["result",["bytes"]]]],[11,"try_regenerate","","Regenerates the Bytes if it is uniquely held.",143,[[["self"]],["bool"]]],[11,"try_merge","","Attempts to merge adjacent slices from the same allocation.",143,[[["self"],["bytes"]],["result",["bytes"]]]],[11,"insert","timely::logging_core","Binds a log name to an action on log event batches.",144,[[["self"],["str"],["f"]],["option",["box"]]]],[11,"remove","","Removes a bound logger.",144,[[["self"],["str"]],["option",["box"]]]],[11,"get","","Retrieves a shared logger, if one has been inserted.",144,[[["self"],["str"]],["option",["logger"]]]],[11,"new","","Creates a new logger registry.",144,[[["instant"],["id"]],["registry"]]],[11,"flush","","Flushes all registered logs.",144,N],[11,"new","","Allocates a new shareable logger bound to a write…",145,[[["instant"],["e"],["f"]],["logger"]]],[11,"log","","Logs an event.",145,N],[11,"flush","","Flushes logged messages and communicates the new minimal…",145,N]],"paths":[[4,"Configuration"],[4,"Generic"],[4,"GenericBuilder"],[8,"BytesPush"],[8,"BytesPull"],[8,"AllocateBuilder"],[8,"Allocate"],[3,"MessageHeader"],[3,"CommunicationSetup"],[4,"CommunicationEvent"],[3,"MessageEvent"],[3,"StateEvent"],[4,"RefOrMut"],[8,"Push"],[8,"Pull"],[8,"AsWorker"],[3,"Worker"],[3,"ChangeBatch"],[3,"Antichain"],[3,"MutableAntichain"],[3,"AntichainRef"],[3,"PointstampCounter"],[4,"Summary"],[3,"Product"],[3,"Source"],[3,"Target"],[3,"SubgraphBuilder"],[3,"Subgraph"],[3,"Summary"],[3,"Builder"],[3,"Tracker"],[3,"Builder"],[3,"Tracker"],[8,"Timestamp"],[8,"PathSummary"],[3,"RootTimestamp"],[8,"Operate"],[3,"Progcaster"],[8,"Enter"],[8,"EnterAt"],[8,"Leave"],[8,"Input"],[3,"Handle"],[3,"IteratorSourceInput"],[8,"UnorderedInput"],[3,"UnorderedHandle"],[8,"LoopVariable"],[8,"ConnectLoop"],[8,"Concat"],[8,"Concatenate"],[8,"Partition"],[8,"Map"],[8,"Inspect"],[8,"Filter"],[8,"Delay"],[8,"Exchange"],[8,"Broadcast"],[8,"Probe"],[3,"Handle"],[8,"ToStream"],[8,"Capture"],[8,"Replay"],[8,"Extract"],[4,"Event"],[3,"EventLink"],[3,"EventWriter"],[3,"EventReader"],[8,"EventIterator"],[8,"EventPusher"],[8,"Branch"],[8,"BranchWhen"],[8,"StateMachine"],[8,"Aggregate"],[3,"FrontieredInputHandle"],[3,"OperatorInfo"],[8,"Operator"],[3,"OperatorBuilder"],[3,"OperatorShape"],[3,"OperatorBuilder"],[3,"InputHandle"],[3,"OutputHandle"],[3,"Notificator"],[3,"FrontierNotificator"],[8,"Reclock"],[8,"Accumulate"],[3,"Capability"],[3,"CapabilityRef"],[3,"CapabilitySet"],[3,"Message"],[3,"Tee"],[3,"TeeHelper"],[3,"Exchange"],[3,"Counter"],[3,"Buffer"],[3,"Session"],[3,"AutoflushSession"],[3,"Counter"],[8,"ParallelizationContract"],[3,"Exchange"],[3,"LogPusher"],[3,"LogPuller"],[3,"Child"],[8,"ScopeParent"],[8,"Scope"],[3,"Stream"],[3,"Barrier"],[3,"Sequencer"],[8,"PartialOrder"],[3,"OperatesEvent"],[3,"ChannelsEvent"],[3,"ProgressEvent"],[3,"PushProgressEvent"],[3,"MessagesEvent"],[3,"ScheduleEvent"],[3,"ApplicationEvent"],[3,"GuardedMessageEvent"],[3,"GuardedProgressEvent"],[3,"TimelySetup"],[3,"CommChannelsEvent"],[3,"InputEvent"],[4,"StartStop"],[4,"CommChannelKind"],[4,"TimelyEvent"],[3,"BatchLogger"],[3,"Thread"],[3,"Pusher"],[3,"Puller"],[3,"Process"],[3,"BytesSlab"],[3,"Signal"],[3,"MergeQueue"],[3,"SendEndpoint"],[3,"TcpBuilder"],[3,"TcpAllocator"],[3,"ProcessBuilder"],[3,"ProcessAllocator"],[3,"CommsGuard"],[3,"Pusher"],[3,"Puller"],[3,"PullerInner"],[3,"WorkerGuards"],[3,"Message"],[3,"Bytes"],[3,"Bytes"],[3,"Registry"],[3,"Logger"],[3,"RootSummary"],[3,"Handle"],[3,"Pipeline"]]};
searchIndex["timely_bytes"]={"doc":"A simplified implementation of the `bytes` crate, with…","items":[[0,"rc","timely_bytes","An `Rc`-backed mutable byte slice backed by a common…",N,N],[3,"Bytes","timely_bytes::rc","A thread-local byte buffer backed by a shared allocation.",N,N],[11,"from","","Create a new instance from a byte allocation.",0,[[["b"]],["bytes"]]],[11,"extract_to","","Extracts [0, index) into a new `Bytes` which is returned,…",0,[[["self"],["usize"]],["bytes"]]],[11,"try_recover","","Recover the underlying storage.",0,[[["self"]],["result",["bytes"]]]],[0,"arc","timely_bytes","An `Arc`-backed mutable byte slice backed by a common…",N,N],[3,"Bytes","timely_bytes::arc","A thread-safe byte buffer backed by a shared allocation.",N,N],[11,"from","","Create a new instance from a byte allocation.",1,[[["b"]],["bytes"]]],[11,"extract_to","","Extracts [0, index) into a new `Bytes` which is returned,…",1,[[["self"],["usize"]],["bytes"]]],[11,"try_recover","","Recover the underlying storage.",1,[[["self"]],["result",["bytes"]]]],[11,"try_regenerate","","Regenerates the Bytes if it is uniquely held.",1,[[["self"]],["bool"]]],[11,"try_merge","","Attempts to merge adjacent slices from the same allocation.",1,[[["self"],["bytes"]],["result",["bytes"]]]],[11,"from","timely_bytes::rc","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","timely_bytes::arc","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"deref_mut","timely_bytes::rc","",0,N],[11,"deref_mut","timely_bytes::arc","",1,N],[11,"deref","timely_bytes::rc","",0,N],[11,"deref","timely_bytes::arc","",1,N]],"paths":[[3,"Bytes"],[3,"Bytes"]]};
searchIndex["timely_communication"]={"doc":"A simple communication infrastructure providing typed…","items":[[0,"allocator","timely_communication","Types and traits for the allocation of channels.",N,N],[0,"thread","timely_communication::allocator","Intra-thread communication.",N,N],[3,"Thread","timely_communication::allocator::thread","An allocator for intra-thread communication.",N,N],[3,"Pusher","","The push half of an intra-thread channel.",N,N],[3,"Puller","","The pull half of an intra-thread channel.",N,N],[11,"new","","Allocates a new pusher and puller pair.",0,N],[0,"process","timely_communication::allocator","Typed inter-thread, intra-process channels.",N,N],[3,"Process","timely_communication::allocator::process","An allocater for inter-thread, intra-process communication",N,N],[11,"inner","","Access the wrapped inner allocator.",1,[[["self"]],["thread"]]],[11,"new_vector","","Allocate a list of connected intra-process allocators.",1,[[["usize"]],["vec",["process"]]]],[0,"generic","timely_communication::allocator","A generic allocator, wrapping known implementors of…",N,N],[4,"Generic","timely_communication::allocator::generic","Enumerates known implementors of `Allocate`. Passes trait…",N,N],[13,"Thread","","Intra-thread allocator.",2,N],[13,"Process","","Inter-thread, intra-process allocator.",2,N],[13,"ProcessBinary","","Inter-thread, intra-process serializing allocator.",2,N],[13,"ZeroCopy","","Inter-process allocator.",2,N],[4,"GenericBuilder","","Enumerations of constructable implementors of `Allocate`.",N,N],[13,"Thread","","Builder for `Thread` allocator.",3,N],[13,"Process","","Builder for `Process` allocator.",3,N],[13,"ProcessBinary","","Builder for `ProcessBinary` allocator.",3,N],[13,"ZeroCopy","","Builder for `ZeroCopy` allocator.",3,N],[11,"index","","The index of the worker out of `(0..self.peers())`.",2,[[["self"]],["usize"]]],[11,"peers","","The number of workers.",2,[[["self"]],["usize"]]],[11,"pre_work","","Perform work before scheduling operators.",2,[[["self"]]]],[11,"post_work","","Perform work after scheduling operators.",2,[[["self"]]]],[0,"zero_copy","timely_communication::allocator","Allocators based on serialized data which avoid copies.",N,N],[0,"bytes_slab","timely_communication::allocator::zero_copy","A large binary allocation for writing and sharing.",N,N],[3,"BytesSlab","timely_communication::allocator::zero_copy::bytes_slab","A large binary allocation for writing and sharing.",N,N],[11,"new","","Allocates a new `BytesSlab` with an initial size…",4,[[["usize"]],["self"]]],[11,"empty","","The empty region of the slab.",4,N],[11,"valid","","The valid region of the slab.",4,N],[11,"make_valid","","Marks the next `bytes` bytes as valid.",4,[[["self"],["usize"]]]],[11,"extract","","Extracts the first `bytes` valid bytes.",4,[[["self"],["usize"]],["bytes"]]],[11,"ensure_capacity","","Ensures that `self.empty().len()` is at least `capacity`.",4,[[["self"],["usize"]]]],[0,"bytes_exchange","timely_communication::allocator::zero_copy","Types and traits for sharing `Bytes`.",N,N],[3,"Signal","timely_communication::allocator::zero_copy::bytes_exchange","A signal appropriate to wake a single thread.",N,N],[3,"MergeQueue","","Who knows.",N,N],[3,"SendEndpoint","","A `BytesPush` wrapper which stages writes.",N,N],[8,"BytesPush","","A target for `Bytes`.",N,N],[10,"extend","","Pushes many bytes at the instance.",5,[[["self"],["i"]]]],[8,"BytesPull","","A source for `Bytes`.",N,N],[10,"drain_into","","Drains many bytes from the instance.",6,[[["self"],["vec"]]]],[11,"new","","Creates a new signal.",7,[[],["self"]]],[11,"wait","","Blocks unless or until ping is called.",7,[[["self"]]]],[11,"ping","","Unblocks the current or next call to wait.",7,[[["self"]]]],[11,"new","","Allocates a new queue with an associated signal.",8,[[["signal"]],["self"]]],[11,"is_complete","","Indicates that all input handles to the queue have dropped.",8,[[["self"]],["bool"]]],[11,"new","","Allocates a new `BytesSendEndpoint` from a shared queue.",9,[[["p"]],["self"]]],[11,"make_valid","","Makes the next `bytes` bytes valid.",9,[[["self"],["usize"]]]],[11,"reserve","","Acquires a prefix of `self.empty()` of length at least…",9,N],[11,"publish","","Marks all written data as valid, makes visible.",9,[[["self"]]]],[0,"tcp","timely_communication::allocator::zero_copy","",N,N],[5,"recv_loop","timely_communication::allocator::zero_copy::tcp","Repeatedly reads from a TcpStream and carves out messages.",N,[[["tcpstream"],["vec",["mergequeue"]],["usize"],["usize"],["usize"],["option",["logger"]]]]],[5,"send_loop","","Repeatedly sends messages into a TcpStream.",N,[[["tcpstream"],["vec",["mergequeue"]],["signal"],["usize"],["usize"],["option",["logger"]]]]],[0,"allocator","timely_communication::allocator::zero_copy","Zero-copy allocator based on TCP.",N,N],[3,"TcpBuilder","timely_communication::allocator::zero_copy::allocator","Builds an instance of a TcpAllocator.",N,N],[3,"TcpAllocator","","A TCP-based allocator for inter-process communication.",N,N],[5,"new_vector","","Creates a vector of builders, sharing appropriate state.",N,N],[11,"build","","Builds a `TcpAllocator`, instantiating `Rc<RefCell<_>>`…",10,[[["self"]],["tcpallocator"]]],[0,"allocator_process","timely_communication::allocator::zero_copy","Zero-copy allocator for intra-process serialized…",N,N],[3,"ProcessBuilder","timely_communication::allocator::zero_copy::allocator_process","Builds an instance of a ProcessAllocator.",N,N],[3,"ProcessAllocator","","A serializing allocator for inter-thread intra-process…",N,N],[11,"new_vector","","Creates a vector of builders, sharing appropriate state.",11,[[["usize"]],["vec",["processbuilder"]]]],[11,"build","","Builds a `ProcessAllocator`, instantiating…",11,[[["self"]],["processallocator"]]],[0,"initialize","timely_communication::allocator::zero_copy","Network initialization.",N,N],[3,"CommsGuard","timely_communication::allocator::zero_copy::initialize","Join handles for send and receive threads.",N,N],[5,"initialize_networking","","Initializes network connections",N,[[["vec",["string"]],["usize"],["usize"],["bool"],["box",["fn"]]],["result"]]],[0,"push_pull","timely_communication::allocator::zero_copy","Push and Pull implementations wrapping serialized data.",N,N],[3,"Pusher","timely_communication::allocator::zero_copy::push_pull","An adapter into which one may push elements of type `T`.",N,N],[3,"Puller","","An adapter from which one can pull elements of type `T`.",N,N],[3,"PullerInner","","An adapter from which one can pull elements of type `T`.",N,N],[11,"new","","Creates a new `Pusher` from a header and shared byte buffer.",12,[[["messageheader"],["rc",["refcell"]]],["pusher"]]],[11,"new","","Creates a new `Puller` instance from a shared queue.",13,[[["rc",["refcell"]]],["puller"]]],[11,"new","","Creates a new `PullerInner` instance from a shared queue.",14,[[["box",["pull"]],["rc",["refcell"]]],["self"]]],[8,"AllocateBuilder","timely_communication::allocator","A proto-allocator, which implements `Send` and can be…",N,N],[16,"Allocator","","The type of built allocator.",15,N],[10,"build","","Builds allocator, consumes self.",15,N],[8,"Allocate","","A type capable of allocating channels.",N,N],[10,"index","","The index of the worker out of `(0..self.peers())`.",16,[[["self"]],["usize"]]],[10,"peers","","The number of workers.",16,[[["self"]],["usize"]]],[10,"allocate","","Constructs several send endpoints and one receive endpoint.",16,N],[11,"pre_work","","Work performed before scheduling dataflows.",16,[[["self"]]]],[11,"post_work","","Work performed after scheduling dataflows.",16,[[["self"]]]],[0,"networking","timely_communication","Networking code for sending and receiving fixed size…",N,N],[3,"MessageHeader","timely_communication::networking","Framing data for each `Vec<u8>` transmission, indicating a…",N,N],[12,"channel","","index of channel.",17,N],[12,"source","","index of worker sending message.",17,N],[12,"target","","index of worker receiving message.",17,N],[12,"length","","number of bytes in message.",17,N],[12,"seqno","","sequence number.",17,N],[5,"create_sockets","","Creates socket connections from a list of host addresses.",N,[[["vec",["string"]],["usize"],["bool"]],["result",["vec"]]]],[5,"start_connections","","Result contains connections [0, my_index - 1].",N,[[["arc",["vec"]],["usize"],["bool"]],["result",["vec"]]]],[5,"await_connections","","Result contains connections [my_index + 1, addresses.len()…",N,[[["arc",["vec"]],["usize"],["bool"]],["result",["vec"]]]],[11,"try_read","","Returns a header when there is enough supporting data",17,N],[11,"write_to","","Writes the header as binary data.",17,[[["self"],["w"]],["result"]]],[11,"required_bytes","","The number of bytes required for the header and data.",17,[[["self"]],["usize"]]],[0,"initialize","timely_communication","Initialization logic for a generic instance of the…",N,N],[3,"WorkerGuards","timely_communication::initialize","Maintains `JoinHandle`s for worker threads.",N,N],[4,"Configuration","","Possible configurations for the communication…",N,N],[13,"Thread","","Use one thread.",18,N],[13,"Process","","Use one process with an indicated number of threads.",18,N],[13,"Cluster","","Expect multiple processes indicated by `(threads, process,…",18,N],[5,"initialize","","Initializes communication and executes a distributed…",N,[[["configuration"],["f"]],["result",["workerguards","string"]]]],[5,"initialize_from","","Initializes computation and runs a distributed computation.",N,[[["vec"],["box",["any"]],["f"]],["result",["workerguards","string"]]]],[11,"from_args","","Constructs a new configuration by parsing supplied text…",18,[[["i"]],["result",["configuration","string"]]]],[11,"try_build","","Attempts to assemble the described communication…",18,[[["self"]],["result",["string"]]]],[11,"join","","Waits on the worker threads and returns the results they…",19,[[["self"]],["vec",["result"]]]],[0,"logging","timely_communication","Configuration and events for communication logging.",N,N],[3,"CommunicationSetup","timely_communication::logging","Configuration information about a communication thread.",N,N],[12,"sender","","True when this is a send thread (or the receive thread).",20,N],[12,"process","","The process id of the thread.",20,N],[12,"remote","","The remote process id.",20,N],[3,"MessageEvent","","An observed message.",N,N],[12,"is_send","","true for send event, false for receive event",21,N],[12,"header","","associated message header.",21,N],[3,"StateEvent","","Starting or stopping communication threads.",N,N],[12,"send","","Is the thread a send (vs a recv) thread.",22,N],[12,"process","","The host process id.",22,N],[12,"remote","","The remote process id.",22,N],[12,"start","","Is the thread starting or stopping.",22,N],[4,"CommunicationEvent","","Various communication events.",N,N],[13,"Message","","An observed message.",23,N],[13,"State","","A state transition.",23,N],[0,"message","timely_communication","Types wrapping typed data.",N,N],[3,"Message","timely_communication::message","A wrapped message which may be either typed or binary data.",N,N],[4,"RefOrMut","","Either an immutable or mutable reference.",N,N],[13,"Ref","","An immutable reference.",24,N],[13,"Mut","","A mutable reference.",24,N],[11,"swap","","Extracts the contents of `self`, either by cloning or…",24,[[["self"],["t"]]]],[11,"replace","","Extracts the contents of `self`, either by cloning or…",24,[[["self"],["t"]],["t"]]],[11,"from_typed","","Wrap a typed item as a message.",25,[[["t"]],["self"]]],[11,"if_typed","","Destructures and returns any typed data.",25,[[["self"]],["option"]]],[11,"if_mut","","Returns a mutable reference, if typed.",25,[[["self"]],["option"]]],[11,"from_bytes","","Wrap bytes as a message.",25,[[["bytes"]],["self"]]],[11,"as_ref_or_mut","","Returns an immutable or mutable typed reference.",25,[[["self"]],["reformut"]]],[11,"length_in_bytes","","The number of bytes required to serialize the data.",25,[[["self"]],["usize"]]],[11,"into_bytes","","Writes the binary representation into `writer`.",25,[[["self"],["w"]]]],[11,"into_typed","","Produces a typed instance of the wrapped element.",25,[[["self"]],["t"]]],[11,"as_mut","","Ensures the message is typed data and returns a mutable…",25,[[["self"]],["t"]]],[8,"Data","timely_communication","A composite trait for types that may be used with channels.",N,N],[8,"Push","","Pushing elements of type `T`.",N,N],[10,"push","","Pushes `element` and provides the opportunity to take…",26,[[["self"],["option"]]]],[11,"send","","Pushes `element` and drops any resulting resources.",26,[[["self"],["t"]]]],[11,"done","","Pushes `None`, conventionally signalling a flush.",26,[[["self"]]]],[8,"Pull","","Pulling elements of type `T`.",N,N],[10,"pull","","Pulls an element and provides the opportunity to take…",27,[[["self"]],["option"]]],[11,"recv","","Takes an `Option<T>` and leaves `None` behind.",27,[[["self"]],["option"]]],[11,"from","timely_communication::allocator::thread","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::process","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::generic","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::zero_copy::bytes_slab","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::zero_copy::bytes_exchange","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::zero_copy::allocator","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::zero_copy::allocator_process","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::zero_copy::initialize","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","timely_communication::allocator::zero_copy::push_pull","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","timely_communication::networking","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","timely_communication::initialize","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","timely_communication::logging","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","timely_communication::message","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"extend","timely_communication::allocator::zero_copy::bytes_exchange","",8,[[["self"],["i"]]]],[11,"drain_into","","",8,[[["self"],["vec"]]]],[11,"build","timely_communication::allocator::thread","",0,[[["self"]],["self"]]],[11,"build","timely_communication::allocator::process","",1,[[["self"]],["self"]]],[11,"build","timely_communication::allocator::generic","",3,[[["self"]],["generic"]]],[11,"build","timely_communication::allocator::zero_copy::allocator_process","Builds allocator, consumes self.",11,N],[11,"index","timely_communication::allocator::thread","",0,[[["self"]],["usize"]]],[11,"peers","","",0,[[["self"]],["usize"]]],[11,"allocate","","",0,N],[11,"index","timely_communication::allocator::process","",1,[[["self"]],["usize"]]],[11,"peers","","",1,[[["self"]],["usize"]]],[11,"allocate","","",1,N],[11,"index","timely_communication::allocator::generic","",2,[[["self"]],["usize"]]],[11,"peers","","",2,[[["self"]],["usize"]]],[11,"allocate","","",2,N],[11,"pre_work","","",2,[[["self"]]]],[11,"post_work","","",2,[[["self"]]]],[11,"index","timely_communication::allocator::zero_copy::allocator","",30,[[["self"]],["usize"]]],[11,"peers","","",30,[[["self"]],["usize"]]],[11,"allocate","","",30,N],[11,"pre_work","","",30,[[["self"]]]],[11,"post_work","","",30,[[["self"]]]],[11,"index","timely_communication::allocator::zero_copy::allocator_process","",31,[[["self"]],["usize"]]],[11,"peers","","",31,[[["self"]],["usize"]]],[11,"allocate","","",31,N],[11,"pre_work","","",31,[[["self"]]]],[11,"post_work","","",31,[[["self"]]]],[11,"push","timely_communication::allocator::thread","",28,[[["self"],["option"]]]],[11,"push","timely_communication::allocator::zero_copy::push_pull","",12,[[["self"],["option"]]]],[11,"pull","timely_communication::allocator::thread","",29,[[["self"]],["option"]]],[11,"pull","timely_communication::allocator::zero_copy::push_pull","",13,[[["self"]],["option"]]],[11,"pull","","",14,[[["self"]],["option"]]],[11,"eq","timely_communication::logging","",20,[[["self"],["communicationsetup"]],["bool"]]],[11,"ne","","",20,[[["self"],["communicationsetup"]],["bool"]]],[11,"clone","timely_communication::allocator::zero_copy::bytes_exchange","",7,[[["self"]],["signal"]]],[11,"clone","","",8,[[["self"]],["mergequeue"]]],[11,"clone","timely_communication::networking","",17,[[["self"]],["messageheader"]]],[11,"clone","timely_communication::logging","",20,[[["self"]],["communicationsetup"]]],[11,"clone","","",23,[[["self"]],["communicationevent"]]],[11,"clone","","",21,[[["self"]],["messageevent"]]],[11,"clone","","",22,[[["self"]],["stateevent"]]],[11,"from","","",23,[[["messageevent"]],["communicationevent"]]],[11,"from","","",23,[[["stateevent"]],["communicationevent"]]],[11,"drop","timely_communication::allocator::zero_copy::bytes_exchange","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","timely_communication::allocator::zero_copy::initialize","",32,[[["self"]]]],[11,"drop","timely_communication::initialize","",19,[[["self"]]]],[11,"fmt","timely_communication::networking","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","timely_communication::logging","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"hash","","",20,N],[11,"deref","timely_communication::message","",24,N],[11,"deref","","",25,N],[11,"entomb","timely_communication::networking","",17,[[["self"],["w"]],["result"]]],[11,"extent","","",17,[[["self"]],["usize"]]],[11,"exhume","","",17,N],[11,"entomb","timely_communication::logging","",20,[[["self"],["w"]],["result"]]],[11,"extent","","",20,[[["self"]],["usize"]]],[11,"exhume","","",20,N],[11,"entomb","","",23,[[["self"],["w"]],["result"]]],[11,"extent","","",23,[[["self"]],["usize"]]],[11,"exhume","","",23,N],[11,"entomb","","",21,[[["self"],["w"]],["result"]]],[11,"extent","","",21,[[["self"]],["usize"]]],[11,"exhume","","",21,N],[11,"entomb","","",22,[[["self"],["w"]],["result"]]],[11,"extent","","",22,[[["self"]],["usize"]]],[11,"exhume","","",22,N]],"paths":[[3,"Thread"],[3,"Process"],[4,"Generic"],[4,"GenericBuilder"],[3,"BytesSlab"],[8,"BytesPush"],[8,"BytesPull"],[3,"Signal"],[3,"MergeQueue"],[3,"SendEndpoint"],[3,"TcpBuilder"],[3,"ProcessBuilder"],[3,"Pusher"],[3,"Puller"],[3,"PullerInner"],[8,"AllocateBuilder"],[8,"Allocate"],[3,"MessageHeader"],[4,"Configuration"],[3,"WorkerGuards"],[3,"CommunicationSetup"],[3,"MessageEvent"],[3,"StateEvent"],[4,"CommunicationEvent"],[4,"RefOrMut"],[3,"Message"],[8,"Push"],[8,"Pull"],[3,"Pusher"],[3,"Puller"],[3,"TcpAllocator"],[3,"ProcessAllocator"],[3,"CommsGuard"]]};
searchIndex["timely_logging"]={"doc":"","items":[[3,"Registry","timely_logging","",N,N],[3,"Logger","","A buffering logger.",N,N],[11,"insert","","Binds a log name to an action on log event batches.",0,[[["self"],["str"],["f"]],["option",["box"]]]],[11,"remove","","Removes a bound logger.",0,[[["self"],["str"]],["option",["box"]]]],[11,"get","","Retrieves a shared logger, if one has been inserted.",0,[[["self"],["str"]],["option",["logger"]]]],[11,"new","","Creates a new logger registry.",0,[[["instant"],["id"]],["self"]]],[11,"flush","","Flushes all registered logs.",0,[[["self"]]]],[11,"new","","Allocates a new shareable logger bound to a write…",1,[[["instant"],["e"],["f"]],["self"]]],[11,"log","","Logs an event.",1,[[["self"],["s"]]]],[11,"flush","","Flushes logged messages and communicates the new minimal…",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[3,"Registry"],[3,"Logger"]]};
searchIndex["unicode_width"]={"doc":"Determine displayed width of `char` and `str` types…","items":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",N,N],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",N,N],[10,"width","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[["self"]],["option",["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",N,N],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"paths":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser…","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid…",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
